using System;
using System.Collections.Generic;
using System.Text;

namespace SOCY_MIS.DataAccessLayer
{
    public class DBAlteration
    {
        #region Public
        public static void ClearDataTables()
        {

            #region Variables
            DBConnection dbCon = null;
            string strSQL = string.Empty;
            #endregion Variables

            #region Clear Tables
            try
            {
                dbCon = new DBConnection(utilConstants.cACKConnection);

                #region SQL
                strSQL = "TRUNCATE TABLE ben_activity_training " +
                    "TRUNCATE TABLE ben_activity_training_upload " +
                    "TRUNCATE TABLE ben_activity_training_participant " +
                    "TRUNCATE TABLE ben_activity_training_participant_upload " +
                    "TRUNCATE TABLE ben_apprenticeship_register_line " +
                    "TRUNCATE TABLE ben_apprenticeship_register_line_upload " +
                    "TRUNCATE TABLE ben_girl_education_register " +
                    "TRUNCATE TABLE ben_girl_education_register_upload " +
                    "TRUNCATE TABLE ben_girl_education_register_child " +
                    "TRUNCATE TABLE ben_girl_education_register_child_upload " +
                    "TRUNCATE TABLE ben_service_register " +
                    "TRUNCATE TABLE ben_service_register_upload " +
                    "TRUNCATE TABLE ben_service_register_line " +
                    "TRUNCATE TABLE ben_service_register_line_upload " +
                    "TRUNCATE TABLE ben_service_register_line_social_economic " +
                    "TRUNCATE TABLE ben_service_register_line_social_economic_upload " +
                    "TRUNCATE TABLE ben_value_chain_register " +
                    "TRUNCATE TABLE ben_value_chain_register_upload " +
                    "TRUNCATE TABLE ben_value_chain_register_actor " +
                    "TRUNCATE TABLE ben_value_chain_register_actor_upload " +
                    "TRUNCATE TABLE drm_enrollment " +
                    "TRUNCATE TABLE drm_enrollment_upload " +
                    "TRUNCATE TABLE drm_enrollment_member " +
                    "TRUNCATE TABLE drm_enrollment_member_upload " +
                    "TRUNCATE TABLE drm_enrollment_member_segment " +
                    "TRUNCATE TABLE drm_enrollment_member_segment_upload " +
                    "TRUNCATE TABLE drm_enrollment_member_visit " +
                    "TRUNCATE TABLE drm_enrollment_member_visit_upload " +
                    "TRUNCATE TABLE drm_htc_register " +
                    "TRUNCATE TABLE drm_htc_register_upload " +
                    "TRUNCATE TABLE drm_member " +
                    "TRUNCATE TABLE drm_member_upload " +
                    "TRUNCATE TABLE drm_partner " +
                    "TRUNCATE TABLE drm_partner_upload " +
                    "TRUNCATE TABLE drm_partner_tracking " +
                    "TRUNCATE TABLE drm_partner_tracking_upload " +
                    "TRUNCATE TABLE drm_partner_tracking_service " +
                    "TRUNCATE TABLE drm_partner_tracking_service_upload " +
                    "TRUNCATE TABLE drm_post_violence_care " +
                    "TRUNCATE TABLE drm_post_violence_care_upload " +
                    "TRUNCATE TABLE drm_post_violence_care_line " +
                    "TRUNCATE TABLE drm_post_violence_care_line_upload " +
                    "TRUNCATE TABLE drm_post_violence_care_line_dreams_service " +
                    "TRUNCATE TABLE drm_post_violence_care_line_dreams_service_upload " +
                    "TRUNCATE TABLE drm_post_violence_care_line_service " +
                    "TRUNCATE TABLE drm_post_violence_care_line_service_upload " +
                    "TRUNCATE TABLE drm_sinovuyo_missed_session " +
                    "TRUNCATE TABLE drm_sinovuyo_missed_session_upload " +
                    "TRUNCATE TABLE drm_sinovuyo_register " +
                    "TRUNCATE TABLE drm_sinovuyo_register_upload " +
                    "TRUNCATE TABLE drm_sinovuyo_register_line " +
                    "TRUNCATE TABLE drm_sinovuyo_register_line_upload " +
                    "TRUNCATE TABLE drm_stepping_stones_missed_session " +
                    "TRUNCATE TABLE drm_stepping_stones_missed_session_upload " +
                    "TRUNCATE TABLE drm_stepping_stones_register " +
                    "TRUNCATE TABLE drm_stepping_stones_register_upload " +
                    "TRUNCATE TABLE drm_stepping_stones_register_line " +
                    "TRUNCATE TABLE drm_stepping_stones_register_line_upload " +
                    "TRUNCATE TABLE hh_home_visit " +
                    "TRUNCATE TABLE hh_home_visit_upload " +
                    "TRUNCATE TABLE hh_home_visit_service " +
                    "TRUNCATE TABLE hh_home_visit_service_upload " +
                    "TRUNCATE TABLE hh_home_visit_service_previous " +
                    "TRUNCATE TABLE hh_home_visit_service_previous_upload " +
                    "TRUNCATE TABLE hh_household " +
                    "TRUNCATE TABLE hh_household_upload " +
                    "TRUNCATE TABLE hh_household_assessment " +
                    "TRUNCATE TABLE hh_household_assessment_upload " +
                    "TRUNCATE TABLE hh_household_assessment_member " +
                    "TRUNCATE TABLE hh_household_assessment_member_upload " +
                    "TRUNCATE TABLE hh_household_member " +
                    "TRUNCATE TABLE hh_household_member_upload " +
                    "TRUNCATE TABLE hh_ovc_identification_prioritization " +
                    "TRUNCATE TABLE hh_ovc_identification_prioritization_upload " +
                    "TRUNCATE TABLE hh_referral " +
                    "TRUNCATE TABLE hh_referral_upload " +
                    "TRUNCATE TABLE hh_referral_service_provided " +
                    "TRUNCATE TABLE hh_referral_service_provided_upload " +
                    "TRUNCATE TABLE hh_referral_service_referred " +
                    "TRUNCATE TABLE hh_referral_service_referred_upload " +
                    "TRUNCATE TABLE prt_alternative_care_panel " +
                    "TRUNCATE TABLE prt_alternative_care_panel_upload " +
                    "TRUNCATE TABLE prt_alternative_care_panel_district " +
                    "TRUNCATE TABLE prt_alternative_care_panel_district_upload " +
                    "TRUNCATE TABLE prt_cbsd_resource_allocation " +
                    "TRUNCATE TABLE prt_cbsd_resource_allocation_upload " +
                    "TRUNCATE TABLE prt_cbsd_resource_allocation_district " +
                    "TRUNCATE TABLE prt_cbsd_resource_allocation_district_upload " +
                    "TRUNCATE TABLE prt_cbsd_staff_appraisal_tracking " +
                    "TRUNCATE TABLE prt_cbsd_staff_appraisal_tracking_upload " +
                    "TRUNCATE TABLE prt_cbsd_staff_appraisal_tracking_line " +
                    "TRUNCATE TABLE prt_cbsd_staff_appraisal_tracking_line_upload " +
                    "TRUNCATE TABLE prt_district_ovc_checklist " +
                    "TRUNCATE TABLE prt_district_ovc_checklist_upload " +
                    "TRUNCATE TABLE prt_institutional_care_summary " +
                    "TRUNCATE TABLE prt_institutional_care_summary_upload " +
                    "TRUNCATE TABLE prt_institutional_care_summary_line " +
                    "TRUNCATE TABLE prt_institutional_care_summary_line_upload " +
                    "TRUNCATE TABLE silc_financial_register " +
                    "TRUNCATE TABLE silc_financial_register_upload " +
                    "TRUNCATE TABLE silc_financial_register_group " +
                    "TRUNCATE TABLE silc_financial_register_group_upload " +
                    "TRUNCATE TABLE silc_group " +
                    "TRUNCATE TABLE silc_group_upload " +
                    "TRUNCATE TABLE silc_group_member " +
                    "TRUNCATE TABLE silc_group_member_upload " +
                    "TRUNCATE TABLE silc_savings_register " +
                    "TRUNCATE TABLE silc_savings_register_upload " +
                    "TRUNCATE TABLE silc_savings_register_member " +
                    "TRUNCATE TABLE silc_savings_register_member_upload " +
                    "TRUNCATE TABLE swm_social_worker " +
                    "TRUNCATE TABLE swm_social_worker_upload ";
                dbCon.ExecuteNonQuery(strSQL);
                #endregion SQL
            }
            finally
            {
                dbCon.Dispose();
            }
            #endregion Clear Tables
        }

        public static void CreateTables()
        {
            #region Variables
            DBConnection dbCon = null;
            string strSQL = string.Empty;
            #endregion Variables

            #region Create and Insert
            try
            {
                dbCon = new DBConnection(utilConstants.cACKConnection);
                dbCon.TransactionBegin();

                #region Table Create
                CreateBenActivityTraining(dbCon);
                CreateBenActivityTrainingParticipant(dbCon);
                CreateBenApprenticeshipRegisterLine(dbCon);
                CreateBenGirlEducationRegister(dbCon);
                CreateBenGirlEducationRegisterChild(dbCon);
                CreateBenServiceRegister(dbCon);
                CreateBenServiceRegisterLine(dbCon);
                CreateBenServiceRegisterLineSocialEconomic(dbCon);
                CreateBenValueChainRegister(dbCon);
                CreateBenValueChainRegisterActor(dbCon);
                CreateDRMEnrollment(dbCon);
                CreateDRMEnrollmentMember(dbCon);
                CreateDRMEnrollmentMemberSegment(dbCon);
                CreateDRMEnrollmentMemberVisit(dbCon);
                CreateDRMHTCRegister(dbCon);
                CreateDRMPartner(dbCon);
                CreateDRMPartnerTracking(dbCon);
                CreateDRMPartnerTrackingService(dbCon);
                CreateDRMPostViolenceCare(dbCon);
                CreateDRMPostViolenceCareLine(dbCon);
                CreateDRMPostViolenceCareLineDreamsService(dbCon);
                CreateDRMPostViolenceCareLineService(dbCon);
                CreateDRMMember(dbCon);
                CreateDRMSinovuyoMissedSession(dbCon);
                CreateDRMSinovuyoRegister(dbCon);
                CreateDRMSinovuyoRegisterLine(dbCon);
                CreateDRMSteppingStonesMissedSession(dbCon);
                CreateDRMSteppingStonesRegister(dbCon);
                CreateDRMSteppingStonesRegisterLine(dbCon);
                CreateHhHomeVisit(dbCon);
                CreateHhHomeVisitService(dbCon);
                CreateHhHomeVisitServicePrevious(dbCon);
                CreateHhHousehold(dbCon);
                CreateHhHouseholdAssessment(dbCon);
                CreateHhHouseholdAssessmentMember(dbCon);
                CreateHhHouseholdMember(dbCon);
                CreateHhOVCIdentificationPrioritization(dbCon);
                CreateHhReferral(dbCon);
                CreateHhReferralServiceProvided(dbCon);
                CreateHhReferralServiceReferred(dbCon);
                CreateLstApprenticeshipPartner(dbCon);
                CreateLstCso(dbCon);
                CreateLstDisabilityType(dbCon);
                CreateLstDistrict(dbCon);
                CreateLstDreamsPartnerType(dbCon);
                CreateLstDreamsRecordType(dbCon);
                CreateLstDreamsService(dbCon);
                CreateLstDreamsServiceOther(dbCon);
                CreateLstDreamsSessionAction(dbCon);
                CreateLstDreamsSessionFollowup(dbCon);
                CreateLstDreamsSessionFollowupMethod(dbCon);
                CreateLstEducationLevel(dbCon);
                CreateLstEducationStatus(dbCon);
                CreateLstEntryType(dbCon);
                CreateLstFacility(dbCon);
                CreateLstFinancialSupportType(dbCon);
                CreateLstFinancialYear(dbCon);
                CreateLstGender(dbCon);
                CreateLstGBVType(dbCon);
                CreateLstHivStatus(dbCon);
                CreateLstHonorific(dbCon);
                CreateLstHouseholdStatus(dbCon);
                CreateLstHouseholdStatusReason(dbCon);
                CreateLstIncomeContributor(dbCon);
                CreateLstIncomeSource(dbCon);
                CreateLstInstitution(dbCon);
                CreateLstMaritalStatus(dbCon);
                CreateLstMemberType(dbCon);
                CreateLstOfficeStatus(dbCon);
                CreateLstOfficeType(dbCon);
                CreateLstOftenSometimesNever(dbCon);
                CreateLstOnlineStatus(dbCon);
                CreatelstPartner(dbCon);
                CreateLstParentalStatus(dbCon);
                CreateLstPCAType(dbCon);
                CreateLstProfession(dbCon);
                CreateLstProtection(dbCon);
                CreateLstPVCService(dbCon);
                CreateLstQuarterYear(dbCon);
                CreateLstRecordType(dbCon);
                CreateLstRegion(dbCon);
                CreateLstSegment(dbCon);
                CreateLstSEROStatus(dbCon);
                CreateLstServiceHomeVisit(dbCon);
                CreateLstServiceHomeVisitPrevious(dbCon);
                CreateLstServiceProvided(dbCon);
                CreateLstServiceReferred(dbCon);
                CreateLstSocialEconomic(dbCon);
                CreateLstSocialWorkerStatus(dbCon);
                CreateLstSocialWorkerType(dbCon);
                CreateLstStaffStructure(dbCon);
                CreateLstSubCounty(dbCon);
                CreateLstSyncUpload(dbCon);
                CreateLstTrainingType(dbCon);
                CreateLstVisit(dbCon);
                CreateLstWard(dbCon);
                CreateLstYesNo(dbCon);
                CreateLstYesNoDontKnow(dbCon);
                CreateLstYesNoneSome(dbCon);
                CreateLstYesNoNotAlways(dbCon);
                CreateLstYesNoShared(dbCon);
                CreateLtControl(dbCon);
                CreateLtControlType(dbCon);
                CreateLtExclusion(dbCon);
                CreateLtLanguage(dbCon);
                CreateLtMessage(dbCon);
                CreateLtTable(dbCon);
                CreatePrtAlternativeCarePanel(dbCon);
                CreatePrtAlternativeCarePanelDistrict(dbCon);
                CreatePrtCbsdResourceAllocation(dbCon);
                CreatePrtCbsdResourceAllocationDistrict(dbCon);
                CreatePrtCbsdStaffAppraisalTracking(dbCon);
                CreatePrtCbsdStaffAppraisalTrackingLine(dbCon);
                CreatePrtDistrictOVCChecklist(dbCon);
                CreatePrtInstitutionalCareSummary(dbCon);
                CreatePrtInstitutionalCareSummaryLine(dbCon);
                CreateSilcFinancialRegister(dbCon);
                CreateSilcFinancialRegisterGroup(dbCon);
                CreateSilcGroup(dbCon);
                CreateSilcGroupMember(dbCon);
                CreateSilcSavingsRegister(dbCon);
                CreateSilcSavingsRegisterMember(dbCon);
                CreateSsError(dbCon);
                CreateSwmSocialWorker(dbCon);
                CreateUmApplicationSection(dbCon);
                CreateUmOffice(dbCon);
                CreateUmOfficePermission(dbCon);
                CreateUmPermission(dbCon);
                CreateUmRole(dbCon);
                CreateUmRolePermission(dbCon);
                CreateUmRoleType(dbCon);
                CreateUmUser(dbCon);
                CreateUmUserRole(dbCon);
                #endregion Table Create

                #region Data
                InsertLstApprenticeshipPartner(dbCon);
                InsertLstCSO(dbCon);
                InsertLstDisabilityType(dbCon);
                InsertLstDistrict(dbCon);
                InsertLstDreamsPartnerType(dbCon);
                InsertLstDreamsRecordType(dbCon);
                InsertLstDreamsService(dbCon);
                InsertLstDreamsServiceOther(dbCon);
                InsertLstDreamsSessionAction(dbCon);
                InsertLstDreamsSessionFollowup(dbCon);
                InsertLstDreamsSessionFollowupMethod(dbCon);
                InsertLstEducationLevel(dbCon);
                InsertLstEducationStatus(dbCon);
                InsertLstEntryType(dbCon);
                InsertLstFacility(dbCon);
                InsertLstFinancialSupportType(dbCon);
                InsertLstFinancialYear(dbCon);
                InsertLstGBVType(dbCon);
                InsertLstGender(dbCon);
                InsertLstHIVStatus(dbCon);
                InsertLstHonorific(dbCon);
                InsertLstHouseholdStatus(dbCon);
                InsertLstHouseholdStatusReason(dbCon);
                InsertLstIncomeContributor(dbCon);
                InsertLstIncomeSource(dbCon);
                InsertLstInstitution(dbCon);
                InsertLstMaritalStatus(dbCon);
                InsertLstMemberType(dbCon);
                InsertLstOfficeStatus(dbCon);
                InsertLstOfficeType(dbCon);
                InsertLstOftenSometimesNever(dbCon);
                InsertLstOnlineStatus(dbCon);
                InsertLstParentalStatus(dbCon);
                InsertLstPartner(dbCon);
                InsertLstPCAType(dbCon);
                InsertLstProfession(dbCon);
                InsertLstProtection(dbCon);
                InsertLstPVCService(dbCon);
                InsertLstQuarterYear(dbCon);
                InsertLstRecordType(dbCon);
                InsertLstRegion(dbCon);
                InsertLstSegment(dbCon);
                InsertLstSEROStatus(dbCon);
                InsertLstServiceHomeVisit(dbCon);
                InsertLstServiceHomeVisitPrevious(dbCon);
                InsertLstServiceProvided(dbCon);
                InsertLstServiceReferred(dbCon);
                InsertLstSocialEconomic(dbCon);
                InsertLstSocialWorkerStatus(dbCon);
                InsertLstSocialWorkerType(dbCon);
                InsertLstStaffStructure(dbCon);
                InsertLstSubCounty(dbCon);
                InsertLstSyncUpload(dbCon);
                InsertLstTrainingType(dbCon);
                InsertLstVisit(dbCon);
                InsertLstWard(dbCon);
                InsertLstYesNo(dbCon);
                InsertLstYesNoDontKnow(dbCon);
                InsertLstYesNoneSome(dbCon);
                InsertLstYesNoNotAlways(dbCon);
                InsertLstYesNoShared(dbCon);
                InsertLtExclusion(dbCon);
                InsertLtLanguage(dbCon);
                InsertLtMessage(dbCon);
                InsertLtTable(dbCon);
                InsertUmPermission(dbCon);
                InsertUmRole(dbCon);
                InsertUmRoleType(dbCon);
                InsertUmUserAndUserRole(dbCon);
                #endregion Data
                dbCon.TransactionCommit();
            }
            catch (Exception exc)
            {
                dbCon.TransactionRollback();
                throw exc;
            }
            finally
            {
                dbCon.Dispose();
            }
            #endregion Create and Insert
        }

        public static bool TableExists(string strTable)
        {
            #region Variables
            DBConnection dbCon = null;
            #endregion Variables

            #region Check
            try
            {
                dbCon = new DBConnection(utilConstants.cACKConnection);
                return TableExists(strTable, dbCon);
            }
            finally
            {
                dbCon.Dispose();
            }
            #endregion Check
        }

        public static bool TableExists(string strTable, DBConnection dbCon)
        {
            #region Variables
            bool blnResult = false;
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = string.Format("IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '{0}') SELECT 1 ELSE SELECT 0 ", strTable);
            if (dbCon.ExecuteScalar(strSQL).Equals("1"))
                blnResult = true;
            #endregion SQL

            return blnResult;
        }

        public static void VersionControl(string strVersion, string strUserId)
        {
            #region Variables
            DBConnection dbCon = null;
            umOffice dalOfc = null;

            double dblVersionCurrent = 0;
            double dblVersionNew = Convert.ToDouble(strVersion);
            string strSQL = string.Empty;
            #endregion Variables

            #region Version Control 
            try
            {
                dbCon = new DBConnection(utilConstants.cACKConnection);
                dbCon.TransactionBegin();

                #region Get Current Version
                dalOfc = new umOffice(dbCon);
                dblVersionCurrent = Convert.ToDouble(dalOfc.ofc_app_version);
                #endregion Get Current Version

                if (dblVersionNew > dblVersionCurrent)
                {
                    #region Apply Versions
                    {
                        if (dblVersionCurrent < 3.5)
                        {
                            if (dblVersionCurrent < 3.4)
                            {
                                if (dblVersionCurrent < 3.3)
                                {
                                    if (dblVersionCurrent < 3.2)
                                    {
                                        if (dblVersionCurrent < 3.1)
                                        {
                                            if (dblVersionCurrent < 3.0)
                                            {
                                                if (dblVersionCurrent < 2.6)
                                                {
                                                    if (dblVersionCurrent < 2.5)
                                                    {
                                                        if (dblVersionCurrent < 2.4)
                                                        {
                                                            if (dblVersionCurrent < 2.3)
                                                            {
                                                                if (dblVersionCurrent < 2.2)
                                                                {
                                                                    if (dblVersionCurrent < 2.1)
                                                                    {
                                                                        if (dblVersionCurrent < 2.0)
                                                                        {
                                                                            if (dblVersionCurrent < 1.6)
                                                                            {
                                                                                if (dblVersionCurrent < 1.5)
                                                                                {
                                                                                    if (dblVersionCurrent < 1.4)
                                                                                    {
                                                                                        if (dblVersionCurrent < 1.3)
                                                                                        {
                                                                                            if (dblVersionCurrent < 1.2)
                                                                                            {
                                                                                                Version12(dbCon);
                                                                                            }
                                                                                            Version13(dbCon);
                                                                                        }
                                                                                        Version14(dbCon);
                                                                                    }
                                                                                    Version15(dbCon);
                                                                                }
                                                                                Version16(dbCon);
                                                                            }
                                                                            Version20(dbCon);
                                                                        }
                                                                        Version21(dbCon);
                                                                    }
                                                                    Version22(dbCon);
                                                                }
                                                                Version23(dbCon);
                                                            }
                                                            Version24(dbCon);
                                                        }
                                                        Version25(dbCon);
                                                    }
                                                    Version26(dbCon);
                                                }
                                                //One machine this didn't run, but the version was updated to 2.6. No Idea as it is in a transaction block.
                                                Version26(dbCon);
                                                Version30(dbCon);
                                            }
                                            Version31(dbCon);
                                        }
                                        Version31(dbCon);
                                        Version32(dbCon);
                                    }
                                    Version31(dbCon);
                                    Version32(dbCon);
                                    Version33(dbCon);
                                }
                                Version31(dbCon);
                                Version32(dbCon);
                                Version33(dbCon);
                                Version34(dbCon);
                            }

                            Version35(dbCon);
                        }

                        #endregion Apply Versions

                        #region Update Current Version
                        dalOfc.ofc_app_version = strVersion;
                        dalOfc.usr_id_update = strUserId;
                        dalOfc.Save(dbCon);
                        #endregion Update Current Version
                    }
                   
                }
                Version35(dbCon);
                Updatelst_household_status(dbCon);
                Update_es_trainingType(dbCon);
                prt_subcounty_ovc_checklist_new_column(dbCon);
                NewLstCoordinators(dbCon);
                update_mitooma_subcounty(dbCon);
                Createben_youth_tracer(dbCon);
                Insert_new_sync_upload(dbCon);
                UpdateHousehold_RiskAssessmentTool(dbCon);
                Insertlst_agro_scoring_crops(dbCon);
                CreateNewDistricts(dbCon);
                NewTrainingTypes(dbCon);
                //DropRecreateLstAgro_enterprise_ranking(dbCon); //bushenyi error..should be removed when error is rectified.Should not be in version control

                dbCon.TransactionCommit();
            }
            catch (Exception exc)
            {
                dbCon.TransactionRollback();
                throw exc;
            }
            finally
            {
                dbCon.Dispose();
            }
            #endregion Version Control
        }
        #endregion Public

        #region Private Methods
        #region Create Tables
        private static void CreateBenActivityTraining(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_activity_training')
                DROP TABLE [dbo].[ben_activity_training] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_activity_training](
	            [at_id] [varchar](50) NOT NULL,
	            [at_activity] [varchar](max) NOT NULL,
	            [at_training_for] [varchar](5000) NOT NULL,
	            [at_training_point] [varchar](5000) NOT NULL,
	            [at_date_begin] [datetime] NOT NULL,
	            [at_date_end] [datetime] NOT NULL,
	            [at_days] [int] NOT NULL,
	            [at_session] [int] NOT NULL,
	            [at_coordinator] [varchar](500) NOT NULL,
	            [at_coordinator_tel] [varchar](500) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [ttp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_activity_training] PRIMARY KEY CLUSTERED 
            (
	            [at_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_activity_training_upload')
                DROP TABLE [dbo].[ben_activity_training_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_activity_training_upload](
	            [at_sid] [int] IDENTITY(1,1) NOT NULL,
	            [at_id] [varchar](50) NOT NULL,
	            [at_activity] [varchar](max) NOT NULL,
	            [at_training_for] [varchar](5000) NOT NULL,
	            [at_training_point] [varchar](5000) NOT NULL,
	            [at_date_begin] [datetime] NOT NULL,
	            [at_date_end] [datetime] NOT NULL,
	            [at_days] [int] NOT NULL,
	            [at_session] [int] NOT NULL,
	            [at_coordinator] [varchar](500) NOT NULL,
	            [at_coordinator_tel] [varchar](500) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [ttp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_activity_training_upload] PRIMARY KEY CLUSTERED 
            (
	            [at_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_insert] ON [dbo].[ben_activity_training] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_upload]
                        ([at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_update] ON [dbo].[ben_activity_training] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(at_id) OR UPDATE(at_activity) OR UPDATE(at_training_for) OR UPDATE(at_training_point) OR UPDATE(at_date_begin) OR UPDATE(at_date_end) OR UPDATE(at_days) OR UPDATE(at_session) OR UPDATE(at_coordinator) OR UPDATE(at_coordinator_tel) OR UPDATE(cso_id) OR UPDATE(ttp_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_activity_training_upload]
                           ([at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_delete] ON [dbo].[ben_activity_training] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_upload]
                        ([at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenActivityTrainingParticipant(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_activity_training_participant')
                DROP TABLE [dbo].[ben_activity_training_participant] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_activity_training_participant](
	            [atp_id] [varchar](50) NOT NULL,
	            [atp_name] [varchar](500) NOT NULL,
	            [atp_year_of_birth] [varchar](4) NOT NULL,
	            [atp_days] [int] NOT NULL,
	            [at_id] [varchar](50) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_activity_training_participant] PRIMARY KEY CLUSTERED 
            (
	            [atp_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_activity_training_participant_upload')
                DROP TABLE [dbo].[ben_activity_training_participant_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_activity_training_participant_upload](
	            [atp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [atp_id] [varchar](50) NOT NULL,
	            [atp_name] [varchar](500) NOT NULL,
	            [atp_year_of_birth] [varchar](4) NOT NULL,
	            [atp_days] [int] NOT NULL,
	            [at_id] [varchar](50) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_activity_training_participant_upload] PRIMARY KEY CLUSTERED 
            (
	            [atp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_participant_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_participant_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_participant_insert] ON [dbo].[ben_activity_training_participant] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_participant_upload]
                        ([atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_participant_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_participant_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_participant_update] ON [dbo].[ben_activity_training_participant] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(atp_id) OR UPDATE(atp_name) OR UPDATE(atp_year_of_birth) OR UPDATE(atp_days) OR UPDATE(at_id) OR UPDATE(gnd_id) OR UPDATE(hhm_id) OR UPDATE(mtp_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_activity_training_participant_upload]
                           ([atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_participant_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_participant_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_participant_delete] ON [dbo].[ben_activity_training_participant] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_participant_upload]
                        ([atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenApprenticeshipRegisterLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_apprenticeship_register_line')
                DROP TABLE [dbo].[ben_apprenticeship_register_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_apprenticeship_register_line](
	            [aprl_id] [varchar](50) NOT NULL,
	            [aprl_enterprise] [varchar](5000) NOT NULL,
	            [aprl_date_begin] [datetime] NOT NULL,
	            [aprl_date_complete] [datetime] NOT NULL,
	            [apr_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [apt_id] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_apprenticeship_register_line] PRIMARY KEY CLUSTERED 
            (
	            [aprl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_apprenticeship_register_line_upload')
                DROP TABLE [dbo].[ben_apprenticeship_register_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_apprenticeship_register_line_upload](
	            [aprl_sid] [int] IDENTITY(1,1) NOT NULL,
	            [aprl_id] [varchar](50) NOT NULL,
	            [aprl_enterprise] [varchar](5000) NOT NULL,
	            [aprl_date_begin] [datetime] NOT NULL,
	            [aprl_date_complete] [datetime] NOT NULL,
	            [apr_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [apt_id] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_apprenticeship_register_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [aprl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_register_line_insert] ON [dbo].[ben_apprenticeship_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_register_line_upload]
                        ([aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_register_line_update] ON [dbo].[ben_apprenticeship_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(aprl_id) OR UPDATE(aprl_enterprise) OR UPDATE(aprl_date_begin) OR UPDATE(aprl_date_complete) OR UPDATE(apr_id) OR UPDATE(hhm_id) OR UPDATE(apt_id) OR UPDATE(cso_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_apprenticeship_register_line_upload]
                           ([aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_register_line_delete] ON [dbo].[ben_apprenticeship_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_register_line_upload]
                        ([aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenGirlEducationRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_girl_education_register')
                DROP TABLE [dbo].[ben_girl_education_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_girl_education_register](
	            [ger_id] [varchar](50) NOT NULL,
	            [ger_contact_details] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [sct_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_girl_education_register] PRIMARY KEY CLUSTERED 
            (
	            [ger_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_girl_education_register_upload')
                DROP TABLE [dbo].[ben_girl_education_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_girl_education_register_upload](
	            [ger_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ger_id] [varchar](50) NOT NULL,
	            [ger_contact_details] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [sct_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_girl_education_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [ger_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_insert] ON [dbo].[ben_girl_education_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_upload]
                        ([ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_update] ON [dbo].[ben_girl_education_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ger_id) OR UPDATE(ger_contact_details) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(sct_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_girl_education_register_upload]
                           ([ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id],  
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id],  
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_delete] ON [dbo].[ben_girl_education_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_upload]
                        ([ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenGirlEducationRegisterChild(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_girl_education_register_child')
                DROP TABLE [dbo].[ben_girl_education_register_child] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_girl_education_register_child](
	            [gerc_id] [varchar](50) NOT NULL,
	            [gerc_support_institution] [varchar](5000) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [fst_id] [varchar](50) NOT NULL,
	            [ger_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [hhm_id_caregiver] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_girl_education_register_child] PRIMARY KEY CLUSTERED 
            (
	            [gerc_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_girl_education_register_child_upload')
                DROP TABLE [dbo].[ben_girl_education_register_child_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_girl_education_register_child_upload](
	            [gerc_sid] [int] IDENTITY(1,1) NOT NULL,
	            [gerc_id] [varchar](50) NOT NULL,
	            [gerc_support_institution] [varchar](5000) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [fst_id] [varchar](50) NOT NULL,
	            [ger_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [hhm_id_caregiver] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_girl_education_register_child_upload] PRIMARY KEY CLUSTERED 
            (
	            [gerc_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_child_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_child_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_child_insert] ON [dbo].[ben_girl_education_register_child] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_child_upload]
                        ([gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_child_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_child_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_child_update] ON [dbo].[ben_girl_education_register_child] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(gerc_id) OR UPDATE(gerc_support_institution) OR UPDATE(edu_id) OR UPDATE(fst_id) OR UPDATE(ger_id) OR UPDATE(hhm_id) OR UPDATE(hhm_id_caregiver))
	                BEGIN
		                INSERT INTO [dbo].[ben_girl_education_register_child_upload]
                           ([gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_child_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_child_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_child_delete] ON [dbo].[ben_girl_education_register_child] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_child_upload]
                        ([gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenServiceRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_service_register')
                DROP TABLE [dbo].[ben_service_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_service_register](
	            [svr_id] [varchar](50) NOT NULL,
	            [svr_contact_details] [varchar](500) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_service_register] PRIMARY KEY CLUSTERED 
            (
	            [svr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_service_register_upload')
                DROP TABLE [dbo].[ben_service_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_service_register_upload](
	            [svr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [svr_id] [varchar](50) NOT NULL,
	            [svr_contact_details] [varchar](500) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_service_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [svr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_insert] ON [dbo].[ben_service_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_upload]
                        ([svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_update] ON [dbo].[ben_service_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(svr_id) OR UPDATE(svr_contact_details) OR UPDATE(cso_id) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_service_register_upload]
                           ([svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_delete] ON [dbo].[ben_service_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_upload]
                        ([svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenServiceRegisterLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_service_register_line')
                DROP TABLE [dbo].[ben_service_register_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_service_register_line](
	            [svrl_id] [varchar](50) NOT NULL,
	            [svrl_eco_strength_other] [varchar](5000) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [yn_id_agricalture_advisory] [varchar](50) NOT NULL,
	            [yn_id_apprentice_skills] [varchar](50) NOT NULL,
	            [yn_id_basic_care] [varchar](50) NOT NULL,
	            [yn_id_birth_registration] [varchar](50) NOT NULL,
	            [yn_id_case_handled] [varchar](50) NOT NULL,
	            [yn_id_eco_strength_other] [varchar](50) NOT NULL,
	            [yn_id_newly_enrolled] [varchar](50) NOT NULL,
	            [yn_id_parenting] [varchar](50) NOT NULL,
	            [yn_id_psych_support] [varchar](50) NOT NULL,
	            [yn_id_reintegrated] [varchar](50) NOT NULL,
	            [yn_id_silc_intervention] [varchar](50) NOT NULL,
	            [svr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_service_register_line] PRIMARY KEY CLUSTERED 
            (
	            [svrl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_service_register_line_upload')
                DROP TABLE [dbo].[ben_service_register_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_service_register_line_upload](
	            [svrl_sid] [int] IDENTITY(1,1) NOT NULL,
	            [svrl_id] [varchar](50) NOT NULL,
	            [svrl_eco_strength_other] [varchar](5000) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [yn_id_agricalture_advisory] [varchar](50) NOT NULL,
	            [yn_id_apprentice_skills] [varchar](50) NOT NULL,
	            [yn_id_basic_care] [varchar](50) NOT NULL,
	            [yn_id_birth_registration] [varchar](50) NOT NULL,
	            [yn_id_case_handled] [varchar](50) NOT NULL,
	            [yn_id_eco_strength_other] [varchar](50) NOT NULL,
	            [yn_id_newly_enrolled] [varchar](50) NOT NULL,
	            [yn_id_parenting] [varchar](50) NOT NULL,
	            [yn_id_psych_support] [varchar](50) NOT NULL,
	            [yn_id_reintegrated] [varchar](50) NOT NULL,
	            [yn_id_silc_intervention] [varchar](50) NOT NULL,
	            [svr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_service_register_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [svrl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_insert] ON [dbo].[ben_service_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_upload]
                        ([svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_update] ON [dbo].[ben_service_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(svrl_id) OR UPDATE(svrl_eco_strength_other) OR UPDATE(hhm_id) OR UPDATE(yn_id_agricalture_advisory) OR UPDATE(yn_id_apprentice_skills) OR UPDATE(yn_id_basic_care) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_case_handled) OR UPDATE(yn_id_eco_strength_other) OR UPDATE(yn_id_newly_enrolled) OR UPDATE(yn_id_parenting) OR UPDATE(yn_id_psych_support) OR UPDATE(yn_id_reintegrated) OR UPDATE(yn_id_silc_intervention) OR UPDATE(svr_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_service_register_line_upload]
                           ([svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
		                SELECT [svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_delete] ON [dbo].[ben_service_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_upload]
                        ([svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenServiceRegisterLineSocialEconomic(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_service_register_line_social_economic')
                DROP TABLE [dbo].[ben_service_register_line_social_economic] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_service_register_line_social_economic](
	            [svrlse_id] [varchar](50) NOT NULL,
	            [svrl_id] [varchar](50) NOT NULL,
	            [sec_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_service_register_line_social_economic] PRIMARY KEY CLUSTERED 
            (
	            [svrlse_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_service_register_line_social_economic_upload')
                DROP TABLE [dbo].[ben_service_register_line_social_economic_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_service_register_line_social_economic_upload](
	            [svrlse_sid] [int] IDENTITY(1,1) NOT NULL,
	            [svrlse_id] [varchar](50) NOT NULL,
	            [svrl_id] [varchar](50) NOT NULL,
	            [sec_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_service_register_line_social_economic_upload] PRIMARY KEY CLUSTERED 
            (
	            [svrlse_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_social_economic_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_social_economic_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_social_economic_insert] ON [dbo].[ben_service_register_line_social_economic] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_social_economic_upload]
                        ([svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_social_economic_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_social_economic_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_social_economic_delete] ON [dbo].[ben_service_register_line_social_economic] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_social_economic_upload]
                        ([svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenValueChainRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_value_chain_register')
                DROP TABLE [dbo].[ben_value_chain_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_value_chain_register](
	            [vcr_id] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,	            
                [qy_id] [varchar](50) NOT NULL,
	            [sct_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_value_chain_register] PRIMARY KEY CLUSTERED 
            (
	            [vcr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_value_chain_register_upload')
                DROP TABLE [dbo].[ben_value_chain_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_value_chain_register_upload](
	            [vcr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [vcr_id] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,	            
                [qy_id] [varchar](50) NOT NULL,
	            [sct_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_value_chain_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [vcr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_insert] ON [dbo].[ben_value_chain_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_upload]
                        ([vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_update] ON [dbo].[ben_value_chain_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(vcr_id) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(sct_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_value_chain_register_upload]
							([vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_delete] ON [dbo].[ben_value_chain_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_upload]
                        ([vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateBenValueChainRegisterActor(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_value_chain_register_actor')
                DROP TABLE [dbo].[ben_value_chain_register_actor] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_value_chain_register_actor](
	            [vcra_id] [varchar](50) NOT NULL,
	            [vcra_commodity] [varchar](5000) NOT NULL,
	            [vcra_bds_service] [varchar](5000) NOT NULL,
	            [vcra_id_price] [float] NOT NULL,
	            [vcra_id_qty] [float] NOT NULL,
	            [vcra_id_revenue] [float] NOT NULL,
	            [vcra_pb_price] [float] NOT NULL,
	            [vcra_pb_qty] [float] NOT NULL,
	            [vcra_pb_revenue] [float] NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [vcr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ben_value_chain_register_actor] PRIMARY KEY CLUSTERED 
            (
	            [vcra_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_value_chain_register_actor_upload')
                DROP TABLE [dbo].[ben_value_chain_register_actor_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ben_value_chain_register_actor_upload](
	            [vcra_sid] [int] IDENTITY(1,1) NOT NULL,
	            [vcra_id] [varchar](50) NOT NULL,
	            [vcra_commodity] [varchar](5000) NOT NULL,
	            [vcra_bds_service] [varchar](5000) NOT NULL,
	            [vcra_id_price] [float] NOT NULL,
	            [vcra_id_qty] [float] NOT NULL,
	            [vcra_id_revenue] [float] NOT NULL,
	            [vcra_pb_price] [float] NOT NULL,
	            [vcra_pb_qty] [float] NOT NULL,
	            [vcra_pb_revenue] [float] NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [vcr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ben_value_chain_register_actor_upload] PRIMARY KEY CLUSTERED 
            (
	            [vcra_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_actor_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_actor_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_actor_insert] ON [dbo].[ben_value_chain_register_actor] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_actor_upload]
                        ([vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_actor_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_actor_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_actor_update] ON [dbo].[ben_value_chain_register_actor] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(vcra_id) OR UPDATE(vcra_commodity) OR UPDATE(vcra_bds_service) OR UPDATE(vcra_id_price) OR UPDATE(vcra_id_qty) OR UPDATE(vcra_id_revenue) OR UPDATE(vcra_pb_price) OR UPDATE(vcra_pb_qty) OR UPDATE(vcra_pb_revenue) OR UPDATE(hhm_id) OR UPDATE(vcr_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_value_chain_register_actor_upload]
							([vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_actor_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_actor_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_actor_delete] ON [dbo].[ben_value_chain_register_actor] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_actor_upload]
                        ([vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMEnrollment(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment')
                DROP TABLE [dbo].[drm_enrollment] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment](
	            [de_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [flt_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_enrollment] PRIMARY KEY CLUSTERED 
            (
	            [de_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_upload')
                DROP TABLE [dbo].[drm_enrollment_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_upload](
	            [de_sid] [int] IDENTITY(1,1) NOT NULL,
	            [de_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [flt_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_enrollment_upload] PRIMARY KEY CLUSTERED 
            (
	            [de_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_insert] ON [dbo].[drm_enrollment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_upload]
                        ([de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_update] ON [dbo].[drm_enrollment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(de_id) OR UPDATE(dst_id) OR UPDATE(flt_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_enrollment_upload]
							([de_id], [dst_id], [flt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [de_id], [dst_id], [flt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_delete] ON [dbo].[drm_enrollment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_upload]
                        ([de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMEnrollmentMember(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_member')
                DROP TABLE [dbo].[drm_enrollment_member] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_member](
	            [dem_id] [varchar](50) NOT NULL,
	            [dem_sn] [varchar](50) NOT NULL,
	            [de_id] [varchar](50) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [est_id] [varchar](50) NOT NULL,
	            [pst_id] [varchar](50) NOT NULL,
	            [sst_id] [varchar](50) NOT NULL,
	            [yn_id_disability] [varchar](50) NOT NULL,
	            [yn_id_given_birth] [varchar](50) NOT NULL,
	            [yn_id_married] [varchar](50) NOT NULL,
	            [yn_id_partner] [varchar](50) NOT NULL,
	            [yn_id_pregnant] [varchar](50) NOT NULL,
	            [yn_id_ts] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_enrollment_member] PRIMARY KEY CLUSTERED 
            (
	            [dem_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_member_upload')
                DROP TABLE [dbo].[drm_enrollment_member_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_member_upload](
	            [dem_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dem_id] [varchar](50) NOT NULL,
	            [dem_sn] [varchar](50) NOT NULL,
	            [de_id] [varchar](50) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [est_id] [varchar](50) NOT NULL,
	            [pst_id] [varchar](50) NOT NULL,
	            [sst_id] [varchar](50) NOT NULL,
	            [yn_id_disability] [varchar](50) NOT NULL,
	            [yn_id_given_birth] [varchar](50) NOT NULL,
	            [yn_id_married] [varchar](50) NOT NULL,
	            [yn_id_partner] [varchar](50) NOT NULL,
	            [yn_id_pregnant] [varchar](50) NOT NULL,
	            [yn_id_ts] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_enrollment_member_upload] PRIMARY KEY CLUSTERED 
            (
	            [dem_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_insert] ON [dbo].[drm_enrollment_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_upload]
                        ([dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_update] ON [dbo].[drm_enrollment_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dem_id) OR UPDATE(dem_sn) OR UPDATE(de_id) OR UPDATE(dm_id) OR UPDATE(est_id) OR UPDATE(pst_id) OR UPDATE(sst_id) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_married) OR UPDATE(yn_id_partner) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_ts))
	                BEGIN
		                INSERT INTO [dbo].[drm_enrollment_member_upload]
							([dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_delete] ON [dbo].[drm_enrollment_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_upload]
                        ([dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMEnrollmentMemberSegment(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_member_segment')
                DROP TABLE [dbo].[drm_enrollment_member_segment] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_member_segment](
	            [dems_id] [varchar](50) NOT NULL,
	            [dem_id] [varchar](50) NOT NULL,
	            [sgm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_enrollment_member_segment] PRIMARY KEY CLUSTERED 
            (
	            [dems_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_member_segment_upload')
                DROP TABLE [dbo].[drm_enrollment_member_segment_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_member_segment_upload](
	            [dems_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dems_id] [varchar](50) NOT NULL,
	            [dem_id] [varchar](50) NOT NULL,
	            [sgm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_enrollment_member_segment_upload] PRIMARY KEY CLUSTERED 
            (
	            [dems_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_segment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_segment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_segment_insert] ON [dbo].[drm_enrollment_member_segment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_segment_upload]
                        ([dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_segment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_segment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_segment_delete] ON [dbo].[drm_enrollment_member_segment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_segment_upload]
                        ([dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMEnrollmentMemberVisit(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_member_visit')
                DROP TABLE [dbo].[drm_enrollment_member_visit] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_member_visit](
	            [demv_id] [varchar](50) NOT NULL,
	            [demv_comment] [varchar](max) NOT NULL,
	            [demv_referral] [varchar](max) NOT NULL,
	            [demv_date] [datetime] NOT NULL,
	            [dem_id] [varchar](50) NOT NULL,
	            [vst_id] [varchar](50) NOT NULL,
	            [yn_id_anc] [varchar](50) NOT NULL,
	            [yn_id_art] [varchar](50) NOT NULL,
	            [yn_id_cmnc] [varchar](50) NOT NULL,
	            [yn_id_condom_promotion] [varchar](50) NOT NULL,
	            [yn_id_contraceptive_mix] [varchar](50) NOT NULL,
	            [yn_id_hiv_testing] [varchar](50) NOT NULL,
	            [yn_id_parenting_program] [varchar](50) NOT NULL,
	            [yn_id_post_violence_care] [varchar](50) NOT NULL,
	            [yn_id_school_based_prevention] [varchar](50) NOT NULL,
	            [yn_id_social_economic] [varchar](50) NOT NULL,
	            [yn_id_vmmc] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_enrollment_member_visit] PRIMARY KEY CLUSTERED 
            (
	            [demv_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_enrollment_member_visit_upload')
                DROP TABLE [dbo].[drm_enrollment_member_visit_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_enrollment_member_visit_upload](
	            [demv_sid] [int] IDENTITY(1,1) NOT NULL,
	            [demv_id] [varchar](50) NOT NULL,
	            [demv_comment] [varchar](max) NOT NULL,
	            [demv_referral] [varchar](max) NOT NULL,
	            [demv_date] [datetime] NOT NULL,
	            [dem_id] [varchar](50) NOT NULL,
	            [vst_id] [varchar](50) NOT NULL,
	            [yn_id_anc] [varchar](50) NOT NULL,
	            [yn_id_art] [varchar](50) NOT NULL,
	            [yn_id_cmnc] [varchar](50) NOT NULL,
	            [yn_id_condom_promotion] [varchar](50) NOT NULL,
	            [yn_id_contraceptive_mix] [varchar](50) NOT NULL,
	            [yn_id_hiv_testing] [varchar](50) NOT NULL,
	            [yn_id_parenting_program] [varchar](50) NOT NULL,
	            [yn_id_post_violence_care] [varchar](50) NOT NULL,
	            [yn_id_school_based_prevention] [varchar](50) NOT NULL,
	            [yn_id_social_economic] [varchar](50) NOT NULL,
	            [yn_id_vmmc] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_enrollment_member_visit_upload] PRIMARY KEY CLUSTERED 
            (
	            [demv_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_visit_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_visit_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_visit_insert] ON [dbo].[drm_enrollment_member_visit] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_visit_upload]
                        ([demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_visit_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_visit_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_visit_update] ON [dbo].[drm_enrollment_member_visit] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(demv_id) OR UPDATE(demv_comment) OR UPDATE(demv_referral) OR UPDATE(demv_date) OR UPDATE(dem_id) OR UPDATE(vst_id) OR UPDATE(yn_id_anc) OR UPDATE(yn_id_art) OR UPDATE(yn_id_cmnc) OR UPDATE(yn_id_condom_promotion) OR UPDATE(yn_id_contraceptive_mix) OR UPDATE(yn_id_hiv_testing) OR UPDATE(yn_id_parenting_program) OR UPDATE(yn_id_post_violence_care) OR UPDATE(yn_id_school_based_prevention) OR UPDATE(yn_id_social_economic) OR UPDATE(yn_id_vmmc))
	                BEGIN
		                INSERT INTO [dbo].[drm_enrollment_member_visit_upload]
							([demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_visit_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_visit_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_visit_delete] ON [dbo].[drm_enrollment_member_visit] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_visit_upload]
                        ([demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMMember(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_member')
                DROP TABLE [dbo].[drm_member] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_member](
	            [dm_id] [varchar](50) NOT NULL,
	            [dm_first_name] [varchar](500) NOT NULL,
	            [dm_last_name] [varchar](500) NOT NULL,
	            [dm_id_no] [varchar](50) NOT NULL,
	            [dm_village] [varchar](500) NOT NULL,
	            [dm_phone] [varchar](50) NOT NULL,
	            [dm_status_reason] [varchar](5000) NOT NULL,
	            [dm_active] [bit] NOT NULL,
	            [dm_dob] [datetime] NOT NULL,
	            [dm_registration] [datetime] NOT NULL,
	            [etp_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_member] PRIMARY KEY CLUSTERED 
            (
	            [dm_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_member_upload')
                DROP TABLE [dbo].[drm_member_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_member_upload](
	            [dm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dm_first_name] [varchar](500) NOT NULL,
	            [dm_last_name] [varchar](500) NOT NULL,
	            [dm_id_no] [varchar](50) NOT NULL,
	            [dm_village] [varchar](500) NOT NULL,
	            [dm_phone] [varchar](50) NOT NULL,
	            [dm_status_reason] [varchar](5000) NOT NULL,
	            [dm_active] [bit] NOT NULL,
	            [dm_dob] [datetime] NOT NULL,
	            [dm_registration] [datetime] NOT NULL,
	            [etp_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_member_upload] PRIMARY KEY CLUSTERED 
            (
	            [dm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_member_insert] ON [dbo].[drm_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_member_upload]
                        ([dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_member_update] ON [dbo].[drm_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dm_id) OR UPDATE(dm_first_name) OR UPDATE(dm_last_name) OR UPDATE(dm_id_no) OR UPDATE(dm_village) OR UPDATE(dm_phone) OR UPDATE(dm_status_reason) OR UPDATE(dm_active) OR UPDATE(dm_dob) OR UPDATE(dm_registration) OR UPDATE(etp_id) OR UPDATE(hhm_id) OR UPDATE(mtp_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_member_upload]
							([dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_member_delete] ON [dbo].[drm_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_member_upload]
                        ([dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMHTCRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_htc_register')
                DROP TABLE [dbo].[drm_htc_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_htc_register](
	            [dhr_id] [varchar](50) NOT NULL,
	            [dhr_result_01] [varchar](500) NOT NULL,
	            [dhr_result_01_date] [datetime] NOT NULL,
	            [dhr_result_02] [varchar](500) NOT NULL,
	            [dhr_result_02_date] [datetime] NOT NULL,
	            [dhr_result_03] [varchar](500) NOT NULL,
	            [dhr_result_03_date] [datetime] NOT NULL,
	            [dhr_result_04] [varchar](500) NOT NULL,
	            [dhr_result_04_date] [datetime] NOT NULL,
	            [dhr_result_05] [varchar](500) NOT NULL,
	            [dhr_result_05_date] [datetime] NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_htc_register] PRIMARY KEY CLUSTERED 
            (
	            [dhr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_htc_register_upload')
                DROP TABLE [dbo].[drm_htc_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_htc_register_upload](
	            [dhr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dhr_id] [varchar](50) NOT NULL,
	            [dhr_result_01] [varchar](500) NOT NULL,
	            [dhr_result_01_date] [datetime] NOT NULL,
	            [dhr_result_02] [varchar](500) NOT NULL,
	            [dhr_result_02_date] [datetime] NOT NULL,
	            [dhr_result_03] [varchar](500) NOT NULL,
	            [dhr_result_03_date] [datetime] NOT NULL,
	            [dhr_result_04] [varchar](500) NOT NULL,
	            [dhr_result_04_date] [datetime] NOT NULL,
	            [dhr_result_05] [varchar](500) NOT NULL,
	            [dhr_result_05_date] [datetime] NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_htc_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [dhr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_insert] ON [dbo].[drm_htc_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_htc_register_upload]
                        ([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_update] ON [dbo].[drm_htc_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dhr_id) OR UPDATE(dhr_result_01) OR UPDATE(dhr_result_01_date) OR UPDATE(dhr_result_02) OR UPDATE(dhr_result_02_date) OR UPDATE(dhr_result_03) OR UPDATE(dhr_result_03_date) OR UPDATE(dhr_result_04) OR UPDATE(dhr_result_04_date) OR UPDATE(dhr_result_05) OR UPDATE(dhr_result_05_date) OR UPDATE(dm_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_htc_register_upload]
							([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_delete] ON [dbo].[drm_htc_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_htc_register_upload]
                        ([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id],  
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPartner(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner')
                DROP TABLE [dbo].[drm_partner] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_partner](
	            [dp_id] [varchar](50) NOT NULL,
	            [dp_first_name] [varchar](500) NOT NULL,
	            [dp_last_name] [varchar](500) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_partner] PRIMARY KEY CLUSTERED 
            (
	            [dp_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_upload')
                DROP TABLE [dbo].[drm_partner_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_partner_upload](
	            [dp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dp_id] [varchar](50) NOT NULL,
	            [dp_first_name] [varchar](500) NOT NULL,
	            [dp_last_name] [varchar](500) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_partner_upload] PRIMARY KEY CLUSTERED 
            (
	            [dp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_insert] ON [dbo].[drm_partner] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_upload]
                        ([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_update] ON [dbo].[drm_partner] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dp_id) OR UPDATE(dp_first_name) OR UPDATE(dp_last_name) OR UPDATE(dm_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_partner_upload]
							([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_delete] ON [dbo].[drm_partner] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_upload]
                        ([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPartnerTracking(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking')
                DROP TABLE [dbo].[drm_partner_tracking] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_partner_tracking](
                [dpt_id] [varchar](50) NOT NULL, 
                [dpt_date] [datetime] NOT NULL,
                [dpt_dptp_other] [varchar](max) NOT NULL,
                [dpt_phone] [varchar](50) NOT NULL,
                [dpt_address] [varchar](max) NOT NULL,
                [dpt_service] [varchar](max) NOT NULL,
                [dp_id] [varchar](50) NOT NULL,
                [dptp_id] [varchar](50) NOT NULL,
                [hst_id] [varchar](50) NOT NULL,
                [yn_id_traced] [varchar](50) NOT NULL,
                [ynd_id_vmmc] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_partner_tracking] PRIMARY KEY CLUSTERED 
            (
	            [dpt_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking_upload')
                DROP TABLE [dbo].[drm_partner_tracking_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_partner_tracking_upload](
	            [dpt_sid] [int] IDENTITY(1,1) NOT NULL,
                [dpt_id] [varchar](50) NOT NULL, 
                [dpt_date] [datetime] NOT NULL,
                [dpt_dptp_other] [varchar](max) NOT NULL,
                [dpt_phone] [varchar](50) NOT NULL,
                [dpt_address] [varchar](max) NOT NULL,
                [dpt_service] [varchar](max) NOT NULL,
                [dp_id] [varchar](50) NOT NULL,
                [dptp_id] [varchar](50) NOT NULL,
                [hst_id] [varchar](50) NOT NULL,
                [yn_id_traced] [varchar](50) NOT NULL,
                [ynd_id_vmmc] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_partner_tracking_upload] PRIMARY KEY CLUSTERED 
            (
	            [dpt_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_insert] ON [dbo].[drm_partner_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_upload]
                        ([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_update] ON [dbo].[drm_partner_tracking] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpt_id) OR UPDATE(dpt_date) OR UPDATE(dpt_dptp_other) OR UPDATE(dpt_phone) OR UPDATE(dpt_address) OR UPDATE(dpt_service) OR UPDATE(dp_id) OR UPDATE(dptp_id) OR UPDATE(hst_id) OR UPDATE(yn_id_traced) OR UPDATE(ynd_id_vmmc))
	                BEGIN
		                INSERT INTO [dbo].[drm_partner_tracking_upload]
							([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_delete] ON [dbo].[drm_partner_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_upload]
                        ([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPartnerTrackingService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking_service')
                DROP TABLE [dbo].[drm_partner_tracking_service] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_partner_tracking_service](
	            [dpts_id] [varchar](50) NOT NULL,
	            [dpt_id] [varchar](50) NOT NULL,
	            [dsrv_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_partner_tracking_service] PRIMARY KEY CLUSTERED 
            (
	            [dpts_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking_service_upload')
                DROP TABLE [dbo].[drm_partner_tracking_service_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_partner_tracking_service_upload](
	            [dpts_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dpts_id] [varchar](50) NOT NULL,
	            [dpt_id] [varchar](50) NOT NULL,
	            [dsrv_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_partner_tracking_service_upload] PRIMARY KEY CLUSTERED 
            (
	            [dpts_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_service_insert] ON [dbo].[drm_partner_tracking_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_service_upload]
                        ([dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_service_delete] ON [dbo].[drm_partner_tracking_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_service_upload]
                        ([dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPostViolenceCare(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care')
                DROP TABLE [dbo].[drm_post_violence_care] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care](
                [dpvc_id] [varchar](50) NOT NULL, 
                [flt_id] [varchar](50) NOT NULL,
                [sct_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care] PRIMARY KEY CLUSTERED 
            (
	            [dpvc_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_upload')
                DROP TABLE [dbo].[drm_post_violence_care_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_upload](
	            [dpvc_sid] [int] IDENTITY(1,1) NOT NULL,
                [dpvc_id] [varchar](50) NOT NULL, 
                [flt_id] [varchar](50) NOT NULL,
                [sct_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_upload] PRIMARY KEY CLUSTERED 
            (
	            [dpvc_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_insert] ON [dbo].[drm_post_violence_care] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_upload]
                        ([dpvc_id], [flt_id], [sct_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvc_id], [flt_id], [sct_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_update] ON [dbo].[drm_post_violence_care] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpvc_id) OR UPDATE(flt_id) OR UPDATE(sct_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_post_violence_care_upload]
							([dpvc_id], [flt_id], [sct_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dpvc_id], [flt_id], [sct_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_delete] ON [dbo].[drm_post_violence_care] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_upload]
                        ([dpvc_id],  [flt_id], [sct_id],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvc_id],  [flt_id], [sct_id],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPostViolenceCareLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line')
                DROP TABLE [dbo].[drm_post_violence_care_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_line](
                [dpvcl_id] [varchar](50) NOT NULL, 
                [dpvcl_referred_from] [varchar](max) NOT NULL,
                [dpvcl_date] [datetime] NOT NULL,
                [dm_id] [varchar](50) NOT NULL,
                [dpvc_id] [varchar](50) NOT NULL,
                [gbv_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_line] PRIMARY KEY CLUSTERED 
            (
	            [dpvcl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_upload')
                DROP TABLE [dbo].[drm_post_violence_care_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_line_upload](
	            [dpvcl_sid] [int] IDENTITY(1,1) NOT NULL,
                [dpvcl_id] [varchar](50) NOT NULL, 
                [dpvcl_referred_from] [varchar](max) NOT NULL,
                [dpvcl_date] [datetime] NOT NULL,
                [dm_id] [varchar](50) NOT NULL,
                [dpvc_id] [varchar](50) NOT NULL,
                [gbv_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [dpvcl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_insert] ON [dbo].[drm_post_violence_care_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
                        ([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_update] ON [dbo].[drm_post_violence_care_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpvcl_id) OR UPDATE(dpvcl_referred_from) OR UPDATE(dpvcl_date) OR UPDATE(dm_id) OR UPDATE(dpvc_id) OR UPDATE(gbv_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
							([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_delete] ON [dbo].[drm_post_violence_care_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
                        ([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPostViolenceCareLineDreamsService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_dreams_service')
                DROP TABLE [dbo].[drm_post_violence_care_line_dreams_service] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_line_dreams_service](
	            [dpvclds_id] [varchar](50) NOT NULL,
	            [dpvcl_id] [varchar](50) NOT NULL,
	            [dso_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_line_dreams_service] PRIMARY KEY CLUSTERED 
            (
	            [dpvclds_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_dreams_service_upload')
                DROP TABLE [dbo].[drm_post_violence_care_line_dreams_service_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_line_dreams_service_upload](
	            [dpvclds_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dpvclds_id] [varchar](50) NOT NULL,
	            [dpvcl_id] [varchar](50) NOT NULL,
	            [dso_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_line_dreams_service_upload] PRIMARY KEY CLUSTERED 
            (
	            [dpvclds_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_dreams_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_insert] ON [dbo].[drm_post_violence_care_line_dreams_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_dreams_service_upload]
                        ([dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_dreams_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_delete] ON [dbo].[drm_post_violence_care_line_dreams_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_dreams_service_upload]
                        ([dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMPostViolenceCareLineService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_service')
                DROP TABLE [dbo].[drm_post_violence_care_line_service] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_line_service](
	            [dpvcls_id] [varchar](50) NOT NULL,
	            [dpvcl_id] [varchar](50) NOT NULL,
	            [pvcs_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_line_service] PRIMARY KEY CLUSTERED 
            (
	            [dpvcls_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_service_upload')
                DROP TABLE [dbo].[drm_post_violence_care_line_service_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_post_violence_care_line_service_upload](
	            [dpvcls_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dpvcls_id] [varchar](50) NOT NULL,
	            [dpvcl_id] [varchar](50) NOT NULL,
	            [pvcs_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_post_violence_care_line_service_upload] PRIMARY KEY CLUSTERED 
            (
	            [dpvcls_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_service_insert] ON [dbo].[drm_post_violence_care_line_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_service_upload]
                        ([dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_service_delete] ON [dbo].[drm_post_violence_care_line_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_service_upload]
                        ([dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMSinovuyoMissedSession(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_missed_session')
                DROP TABLE [dbo].[drm_sinovuyo_missed_session] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_sinovuyo_missed_session](
	            [dsms_id] [varchar](50) NOT NULL,
	            [dsms_contact] [varchar](500) NOT NULL,
	            [dsms_date] [datetime] NOT NULL,
	            [dsms_date_followup] [datetime] NOT NULL,
	            [dsms_action_other] [varchar](5000) NOT NULL,
	            [dsms_followup_other] [varchar](5000) NOT NULL,
	            [dsms_followup_method_other] [varchar](5000) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dsa_id] [varchar](50) NOT NULL,
	            [dsf_id] [varchar](50) NOT NULL,
	            [dsfm_id] [varchar](50) NOT NULL,
	            [yn_id_followup] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
                CONSTRAINT [PK_drm_sinovuyo_missed_session] PRIMARY KEY CLUSTERED 
            (
	            [dsms_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_missed_session_upload')
                DROP TABLE [dbo].[drm_sinovuyo_missed_session_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_sinovuyo_missed_session_upload](
	            [dsms_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsms_id] [varchar](50) NOT NULL,
	            [dsms_contact] [varchar](500) NOT NULL,
	            [dsms_date] [datetime] NOT NULL,
	            [dsms_date_followup] [datetime] NOT NULL,
	            [dsms_action_other] [varchar](5000) NOT NULL,
	            [dsms_followup_other] [varchar](5000) NOT NULL,
	            [dsms_followup_method_other] [varchar](5000) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dsa_id] [varchar](50) NOT NULL,
	            [dsf_id] [varchar](50) NOT NULL,
	            [dsfm_id] [varchar](50) NOT NULL,
	            [yn_id_followup] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
                CONSTRAINT [PK_drm_sinovuyo_missed_session_upload] PRIMARY KEY CLUSTERED 
            (
	            [dsms_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_insert] ON [dbo].[drm_sinovuyo_missed_session] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
                        ([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_update] ON [dbo].[drm_sinovuyo_missed_session] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsms_id) OR UPDATE(dsms_contact) OR UPDATE(dsms_date) OR UPDATE(dsms_date_followup) OR UPDATE(dsms_action_other) OR UPDATE(dsms_followup_other) OR UPDATE(dsms_followup_method_other) OR UPDATE(dm_id) OR UPDATE(dsa_id) OR UPDATE(dsf_id) OR UPDATE(dsfm_id) OR UPDATE(yn_id_followup))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
							([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_delete] ON [dbo].[drm_sinovuyo_missed_session] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
                        ([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMSinovuyoRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register')
                DROP TABLE [dbo].[drm_sinovuyo_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_sinovuyo_register](
	            [dsr_id] [varchar](50) NOT NULL,
	            [dsr_facilitator] [varchar](500) NOT NULL,
	            [dsr_group] [varchar](500) NOT NULL,
	            [dsr_village] [varchar](500) NOT NULL,
	            [dsr_date] [datetime] NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_sinovuyo_register] PRIMARY KEY CLUSTERED 
            (
	            [dsr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register_upload')
                DROP TABLE [dbo].[drm_sinovuyo_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_sinovuyo_register_upload](
	            [dsr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsr_id] [varchar](50) NOT NULL,
	            [dsr_facilitator] [varchar](500) NOT NULL,
	            [dsr_group] [varchar](500) NOT NULL,
	            [dsr_village] [varchar](500) NOT NULL,
	            [dsr_date] [datetime] NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_sinovuyo_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [dsr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_insert] ON [dbo].[drm_sinovuyo_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
                        ([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_update] ON [dbo].[drm_sinovuyo_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsr_id) OR UPDATE(dsr_facilitator) OR UPDATE(dsr_group) OR UPDATE(dsr_village) OR UPDATE(dsr_date) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
							([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_delete] ON [dbo].[drm_sinovuyo_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
                        ([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMSinovuyoRegisterLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register_line')
                DROP TABLE [dbo].[drm_sinovuyo_register_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_sinovuyo_register_line](
	            [dsrl_id] [varchar](50) NOT NULL,
	            [dsrl_contact] [varchar](500) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dsr_id] [varchar](50) NOT NULL,
	            [pca_id_01] [varchar](50) NOT NULL,
	            [pca_id_02] [varchar](50) NOT NULL,
	            [pca_id_03] [varchar](50) NOT NULL,
	            [pca_id_04] [varchar](50) NOT NULL,
	            [pca_id_05] [varchar](50) NOT NULL,
	            [pca_id_06] [varchar](50) NOT NULL,
	            [pca_id_07] [varchar](50) NOT NULL,
	            [pca_id_08] [varchar](50) NOT NULL,
	            [pca_id_09] [varchar](50) NOT NULL,
	            [pca_id_10] [varchar](50) NOT NULL,
	            [pca_id_11] [varchar](50) NOT NULL,
	            [pca_id_12] [varchar](50) NOT NULL,
	            [pca_id_13] [varchar](50) NOT NULL,
	            [pca_id_14] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_sinovuyo_register_line] PRIMARY KEY CLUSTERED 
            (
	            [dsrl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register_line_upload')
                DROP TABLE [dbo].[drm_sinovuyo_register_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_sinovuyo_register_line_upload](
	            [dsrl_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsrl_id] [varchar](50) NOT NULL,
	            [dsrl_contact] [varchar](500) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dsr_id] [varchar](50) NOT NULL,
	            [pca_id_01] [varchar](50) NOT NULL,
	            [pca_id_02] [varchar](50) NOT NULL,
	            [pca_id_03] [varchar](50) NOT NULL,
	            [pca_id_04] [varchar](50) NOT NULL,
	            [pca_id_05] [varchar](50) NOT NULL,
	            [pca_id_06] [varchar](50) NOT NULL,
	            [pca_id_07] [varchar](50) NOT NULL,
	            [pca_id_08] [varchar](50) NOT NULL,
	            [pca_id_09] [varchar](50) NOT NULL,
	            [pca_id_10] [varchar](50) NOT NULL,
	            [pca_id_11] [varchar](50) NOT NULL,
	            [pca_id_12] [varchar](50) NOT NULL,
	            [pca_id_13] [varchar](50) NOT NULL,
	            [pca_id_14] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_sinovuyo_register_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [dsrl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_insert] ON [dbo].[drm_sinovuyo_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
                        ([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_update] ON [dbo].[drm_sinovuyo_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsrl_id) OR UPDATE(dsrl_contact) OR UPDATE(dm_id) OR UPDATE(dsr_id) OR UPDATE(pca_id_01) OR UPDATE(pca_id_02) OR UPDATE(pca_id_03) OR UPDATE(pca_id_04) OR UPDATE(pca_id_05) OR UPDATE(pca_id_06) OR UPDATE(pca_id_07) OR UPDATE(pca_id_08) OR UPDATE(pca_id_09) OR UPDATE(pca_id_10) OR UPDATE(pca_id_11) OR UPDATE(pca_id_12) OR UPDATE(pca_id_13) OR UPDATE(pca_id_14))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
							([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_delete] ON [dbo].[drm_sinovuyo_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
                        ([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMSteppingStonesMissedSession(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_missed_session')
                DROP TABLE [dbo].[drm_stepping_stones_missed_session] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_stepping_stones_missed_session](
	            [dssms_id] [varchar](50) NOT NULL,
	            [dssms_contact] [varchar](500) NOT NULL,
	            [dssms_date] [datetime] NOT NULL,
	            [dssms_date_followup] [datetime] NOT NULL,
	            [dssms_action_other] [varchar](5000) NOT NULL,
	            [dssms_followup_other] [varchar](5000) NOT NULL,
	            [dssms_followup_method_other] [varchar](5000) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dsa_id] [varchar](50) NOT NULL,
	            [dsf_id] [varchar](50) NOT NULL,
	            [dsfm_id] [varchar](50) NOT NULL,
	            [yn_id_followup] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
                CONSTRAINT [PK_drm_stepping_stones_missed_session] PRIMARY KEY CLUSTERED 
            (
	            [dssms_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_missed_session_upload')
                DROP TABLE [dbo].[drm_stepping_stones_missed_session_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_stepping_stones_missed_session_upload](
	            [dssms_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dssms_id] [varchar](50) NOT NULL,
	            [dssms_contact] [varchar](500) NOT NULL,
	            [dssms_date] [datetime] NOT NULL,
	            [dssms_date_followup] [datetime] NOT NULL,
	            [dssms_action_other] [varchar](5000) NOT NULL,
	            [dssms_followup_other] [varchar](5000) NOT NULL,
	            [dssms_followup_method_other] [varchar](5000) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dsa_id] [varchar](50) NOT NULL,
	            [dsf_id] [varchar](50) NOT NULL,
	            [dsfm_id] [varchar](50) NOT NULL,
	            [yn_id_followup] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
                CONSTRAINT [PK_drm_stepping_stones_missed_session_upload] PRIMARY KEY CLUSTERED 
            (
	            [dssms_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_insert] ON [dbo].[drm_stepping_stones_missed_session] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
                        ([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_update] ON [dbo].[drm_stepping_stones_missed_session] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssms_id) OR UPDATE(dssms_contact) OR UPDATE(dssms_date) OR UPDATE(dssms_date_followup) OR UPDATE(dssms_action_other) OR UPDATE(dssms_followup_other) OR UPDATE(dssms_followup_method_other) OR UPDATE(dm_id) OR UPDATE(dsa_id) OR UPDATE(dsf_id) OR UPDATE(dsfm_id) OR UPDATE(yn_id_followup))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
							([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_delete] ON [dbo].[drm_stepping_stones_missed_session] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
                        ([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMSteppingStonesRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register')
                DROP TABLE [dbo].[drm_stepping_stones_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_stepping_stones_register](
	            [dssr_id] [varchar](50) NOT NULL,
	            [dssr_facilitator] [varchar](500) NOT NULL,
	            [dssr_group] [varchar](500) NOT NULL,
	            [dssr_village] [varchar](500) NOT NULL,
	            [dssr_date] [datetime] NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_stepping_stones_register] PRIMARY KEY CLUSTERED 
            (
	            [dssr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register_upload')
                DROP TABLE [dbo].[drm_stepping_stones_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_stepping_stones_register_upload](
	            [dssr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dssr_id] [varchar](50) NOT NULL,
	            [dssr_facilitator] [varchar](500) NOT NULL,
	            [dssr_group] [varchar](500) NOT NULL,
	            [dssr_village] [varchar](500) NOT NULL,
	            [dssr_date] [datetime] NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_stepping_stones_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [dssr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_insert] ON [dbo].[drm_stepping_stones_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
                        ([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_update] ON [dbo].[drm_stepping_stones_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssr_id) OR UPDATE(dssr_facilitator) OR UPDATE(dssr_group) OR UPDATE(dssr_village) OR UPDATE(dssr_date) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
							([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_delete] ON [dbo].[drm_stepping_stones_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
                        ([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateDRMSteppingStonesRegisterLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register_line')
                DROP TABLE [dbo].[drm_stepping_stones_register_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_stepping_stones_register_line](
	            [dssrl_id] [varchar](50) NOT NULL,
	            [dssrl_contact] [varchar](500) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dssr_id] [varchar](50) NOT NULL,
	            [yn_id_m1] [varchar](50) NOT NULL,
	            [yn_id_m2] [varchar](50) NOT NULL,
	            [yn_id_m3] [varchar](50) NOT NULL,
	            [yn_id_sa] [varchar](50) NOT NULL,
	            [yn_id_sb] [varchar](50) NOT NULL,
	            [yn_id_sc] [varchar](50) NOT NULL,
	            [yn_id_sd] [varchar](50) NOT NULL,
	            [yn_id_se] [varchar](50) NOT NULL,
	            [yn_id_sf] [varchar](50) NOT NULL,
	            [yn_id_sg] [varchar](50) NOT NULL,
	            [yn_id_sh] [varchar](50) NOT NULL,
	            [yn_id_si] [varchar](50) NOT NULL,
	            [yn_id_sj] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_drm_stepping_stones_register_line] PRIMARY KEY CLUSTERED 
            (
	            [dssrl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register_line_upload')
                DROP TABLE [dbo].[drm_stepping_stones_register_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[drm_stepping_stones_register_line_upload](
	            [dssrl_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dssrl_id] [varchar](50) NOT NULL,
	            [dssrl_contact] [varchar](500) NOT NULL,
	            [dm_id] [varchar](50) NOT NULL,
	            [dssr_id] [varchar](50) NOT NULL,
	            [yn_id_m1] [varchar](50) NOT NULL,
	            [yn_id_m2] [varchar](50) NOT NULL,
	            [yn_id_m3] [varchar](50) NOT NULL,
	            [yn_id_sa] [varchar](50) NOT NULL,
	            [yn_id_sb] [varchar](50) NOT NULL,
	            [yn_id_sc] [varchar](50) NOT NULL,
	            [yn_id_sd] [varchar](50) NOT NULL,
	            [yn_id_se] [varchar](50) NOT NULL,
	            [yn_id_sf] [varchar](50) NOT NULL,
	            [yn_id_sg] [varchar](50) NOT NULL,
	            [yn_id_sh] [varchar](50) NOT NULL,
	            [yn_id_si] [varchar](50) NOT NULL,
	            [yn_id_sj] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_drm_stepping_stones_register_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [dssrl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_insert] ON [dbo].[drm_stepping_stones_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
                        ([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_update] ON [dbo].[drm_stepping_stones_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssrl_id) OR UPDATE(dssrl_contact) OR UPDATE(dm_id) OR UPDATE(dssr_id) OR UPDATE(yn_id_m1) OR UPDATE(yn_id_m2) OR UPDATE(yn_id_m3) OR UPDATE(yn_id_sa) OR UPDATE(yn_id_sb) OR UPDATE(yn_id_sc) OR UPDATE(yn_id_sd) OR UPDATE(yn_id_se) OR UPDATE(yn_id_sf) OR UPDATE(yn_id_sg) OR UPDATE(yn_id_sh) OR UPDATE(yn_id_si) OR UPDATE(yn_id_sj))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
							([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_delete] ON [dbo].[drm_stepping_stones_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
                        ([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj],  
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHomeVisit(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_home_visit')
                DROP TABLE [dbo].[hh_home_visit] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_home_visit](
	            [hv_id] [varchar](50) NOT NULL,
	            [hv_number_of_children] [int] NOT NULL,
	            [hv_date] [datetime] NOT NULL,
	            [hv_previous_visit_date] [datetime] NOT NULL,
	            [hv_previous_visit_purpose] [varchar](50) NOT NULL,
	            [hv_previous_visit_service] [varchar](50) NOT NULL,
	            [hv_actions] [varchar](max) NOT NULL,
	            [hv_findings] [varchar](max) NOT NULL,
	            [hv_next_steps] [varchar](max) NOT NULL,
	            [hv_girl_name] [varchar](500) NOT NULL,
	            [hv_girl_age] [int] NOT NULL,
	            [hv_girl_education_type] [varchar](5000) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [yn_id_consumption_program] [varchar](50) NOT NULL,
	            [yn_id_girl_education_support] [varchar](50) NOT NULL,
	            [yn_id_improvement_plan] [varchar](50) NOT NULL,
	            [yn_id_previous_visit] [varchar](50) NOT NULL,
	            [yn_id_referral] [varchar](50) NOT NULL,
	            [yn_id_referral_completed] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_home_visit] PRIMARY KEY CLUSTERED 
            (
	            [hv_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_home_visit_upload')
                DROP TABLE [dbo].[hh_home_visit_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_home_visit_upload](
	            [hv_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hv_id] [varchar](50) NOT NULL,
	            [hv_number_of_children] [int] NOT NULL,
	            [hv_date] [datetime] NOT NULL,
	            [hv_previous_visit_date] [datetime] NOT NULL,
	            [hv_previous_visit_purpose] [varchar](50) NOT NULL,
	            [hv_previous_visit_service] [varchar](50) NOT NULL,
	            [hv_actions] [varchar](max) NOT NULL,
	            [hv_findings] [varchar](max) NOT NULL,
	            [hv_next_steps] [varchar](max) NOT NULL,
	            [hv_girl_name] [varchar](500) NOT NULL,
	            [hv_girl_age] [int] NOT NULL,
	            [hv_girl_education_type] [varchar](5000) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [yn_id_consumption_program] [varchar](50) NOT NULL,
	            [yn_id_girl_education_support] [varchar](50) NOT NULL,
	            [yn_id_improvement_plan] [varchar](50) NOT NULL,
	            [yn_id_previous_visit] [varchar](50) NOT NULL,
	            [yn_id_referral] [varchar](50) NOT NULL,
	            [yn_id_referral_completed] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_home_visit_upload] PRIMARY KEY CLUSTERED 
            (
	            [hv_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_insert] ON [dbo].[hh_home_visit] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_upload]
                        ([hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_update] ON [dbo].[hh_home_visit] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hv_id) OR UPDATE(hv_number_of_children) OR UPDATE(hv_date) OR UPDATE(hv_previous_visit_date) OR UPDATE(hv_previous_visit_purpose) OR UPDATE(hv_previous_visit_service) OR UPDATE(hv_actions) OR UPDATE(hv_findings) OR UPDATE(hv_next_steps) OR UPDATE(hv_girl_name) OR UPDATE(hv_girl_age) OR UPDATE(hv_girl_education_type) OR UPDATE(edu_id) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(swk_id) OR UPDATE(yn_id_consumption_program) OR UPDATE(yn_id_girl_education_support) OR UPDATE(yn_id_improvement_plan) OR UPDATE(yn_id_previous_visit) OR UPDATE(yn_id_referral) OR UPDATE(yn_id_referral_completed))
	                BEGIN
		                INSERT INTO [dbo].[hh_home_visit_upload]
							([hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_delete] ON [dbo].[hh_home_visit] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_upload]
                        ([hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHomeVisitService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_home_visit_service')
                DROP TABLE [dbo].[hh_home_visit_service] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_home_visit_service](
	            [hvs_id] [varchar](50) NOT NULL,
	            [hv_id] [varchar](50) NOT NULL,
	            [shv_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_home_visit_service] PRIMARY KEY CLUSTERED 
            (
	            [hvs_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_home_visit_service_upload')
                DROP TABLE [dbo].[hh_home_visit_service_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_home_visit_service_upload](
	            [hvs_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hvs_id] [varchar](50) NOT NULL,
	            [hv_id] [varchar](50) NOT NULL,
	            [shv_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_home_visit_service_upload] PRIMARY KEY CLUSTERED 
            (
	            [hvs_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_insert] ON [dbo].[hh_home_visit_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_upload]
                        ([hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_delete] ON [dbo].[hh_home_visit_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_upload]
                        ([hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHomeVisitServicePrevious(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_home_visit_service_previous')
                DROP TABLE [dbo].[hh_home_visit_service_previous] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_home_visit_service_previous](
	            [hvsp_id] [varchar](50) NOT NULL,
	            [hv_id] [varchar](50) NOT NULL,
	            [shvp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_home_visit_service_previous] PRIMARY KEY CLUSTERED 
            (
	            [hvsp_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_home_visit_service_previous_upload')
                DROP TABLE [dbo].[hh_home_visit_service_previous_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_home_visit_service_previous_upload](
	            [hvsp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hvsp_id] [varchar](50) NOT NULL,
	            [hv_id] [varchar](50) NOT NULL,
	            [shvp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_home_visit_service_previous_upload] PRIMARY KEY CLUSTERED 
            (
	            [hvsp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_previous_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_previous_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_previous_insert] ON [dbo].[hh_home_visit_service_previous] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_previous_upload]
                        ([hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_previous_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_previous_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_previous_delete] ON [dbo].[hh_home_visit_service_previous] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_previous_upload]
                        ([hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHousehold(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household')
                DROP TABLE [dbo].[hh_household] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household](
	            [hh_id] [varchar](50) NOT NULL,
	            [hh_code] [varchar](250) NOT NULL,
	            [hh_status_reason] [varchar](5000) NOT NULL,
	            [hh_tel] [varchar](50) NOT NULL,
	            [hh_village] [varchar](500) NOT NULL,
	            [hhs_id] [varchar](50) NOT NULL,
	            [hhsr_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_household] PRIMARY KEY CLUSTERED 
            (
	            [hh_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_upload')
                DROP TABLE [dbo].[hh_household_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_upload](
	            [hh_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hh_code] [varchar](250) NOT NULL,
	            [hh_status_reason] [varchar](5000) NOT NULL,
	            [hh_tel] [varchar](50) NOT NULL,
	            [hh_village] [varchar](500) NOT NULL,
	            [hhs_id] [varchar](50) NOT NULL,
	            [hhsr_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_household_upload] PRIMARY KEY CLUSTERED 
            (
	            [hh_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_insert] ON [dbo].[hh_household] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_upload]
                        ([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_update] ON [dbo].[hh_household] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hh_id) OR UPDATE(hh_code) OR UPDATE(hh_status_reason) OR UPDATE(hh_tel) OR UPDATE(hh_village) OR UPDATE(hhs_id) OR UPDATE(hhsr_id) OR UPDATE(swk_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_upload]
							([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_delete] ON [dbo].[hh_household] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_upload]
                        ([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHouseholdAssessment(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_assessment')
                DROP TABLE [dbo].[hh_household_assessment] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_assessment](
	            [hha_id] [varchar](50) NOT NULL,
	            [hha_comments] [varchar](max) NOT NULL,
	            [hha_date] [datetime] NOT NULL,
	            [hha_num_of_meals] [int] NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [icc_id] [varchar](50) NOT NULL,
	            [ics_id] [varchar](50) NOT NULL,
	            [osn_id_disagreement] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [yn_id_child_separation] [varchar](50) NOT NULL,
	            [yn_id_financial_savings] [varchar](50) NOT NULL,
	            [yn_id_food_body_building] [varchar](50) NOT NULL,
	            [yn_id_food_energy] [varchar](50) NOT NULL,
	            [yn_id_food_protective] [varchar](50) NOT NULL,
	            [yn_id_water] [varchar](50) NOT NULL,
	            [ynna_id_expenses_food] [varchar](50) NOT NULL,
	            [ynna_id_expenses_health] [varchar](50) NOT NULL,
	            [ynna_id_expenses_school] [varchar](50) NOT NULL,
	            [ynns_id_assets] [varchar](50) NOT NULL,
	            [yns_id_latrine] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_household_assessment] PRIMARY KEY CLUSTERED 
            (
	            [hha_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_assessment_upload')
                DROP TABLE [dbo].[hh_household_assessment_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_assessment_upload](
	            [hha_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hha_id] [varchar](50) NOT NULL,
	            [hha_comments] [varchar](max) NOT NULL,
	            [hha_date] [datetime] NOT NULL,
	            [hha_num_of_meals] [int] NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [icc_id] [varchar](50) NOT NULL,
	            [ics_id] [varchar](50) NOT NULL,
	            [osn_id_disagreement] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [yn_id_child_separation] [varchar](50) NOT NULL,
	            [yn_id_financial_savings] [varchar](50) NOT NULL,
	            [yn_id_food_body_building] [varchar](50) NOT NULL,
	            [yn_id_food_energy] [varchar](50) NOT NULL,
	            [yn_id_food_protective] [varchar](50) NOT NULL,
	            [yn_id_water] [varchar](50) NOT NULL,
	            [ynna_id_expenses_food] [varchar](50) NOT NULL,
	            [ynna_id_expenses_health] [varchar](50) NOT NULL,
	            [ynna_id_expenses_school] [varchar](50) NOT NULL,
	            [ynns_id_assets] [varchar](50) NOT NULL,
	            [yns_id_latrine] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_household_assessment_upload] PRIMARY KEY CLUSTERED 
            (
	            [hha_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_insert] ON [dbo].[hh_household_assessment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_update] ON [dbo].[hh_household_assessment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hha_id) OR UPDATE(hha_comments) OR UPDATE(hha_date) OR UPDATE(hha_num_of_meals) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(icc_id) OR UPDATE(ics_id) OR UPDATE(osn_id_disagreement) OR UPDATE(swk_id) OR UPDATE(yn_id_child_separation) OR UPDATE(yn_id_financial_savings) OR UPDATE(yn_id_food_body_building) OR UPDATE(yn_id_food_energy) OR UPDATE(yn_id_food_protective) OR UPDATE(ynna_id_expenses_food) OR UPDATE(ynna_id_expenses_health) OR UPDATE(ynna_id_expenses_school) OR UPDATE(ynns_id_assets) OR UPDATE(yns_id_latrine))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_upload]
							([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_delete] ON [dbo].[hh_household_assessment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHouseholdAssessmentMember(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_assessment_member')
                DROP TABLE [dbo].[hh_household_assessment_member] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_assessment_member](
	            [ham_id] [varchar](50) NOT NULL,
	            [ham_first_name] [varchar](500) NOT NULL,
	            [ham_last_name] [varchar](500) NOT NULL,
	            [ham_year_of_birth] [varchar](4) NOT NULL,
	            [dtp_id] [varchar](50) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [hha_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [hst_id] [varchar](50) NOT NULL,
	            [mst_id] [varchar](50) NOT NULL,
	            [prf_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [yn_id_art] [varchar](50) NOT NULL,
	            [yn_id_birth_registration] [varchar](50) NOT NULL,
	            [yn_id_caregiver] [varchar](50) NOT NULL,
	            [yn_id_disability] [varchar](50) NOT NULL,
	            [yn_id_given_birth] [varchar](50) NOT NULL,
	            [yn_id_hoh] [varchar](50) NOT NULL,
	            [yn_id_immun] [varchar](50) NOT NULL,
	            [yn_id_pregnant] [varchar](50) NOT NULL,
	            [yn_id_school] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_household_assessment_member] PRIMARY KEY CLUSTERED 
            (
	            [ham_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_assessment_member_upload')
                DROP TABLE [dbo].[hh_household_assessment_member_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_assessment_member_upload](
	            [ham_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ham_id] [varchar](50) NOT NULL,
	            [ham_first_name] [varchar](500) NOT NULL,
	            [ham_last_name] [varchar](500) NOT NULL,
	            [ham_year_of_birth] [varchar](4) NOT NULL,
	            [dtp_id] [varchar](50) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [hha_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [hst_id] [varchar](50) NOT NULL,
	            [mst_id] [varchar](50) NOT NULL,
	            [prf_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [yn_id_art] [varchar](50) NOT NULL,
	            [yn_id_birth_registration] [varchar](50) NOT NULL,
	            [yn_id_caregiver] [varchar](50) NOT NULL,
	            [yn_id_disability] [varchar](50) NOT NULL,
	            [yn_id_given_birth] [varchar](50) NOT NULL,
	            [yn_id_hoh] [varchar](50) NOT NULL,
	            [yn_id_immun] [varchar](50) NOT NULL,
	            [yn_id_pregnant] [varchar](50) NOT NULL,
	            [yn_id_school] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_household_assessment_member_upload] PRIMARY KEY CLUSTERED 
            (
	            [ham_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_insert] ON [dbo].[hh_household_assessment_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_member_upload]
                        ([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_update] ON [dbo].[hh_household_assessment_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ham_id) OR UPDATE(ham_first_name) OR UPDATE(ham_last_name) OR UPDATE(ham_year_of_birth) OR UPDATE(dtp_id) OR UPDATE(edu_id) OR UPDATE(gnd_id) OR UPDATE(hha_id) OR UPDATE(hhm_id) OR UPDATE(hst_id) OR UPDATE(mst_id) OR UPDATE(prf_id) OR UPDATE(prt_id) OR UPDATE(yn_id_art) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_caregiver) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_hoh) OR UPDATE(yn_id_immun) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_school))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_member_upload]
							([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_delete] ON [dbo].[hh_household_assessment_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_member_upload]
                        ([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhHouseholdMember(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_member')
                DROP TABLE [dbo].[hh_household_member] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_member](
	            [hhm_id] [varchar](50) NOT NULL,
	            [hhm_first_name] [varchar](500) NOT NULL,
	            [hhm_last_name] [varchar](500) NOT NULL,
	            [hhm_number] [varchar](2) NOT NULL,
	            [hhm_year_of_birth] [varchar](4) NOT NULL,
	            [dtp_id] [varchar](50) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hst_id] [varchar](50) NOT NULL,
	            [mst_id] [varchar](50) NOT NULL,
	            [prf_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [yn_id_art] [varchar](50) NOT NULL,
	            [yn_id_birth_registration] [varchar](50) NOT NULL,
	            [yn_id_caregiver] [varchar](50) NOT NULL,
	            [yn_id_disability] [varchar](50) NOT NULL,
	            [yn_id_given_birth] [varchar](50) NOT NULL,
	            [yn_id_hoh] [varchar](50) NOT NULL,
	            [yn_id_immun] [varchar](50) NOT NULL,
	            [yn_id_pregnant] [varchar](50) NOT NULL,
	            [yn_id_school] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_household_member] PRIMARY KEY CLUSTERED 
            (
	            [hhm_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_member_upload')
                DROP TABLE [dbo].[hh_household_member_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_member_upload](
	            [hhm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [hhm_first_name] [varchar](500) NOT NULL,
	            [hhm_last_name] [varchar](500) NOT NULL,
	            [hhm_number] [varchar](2) NOT NULL,
	            [hhm_year_of_birth] [varchar](4) NOT NULL,
	            [dtp_id] [varchar](50) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hst_id] [varchar](50) NOT NULL,
	            [mst_id] [varchar](50) NOT NULL,
	            [prf_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [yn_id_art] [varchar](50) NOT NULL,
	            [yn_id_birth_registration] [varchar](50) NOT NULL,
	            [yn_id_caregiver] [varchar](50) NOT NULL,
	            [yn_id_disability] [varchar](50) NOT NULL,
	            [yn_id_given_birth] [varchar](50) NOT NULL,
	            [yn_id_hoh] [varchar](50) NOT NULL,
	            [yn_id_immun] [varchar](50) NOT NULL,
	            [yn_id_pregnant] [varchar](50) NOT NULL,
	            [yn_id_school] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_household_member_upload] PRIMARY KEY CLUSTERED 
            (
	            [hhm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_member_insert] ON [dbo].[hh_household_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_member_upload]
                        ([hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_member_update] ON [dbo].[hh_household_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hhm_id) OR UPDATE(hhm_first_name) OR UPDATE(hhm_last_name) OR UPDATE(hhm_number) OR UPDATE(hhm_year_of_birth) OR UPDATE(dtp_id) OR UPDATE(edu_id) OR UPDATE(gnd_id) OR UPDATE(hh_id) OR UPDATE(hst_id) OR UPDATE(mst_id) OR UPDATE(prf_id) OR UPDATE(prt_id) OR UPDATE(yn_id_art) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_caregiver) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_hoh) OR UPDATE(yn_id_immun) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_school))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_member_upload]
							([hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_member_delete] ON [dbo].[hh_household_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_member_upload]
                        ([hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhOVCIdentificationPrioritization(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_ovc_identification_prioritization')
                DROP TABLE [dbo].[hh_ovc_identification_prioritization] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_ovc_identification_prioritization](
	            [oip_id] [varchar](50) NOT NULL,
	            [oip_comments] [varchar](max) NOT NULL,
	            [oip_date] [datetime] NOT NULL,
	            [oip_18_above_female] [int] NOT NULL,
	            [oip_18_above_male] [int] NOT NULL,
	            [oip_18_below_female] [int] NOT NULL,
	            [oip_18_below_male] [int] NOT NULL,
	            [oip_hiv_adult] [int] NOT NULL,
	            [oip_hiv_children] [int] NOT NULL,
	            [oip_cp_month] [varchar](2) NOT NULL,
	            [oip_interviewer_tel] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [yn_id_children] [varchar](50) NOT NULL,
	            [yn_id_cp_abuse] [varchar](50) NOT NULL,
	            [yn_id_cp_abuse_physical] [varchar](50) NOT NULL,
	            [yn_id_cp_abuse_sexual] [varchar](50) NOT NULL,
	            [yn_id_cp_marriage_teen_parent] [varchar](50) NOT NULL,
	            [yn_id_cp_neglected] [varchar](50) NOT NULL,
	            [yn_id_cp_no_birth_register] [varchar](50) NOT NULL,
	            [yn_id_cp_orphan] [varchar](50) NOT NULL,
	            [yn_id_cp_pregnancy] [varchar](50) NOT NULL,
	            [yn_id_cp_referred] [varchar](50) NOT NULL,
	            [yn_id_edu_referred] [varchar](50) NOT NULL,
	            [yn_id_es_child_headed] [varchar](50) NOT NULL,
	            [yn_id_es_disability] [varchar](50) NOT NULL,
	            [yn_id_es_employment] [varchar](50) NOT NULL,
	            [yn_id_es_expense] [varchar](50) NOT NULL,
	            [yn_id_es_referred] [varchar](50) NOT NULL,
	            [yn_id_fsn_meals] [varchar](50) NOT NULL,
	            [yn_id_fsn_malnourished] [varchar](50) NOT NULL,
	            [yn_id_fsn_referred] [varchar](50) NOT NULL,
	            [yn_id_hwss_hiv_positive] [varchar](50) NOT NULL,
	            [yn_id_hwss_hiv_status] [varchar](50) NOT NULL,
	            [yn_id_hwss_referred] [varchar](50) NOT NULL,
	            [yn_id_hwss_shelter] [varchar](50) NOT NULL,
	            [yn_id_hwss_water] [varchar](50) NOT NULL,
	            [yn_id_psbc_referred] [varchar](50) NOT NULL,
	            [yn_id_psbc_stigmatized] [varchar](50) NOT NULL,
	            [ynna_id_edu_missed_school] [varchar](50) NOT NULL,
	            [ynna_id_edu_not_enrolled] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_ovc_identification_prioritization] PRIMARY KEY CLUSTERED 
            (
	            [oip_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_ovc_identification_prioritization_upload')
                DROP TABLE [dbo].[hh_ovc_identification_prioritization_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_ovc_identification_prioritization_upload](
	            [oip_sid] [int] IDENTITY(1,1) NOT NULL,
	            [oip_id] [varchar](50) NOT NULL,
	            [oip_comments] [varchar](max) NOT NULL,
	            [oip_date] [datetime] NOT NULL,
	            [oip_18_above_female] [int] NOT NULL,
	            [oip_18_above_male] [int] NOT NULL,
	            [oip_18_below_female] [int] NOT NULL,
	            [oip_18_below_male] [int] NOT NULL,
	            [oip_hiv_adult] [int] NOT NULL,
	            [oip_hiv_children] [int] NOT NULL,
	            [oip_cp_month] [varchar](2) NOT NULL,
	            [oip_interviewer_tel] [varchar](50) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [hh_id] [varchar](50) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [yn_id_children] [varchar](50) NOT NULL,
	            [yn_id_cp_abuse] [varchar](50) NOT NULL,
	            [yn_id_cp_abuse_physical] [varchar](50) NOT NULL,
	            [yn_id_cp_abuse_sexual] [varchar](50) NOT NULL,
	            [yn_id_cp_marriage_teen_parent] [varchar](50) NOT NULL,
	            [yn_id_cp_neglected] [varchar](50) NOT NULL,
	            [yn_id_cp_no_birth_register] [varchar](50) NOT NULL,
	            [yn_id_cp_orphan] [varchar](50) NOT NULL,
	            [yn_id_cp_pregnancy] [varchar](50) NOT NULL,
	            [yn_id_cp_referred] [varchar](50) NOT NULL,
	            [yn_id_edu_referred] [varchar](50) NOT NULL,
	            [yn_id_es_child_headed] [varchar](50) NOT NULL,
	            [yn_id_es_disability] [varchar](50) NOT NULL,
	            [yn_id_es_employment] [varchar](50) NOT NULL,
	            [yn_id_es_expense] [varchar](50) NOT NULL,
	            [yn_id_es_referred] [varchar](50) NOT NULL,
	            [yn_id_fsn_meals] [varchar](50) NOT NULL,
	            [yn_id_fsn_malnourished] [varchar](50) NOT NULL,
	            [yn_id_fsn_referred] [varchar](50) NOT NULL,
	            [yn_id_hwss_hiv_positive] [varchar](50) NOT NULL,
	            [yn_id_hwss_hiv_status] [varchar](50) NOT NULL,
	            [yn_id_hwss_referred] [varchar](50) NOT NULL,
	            [yn_id_hwss_shelter] [varchar](50) NOT NULL,
	            [yn_id_hwss_water] [varchar](50) NOT NULL,
	            [yn_id_psbc_referred] [varchar](50) NOT NULL,
	            [yn_id_psbc_stigmatized] [varchar](50) NOT NULL,
	            [ynna_id_edu_missed_school] [varchar](50) NOT NULL,
	            [ynna_id_edu_not_enrolled] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_ovc_identification_prioritization_upload] PRIMARY KEY CLUSTERED 
            (
	            [oip_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_insert] ON [dbo].[hh_ovc_identification_prioritization] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
                        ([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_update] ON [dbo].[hh_ovc_identification_prioritization] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(oip_id) OR UPDATE(oip_comments) OR UPDATE(oip_date) OR UPDATE(oip_18_above_female) OR UPDATE(oip_18_above_male) OR UPDATE(oip_18_below_female) OR UPDATE(oip_18_below_male) OR UPDATE(oip_hiv_adult) OR UPDATE(oip_hiv_children) OR UPDATE(oip_cp_month) OR UPDATE(oip_interviewer_tel) OR UPDATE(cso_id) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(swk_id) OR UPDATE(yn_id_children) OR UPDATE(yn_id_cp_abuse) OR UPDATE(yn_id_cp_abuse_physical) OR UPDATE(yn_id_cp_abuse_sexual) OR UPDATE(yn_id_cp_marriage_teen_parent) OR UPDATE(yn_id_cp_neglected) OR UPDATE(yn_id_cp_no_birth_register) OR UPDATE(yn_id_cp_orphan) OR UPDATE(yn_id_cp_pregnancy) OR UPDATE(yn_id_cp_referred) OR UPDATE(yn_id_edu_referred) OR UPDATE(yn_id_es_child_headed) OR UPDATE(yn_id_es_disability) OR UPDATE(yn_id_es_employment) OR UPDATE(yn_id_es_expense) OR UPDATE(yn_id_es_referred) OR UPDATE(yn_id_fsn_meals) OR UPDATE(yn_id_fsn_malnourished) OR UPDATE(yn_id_fsn_referred) OR UPDATE(yn_id_hwss_hiv_positive) OR UPDATE(yn_id_hwss_hiv_status) OR UPDATE(yn_id_hwss_referred) OR UPDATE(yn_id_hwss_shelter) OR UPDATE(yn_id_hwss_water) OR UPDATE(yn_id_psbc_referred) OR UPDATE(yn_id_psbc_stigmatized) OR UPDATE(ynna_id_edu_missed_school) OR UPDATE(ynna_id_edu_not_enrolled))
	                BEGIN
		                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
							([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_delete] ON [dbo].[hh_ovc_identification_prioritization] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
                        ([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhReferral(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_referral')
                DROP TABLE [dbo].[hh_referral] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_referral](
	            [rfr_id] [varchar](50) NOT NULL,
	            [rfr_serial_no] [varchar](500) NOT NULL,
	            [rfr_ra_location] [varchar](500) NOT NULL,
	            [rfr_ra_tel] [varchar](500) NOT NULL,
	            [rfr_ra_email] [varchar](500) NOT NULL,
	            [rfr_ra_person_name] [varchar](500) NOT NULL,
	            [rfr_ra_person_title] [varchar](500) NOT NULL,
	            [rfr_ra_person_tel] [varchar](500) NOT NULL,
	            [rfr_ra_person_email] [varchar](500) NOT NULL,
	            [rfr_ra_date] [datetime] NOT NULL,
	            [rfr_cd_case_no] [varchar](500) NOT NULL,
	            [rfr_cd_nature] [varchar](500) NOT NULL,
	            [rfr_cd_perpetrator] [varchar](500) NOT NULL,
	            [rfr_cd_perpetrator_relationship] [varchar](500) NOT NULL,
	            [rfr_cd_date_occured] [datetime] NOT NULL,
	            [rfr_cd_other] [varchar](max) NOT NULL,
	            [rfr_cd_accompany_name] [varchar](500) NOT NULL,
	            [rfr_cd_accompany_tel] [varchar](500) NOT NULL,
	            [rfr_cd_accompany_email] [varchar](500) NOT NULL,
	            [rfr_cd_accompany_relationship] [varchar](500) NOT NULL,
	            [rfr_cd_guardian_name] [varchar](500) NOT NULL,
	            [rfr_cd_guardian_tel] [varchar](500) NOT NULL,
	            [rfr_cd_guardian_village] [varchar](500) NOT NULL,
	            [rfr_service_before] [varchar](max) NOT NULL,
	            [rfr_service_referral] [varchar](max) NOT NULL,
	            [rfr_service_discussion] [varchar](max) NOT NULL,
	            [rfr_ar_name] [varchar](500) NOT NULL,
	            [rfr_ar_location] [varchar](500) NOT NULL,
	            [rfr_ar_contact_name] [varchar](500) NOT NULL,
	            [rfr_ar_contact_tel] [varchar](500) NOT NULL,
	            [rfr_ar_contact_email] [varchar](500) NOT NULL,
	            [rfr_fb_agency_name] [varchar](500) NOT NULL,
	            [rfr_fb_person_name] [varchar](500) NOT NULL,
	            [rfr_fb_person_title] [varchar](500) NOT NULL,
	            [rfr_fb_location] [varchar](500) NOT NULL,
	            [rfr_fb_tel] [varchar](500) NOT NULL,
	            [rfr_fb_email] [varchar](500) NOT NULL,
	            [rfr_fb_date] [datetime] NOT NULL,
	            [rfr_fb_id_no] [varchar](500) NOT NULL,
	            [rfr_fb_case_no] [varchar](500) NOT NULL,
	            [rfr_fb_service] [varchar](max) NOT NULL,
	            [rfr_fb_other] [varchar](max) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [prt_cso_id_ra] [varchar](50) NOT NULL,
	            [wrd_id_guardian] [varchar](50) NOT NULL,
	            [yn_id_discussion] [varchar](50) NOT NULL,
	            [yn_id_helpline] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_referral] PRIMARY KEY CLUSTERED 
            (
	            [rfr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_referral_upload')
                DROP TABLE [dbo].[hh_referral_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_referral_upload](
	            [rfr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [rfr_id] [varchar](50) NOT NULL,
	            [rfr_serial_no] [varchar](500) NOT NULL,
	            [rfr_ra_location] [varchar](500) NOT NULL,
	            [rfr_ra_tel] [varchar](500) NOT NULL,
	            [rfr_ra_email] [varchar](500) NOT NULL,
	            [rfr_ra_person_name] [varchar](500) NOT NULL,
	            [rfr_ra_person_title] [varchar](500) NOT NULL,
	            [rfr_ra_person_tel] [varchar](500) NOT NULL,
	            [rfr_ra_person_email] [varchar](500) NOT NULL,
	            [rfr_ra_date] [datetime] NOT NULL,
	            [rfr_cd_case_no] [varchar](500) NOT NULL,
	            [rfr_cd_nature] [varchar](500) NOT NULL,
	            [rfr_cd_perpetrator] [varchar](500) NOT NULL,
	            [rfr_cd_perpetrator_relationship] [varchar](500) NOT NULL,
	            [rfr_cd_date_occured] [datetime] NOT NULL,
	            [rfr_cd_other] [varchar](max) NOT NULL,
	            [rfr_cd_accompany_name] [varchar](500) NOT NULL,
	            [rfr_cd_accompany_tel] [varchar](500) NOT NULL,
	            [rfr_cd_accompany_email] [varchar](500) NOT NULL,
	            [rfr_cd_accompany_relationship] [varchar](500) NOT NULL,
	            [rfr_cd_guardian_name] [varchar](500) NOT NULL,
	            [rfr_cd_guardian_tel] [varchar](500) NOT NULL,
	            [rfr_cd_guardian_village] [varchar](500) NOT NULL,
	            [rfr_service_before] [varchar](max) NOT NULL,
	            [rfr_service_referral] [varchar](max) NOT NULL,
	            [rfr_service_discussion] [varchar](max) NOT NULL,
	            [rfr_ar_name] [varchar](500) NOT NULL,
	            [rfr_ar_location] [varchar](500) NOT NULL,
	            [rfr_ar_contact_name] [varchar](500) NOT NULL,
	            [rfr_ar_contact_tel] [varchar](500) NOT NULL,
	            [rfr_ar_contact_email] [varchar](500) NOT NULL,
	            [rfr_fb_agency_name] [varchar](500) NOT NULL,
	            [rfr_fb_person_name] [varchar](500) NOT NULL,
	            [rfr_fb_person_title] [varchar](500) NOT NULL,
	            [rfr_fb_location] [varchar](500) NOT NULL,
	            [rfr_fb_tel] [varchar](500) NOT NULL,
	            [rfr_fb_email] [varchar](500) NOT NULL,
	            [rfr_fb_date] [datetime] NOT NULL,
	            [rfr_fb_id_no] [varchar](500) NOT NULL,
	            [rfr_fb_case_no] [varchar](500) NOT NULL,
	            [rfr_fb_service] [varchar](max) NOT NULL,
	            [rfr_fb_other] [varchar](max) NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [prt_cso_id_ra] [varchar](50) NOT NULL,
	            [wrd_id_guardian] [varchar](50) NOT NULL,
	            [yn_id_discussion] [varchar](50) NOT NULL,
	            [yn_id_helpline] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_referral_upload] PRIMARY KEY CLUSTERED 
            (
	            [rfr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_insert] ON [dbo].[hh_referral] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_upload]
                        ([rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_update] ON [dbo].[hh_referral] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(rfr_id) OR UPDATE(rfr_serial_no) OR UPDATE(rfr_ra_location) OR UPDATE(rfr_ra_tel) OR UPDATE(rfr_ra_email) OR UPDATE(rfr_ra_person_name) OR UPDATE(rfr_ra_person_title) OR UPDATE(rfr_ra_person_tel) OR UPDATE(rfr_ra_person_email) OR UPDATE(rfr_ra_date) OR UPDATE(rfr_cd_case_no) OR UPDATE(rfr_cd_nature) OR UPDATE(rfr_cd_perpetrator) OR UPDATE(rfr_cd_perpetrator_relationship) OR UPDATE(rfr_cd_date_occured) OR UPDATE(rfr_cd_other) OR UPDATE(rfr_cd_accompany_name) OR UPDATE(rfr_cd_accompany_tel) OR UPDATE(rfr_cd_accompany_email) OR UPDATE(rfr_cd_accompany_relationship) OR UPDATE(rfr_cd_guardian_name) OR UPDATE(rfr_cd_guardian_tel) OR UPDATE(rfr_cd_guardian_village) OR UPDATE(rfr_service_before) OR UPDATE(rfr_service_referral) OR UPDATE(rfr_service_discussion) OR UPDATE(rfr_ar_name) OR UPDATE(rfr_ar_location) OR UPDATE(rfr_ar_contact_name) OR UPDATE(rfr_ar_contact_tel) OR UPDATE(rfr_ar_contact_email) OR UPDATE(rfr_fb_agency_name) OR UPDATE(rfr_fb_person_name) OR UPDATE(rfr_fb_person_title) OR UPDATE(rfr_fb_location) OR UPDATE(rfr_fb_tel) OR UPDATE(rfr_fb_email) OR UPDATE(rfr_fb_date) OR UPDATE(rfr_fb_id_no) OR UPDATE(rfr_fb_case_no) OR UPDATE(rfr_fb_service) OR UPDATE(rfr_fb_other) OR UPDATE(hhm_id) OR UPDATE(prt_cso_id_ra) OR UPDATE(wrd_id_guardian) OR UPDATE(yn_id_discussion) OR UPDATE(yn_id_helpline))
	                BEGIN
		                INSERT INTO [dbo].[hh_referral_upload]
							([rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_delete] ON [dbo].[hh_referral] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_upload]
                        ([rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhReferralServiceProvided(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_referral_service_provided')
                DROP TABLE [dbo].[hh_referral_service_provided] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_referral_service_provided](
	            [rsp_id] [varchar](50) NOT NULL,
	            [rfr_id] [varchar](50) NOT NULL,
	            [svp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_referral_service_provided] PRIMARY KEY CLUSTERED 
            (
	            [rsp_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_referral_service_provided_upload')
                DROP TABLE [dbo].[hh_referral_service_provided_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_referral_service_provided_upload](
	            [rsp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [rsp_id] [varchar](50) NOT NULL,
	            [rfr_id] [varchar](50) NOT NULL,
	            [svp_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_referral_service_provided_upload] PRIMARY KEY CLUSTERED 
            (
	            [rsp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_provided_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_provided_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_provided_insert] ON [dbo].[hh_referral_service_provided] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_provided_upload]
                        ([rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_provided_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_provided_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_provided_delete] ON [dbo].[hh_referral_service_provided] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_provided_upload]
                        ([rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateHhReferralServiceReferred(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_referral_service_referred')
                DROP TABLE [dbo].[hh_referral_service_referred] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_referral_service_referred](
	            [rsr_id] [varchar](50) NOT NULL,
	            [rfr_id] [varchar](50) NOT NULL,
	            [svr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_hh_referral_service_referred] PRIMARY KEY CLUSTERED 
            (
	            [rsr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_referral_service_referred_upload')
                DROP TABLE [dbo].[hh_referral_service_referred_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_referral_service_referred_upload](
	            [rsr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [rsr_id] [varchar](50) NOT NULL,
	            [rfr_id] [varchar](50) NOT NULL,
	            [svr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_hh_referral_service_referred_upload] PRIMARY KEY CLUSTERED 
            (
	            [rsr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_referred_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_referred_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_referred_insert] ON [dbo].[hh_referral_service_referred] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_referred_upload]
                        ([rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_referred_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_referred_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_referred_delete] ON [dbo].[hh_referral_service_referred] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_referred_upload]
                        ([rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateLstApprenticeshipPartner(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_apprenticeship_partner')
                DROP TABLE [dbo].[lst_apprenticeship_partner] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_apprenticeship_partner](
	            [apt_id] [varchar](50) NOT NULL,
	            [apt_name] [varchar](500) NOT NULL,
	            [apt_order] [int] NOT NULL,
	            [apt_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_apprenticeship_partner] PRIMARY KEY CLUSTERED 
            (
	            [apt_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstCso(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_cso')
                DROP TABLE [dbo].[lst_cso] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_cso](
	            [cso_id] [varchar](50) NOT NULL,
	            [cso_name] [varchar](500) NOT NULL,
	            [cso_other] [varchar](500) NOT NULL,
	            [cso_order] [int] NOT NULL,
	            [cso_active] [bit] NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_cso] PRIMARY KEY CLUSTERED 
            (
	            [cso_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDisabilityType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_disability_type')
                DROP TABLE [dbo].[lst_disability_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_disability_type](
	            [dtp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dtp_id] [varchar](50) NOT NULL,
	            [dtp_name] [varchar](500) NOT NULL,
	            [dtp_order] [int] NOT NULL,
	            [dtp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_disability_type] PRIMARY KEY CLUSTERED 
            (
	            [dtp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDistrict(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_district')
                DROP TABLE [dbo].[lst_district] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_district](
	            [dst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [dst_name] [varchar](500) NOT NULL,
	            [dst_order] [int] NOT NULL,
	            [dst_active] [bit] NOT NULL,
	            [rgn_id] [varchar](50) NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_district] PRIMARY KEY CLUSTERED 
            (
	            [dst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsPartnerType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_partner_type')
                DROP TABLE [dbo].[lst_dreams_partner_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_partner_type](
	            [dptp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dptp_id] [varchar](50) NOT NULL,
	            [dptp_name] [varchar](500) NOT NULL,
	            [dptp_order] [int] NOT NULL,
	            [dptp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_dreams_partner_type] PRIMARY KEY CLUSTERED 
            (
	            [dptp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsRecordType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_record_type')
                DROP TABLE [dbo].[lst_dreams_record_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_record_type](
	            [drt_sid] [int] IDENTITY(1,1) NOT NULL,
	            [drt_id] [varchar](50) NOT NULL,
	            [drt_name] [varchar](500) NOT NULL,
	            [drt_order] [int] NOT NULL,
	            [drt_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_dreams_record_type] PRIMARY KEY CLUSTERED 
            (
	            [drt_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_service')
                DROP TABLE [dbo].[lst_dreams_service] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_service](
	            [dsrv_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsrv_id] [varchar](50) NOT NULL,
	            [dsrv_name] [varchar](500) NOT NULL,
	            [dsrv_order] [int] NOT NULL,
	            [dsrv_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_dreams_service] PRIMARY KEY CLUSTERED 
            (
	            [dsrv_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsServiceOther(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_service_other')
                DROP TABLE [dbo].[lst_dreams_service_other] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_service_other](
	            [dso_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dso_id] [varchar](50) NOT NULL,
	            [dso_name] [varchar](500) NOT NULL,
	            [dso_order] [int] NOT NULL,
	            [dso_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
                CONSTRAINT [PK_lst_dreams_service_other] PRIMARY KEY CLUSTERED 
            (
	            [dso_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsSessionAction(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_session_action')
                DROP TABLE [dbo].[lst_dreams_session_action] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_session_action](
	            [dsa_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsa_id] [varchar](50) NOT NULL,
	            [dsa_name] [varchar](500) NOT NULL,
	            [dsa_order] [int] NOT NULL,
	            [dsa_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_dreams_session_action] PRIMARY KEY CLUSTERED 
            (
	            [dsa_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsSessionFollowup(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_session_followup')
                DROP TABLE [dbo].[lst_dreams_session_followup] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_session_followup](
	            [dsf_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsf_id] [varchar](50) NOT NULL,
	            [dsf_name] [varchar](500) NOT NULL,
	            [dsf_order] [int] NOT NULL,
	            [dsf_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_dreams_session_followup] PRIMARY KEY CLUSTERED 
            (
	            [dsf_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstDreamsSessionFollowupMethod(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_session_followup_method')
                DROP TABLE [dbo].[lst_dreams_session_followup_method] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_dreams_session_followup_method](
	            [dsfm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [dsfm_id] [varchar](50) NOT NULL,
	            [dsfm_name] [varchar](500) NOT NULL,
	            [dsfm_order] [int] NOT NULL,
	            [dsfm_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_dreams_session_followup_method] PRIMARY KEY CLUSTERED 
            (
	            [dsfm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstEducationLevel(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_education_level')
                DROP TABLE [dbo].[lst_education_level] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_education_level](
	            [edu_sid] [int] IDENTITY(1,1) NOT NULL,
	            [edu_id] [varchar](50) NOT NULL,
	            [edu_name] [varchar](500) NOT NULL,
	            [edu_order] [int] NOT NULL,
	            [edu_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_education_level] PRIMARY KEY CLUSTERED 
            (
	            [edu_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstEducationStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_education_status')
                DROP TABLE [dbo].[lst_education_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_education_status](
	            [est_sid] [int] IDENTITY(1,1) NOT NULL,
	            [est_id] [varchar](50) NOT NULL,
	            [est_name] [varchar](500) NOT NULL,
	            [est_order] [int] NOT NULL,
	            [est_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_education_status] PRIMARY KEY CLUSTERED 
            (
	            [est_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstEntryType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_entry_type')
                DROP TABLE [dbo].[lst_entry_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_entry_type](
	            [etp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [etp_id] [varchar](50) NOT NULL,
	            [etp_name] [varchar](500) NOT NULL,
	            [etp_order] [int] NOT NULL,
	            [etp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_entry_type] PRIMARY KEY CLUSTERED 
            (
	            [etp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstFacility(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_facility')
                DROP TABLE [dbo].[lst_facility] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_facility](
	            [flt_id] [varchar](50) NOT NULL,
	            [flt_name] [varchar](500) NOT NULL,
	            [flt_order] [int] NOT NULL,
	            [flt_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_facility] PRIMARY KEY CLUSTERED 
            (
	            [flt_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstFinancialSupportType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_financial_support_type')
                DROP TABLE [dbo].[lst_financial_support_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_financial_support_type](
	            [fst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [fst_id] [varchar](50) NOT NULL,
	            [fst_name] [varchar](500) NOT NULL,
	            [fst_order] [int] NOT NULL,
	            [fst_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_financial_support_type] PRIMARY KEY CLUSTERED 
            (
	            [fst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstFinancialYear(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_financial_year')
                DROP TABLE [dbo].[lst_financial_year] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_financial_year](
	            [fy_id] [varchar](50) NOT NULL,
	            [fy_name] [varchar](500) NOT NULL,
	            [fy_order] [int] NOT NULL,
	            [fy_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_financial_year] PRIMARY KEY CLUSTERED 
            (
	            [fy_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstGBVType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_gbv_type')
                DROP TABLE [dbo].[lst_gbv_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_gbv_type](
	            [gbv_sid] [int] IDENTITY(1,1) NOT NULL,
	            [gbv_id] [varchar](50) NOT NULL,
	            [gbv_name] [varchar](500) NOT NULL,
	            [gbv_order] [int] NOT NULL,
	            [gbv_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_gbv_type] PRIMARY KEY CLUSTERED 
            (
	            [gbv_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstGender(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_gender')
                DROP TABLE [dbo].[lst_gender] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_gender](
	            [gnd_sid] [int] IDENTITY(1,1) NOT NULL,
	            [gnd_id] [varchar](50) NOT NULL,
	            [gnd_name] [varchar](500) NOT NULL,
	            [gnd_order] [int] NOT NULL,
	            [gnd_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [UserId_create] [varchar](50) NOT NULL,
	            [UserId_update] [varchar](50) NOT NULL,
	            [User_date_create] [datetime] NOT NULL,
	            [User_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_gender] PRIMARY KEY CLUSTERED 
            (
	            [gnd_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstHivStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_hiv_status')
                DROP TABLE [dbo].[lst_hiv_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_hiv_status](
	            [hst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hst_id] [varchar](50) NOT NULL,
	            [hst_name] [varchar](500) NOT NULL,
	            [hst_order] [int] NOT NULL,
	            [hst_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_hiv_status] PRIMARY KEY CLUSTERED 
            (
	            [hst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstHonorific(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_honorific')
                DROP TABLE [dbo].[lst_honorific] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_honorific](
	            [hnr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hnr_id] [varchar](50) NOT NULL,
	            [hnr_name] [varchar](500) NOT NULL,
	            [hnr_order] [int] NOT NULL,
	            [hnr_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_honorific] PRIMARY KEY CLUSTERED 
            (
	            [hnr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstHouseholdStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_household_status')
                DROP TABLE [dbo].[lst_household_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_household_status](
	            [hhs_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hhs_id] [varchar](50) NOT NULL,
	            [hhs_name] [varchar](500) NOT NULL,
	            [hhs_order] [int] NOT NULL,
	            [hhs_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_household_status] PRIMARY KEY CLUSTERED 
            (
	            [hhs_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstHouseholdStatusReason(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_household_status_reason')
                DROP TABLE [dbo].[lst_household_status_reason] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_household_status_reason](
	            [hhsr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [hhsr_id] [varchar](50) NOT NULL,
	            [hhsr_name] [varchar](500) NOT NULL,
	            [hhsr_order] [int] NOT NULL,
	            [hhsr_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_household_status_reason] PRIMARY KEY CLUSTERED 
            (
	            [hhsr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstIncomeContributor(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_income_contributor')
                DROP TABLE [dbo].[lst_income_contributor] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_income_contributor](
	            [icc_sid] [int] IDENTITY(1,1) NOT NULL,
	            [icc_id] [varchar](50) NOT NULL,
	            [icc_name] [varchar](500) NOT NULL,
	            [icc_order] [int] NOT NULL,
	            [icc_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_income_contributor] PRIMARY KEY CLUSTERED 
            (
	            [icc_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstIncomeSource(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_income_source')
                DROP TABLE [dbo].[lst_income_source] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_income_source](
	            [ics_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ics_id] [varchar](50) NOT NULL,
	            [ics_name] [varchar](500) NOT NULL,
	            [ics_order] [int] NOT NULL,
	            [ics_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_income_source] PRIMARY KEY CLUSTERED 
            (
	            [ics_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstInstitution(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_institution')
                DROP TABLE [dbo].[lst_institution] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_institution](
	            [ins_id] [varchar](50) NOT NULL,
	            [ins_name] [varchar](500) NOT NULL,
	            [ins_order] [int] NOT NULL,
	            [ins_active] [bit] NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_institution] PRIMARY KEY CLUSTERED 
            (
	            [ins_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstMaritalStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_marital_status')
                DROP TABLE [dbo].[lst_marital_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_marital_status](
	            [mst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [mst_id] [varchar](50) NOT NULL,
	            [mst_name] [varchar](500) NOT NULL,
	            [mst_order] [int] NOT NULL,
	            [mst_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_marital_status] PRIMARY KEY CLUSTERED 
            (
	            [mst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstMemberType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_member_type')
                DROP TABLE [dbo].[lst_member_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_member_type](
	            [mtp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [mtp_name] [varchar](500) NOT NULL,
	            [mtp_order] [int] NOT NULL,
	            [mtp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_member_type] PRIMARY KEY CLUSTERED 
            (
	            [mtp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstOfficeStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_office_status')
                DROP TABLE [dbo].[lst_office_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_office_status](
	            [ost_id] [varchar](50) NOT NULL,
	            [ost_name] [varchar](250) NOT NULL,
	            [ost_order] [int] NOT NULL,
	            [ost_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_office_status] PRIMARY KEY CLUSTERED 
            (
	            [ost_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstOfficeType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_office_type')
                DROP TABLE [dbo].[lst_office_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_office_type](
	            [otp_id] [varchar](50) NOT NULL,
	            [otp_name] [varchar](250) NOT NULL,
	            [otp_order] [int] NOT NULL,
	            [otp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_office_type] PRIMARY KEY CLUSTERED 
            (
	            [otp_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstOftenSometimesNever(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_often_sometimes_never')
                DROP TABLE [dbo].[lst_often_sometimes_never] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_often_sometimes_never](
	            [osn_sid] [int] IDENTITY(1,1) NOT NULL,
	            [osn_id] [varchar](50) NOT NULL,
	            [osn_name] [varchar](500) NOT NULL,
	            [osn_order] [int] NOT NULL,
	            [osn_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_often_sometimes_never] PRIMARY KEY CLUSTERED 
            (
	            [osn_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstOnlineStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_online_status')
                DROP TABLE [dbo].[lst_online_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_online_status](
	            [ols_id] [varchar](50) NOT NULL,
	            [ols_name] [varchar](250) NOT NULL,
	            [ols_order] [int] NOT NULL,
	            [ols_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_online_status] PRIMARY KEY CLUSTERED 
            (
	            [ols_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstParentalStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_parental_status')
                DROP TABLE [dbo].[lst_parental_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_parental_status](
	            [pst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [pst_id] [varchar](50) NOT NULL,
	            [pst_name] [varchar](500) NOT NULL,
	            [pst_order] [int] NOT NULL,
	            [pst_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_parental_status] PRIMARY KEY CLUSTERED 
            (
	            [pst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreatelstPartner(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_partner')
                DROP TABLE [dbo].[lst_partner] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_partner](
	            [prt_id] [varchar](50) NOT NULL,
	            [prt_name] [varchar](500) NOT NULL,
	            [prt_other] [varchar](500) NOT NULL,
	            [prt_order] [int] NOT NULL,
	            [prt_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_partner] PRIMARY KEY CLUSTERED 
            (
	            [prt_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstPCAType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_pca_type')
                DROP TABLE [dbo].[lst_pca_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_pca_type](
	            [pca_sid] [int] IDENTITY(1,1) NOT NULL,
	            [pca_id] [varchar](50) NOT NULL,
	            [pca_name] [varchar](500) NOT NULL,
	            [pca_order] [int] NOT NULL,
	            [pca_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_pca_type] PRIMARY KEY CLUSTERED 
            (
	            [pca_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstProfession(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_profession')
                DROP TABLE [dbo].[lst_profession] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_profession](
	            [prf_sid] [int] IDENTITY(1,1) NOT NULL,
	            [prf_id] [varchar](50) NOT NULL,
	            [prf_name] [varchar](500) NOT NULL,
	            [prf_order] [int] NOT NULL,
	            [prf_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_profession] PRIMARY KEY CLUSTERED 
            (
	            [prf_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstProtection(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_protection')
                DROP TABLE [dbo].[lst_protection] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_protection](
	            [prt_sid] [int] IDENTITY(1,1) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [prt_name] [varchar](500) NOT NULL,
	            [prt_order] [int] NOT NULL,
	            [prt_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_protection] PRIMARY KEY CLUSTERED 
            (
	            [prt_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstPVCService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_pvc_service')
                DROP TABLE [dbo].[lst_pvc_service] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_pvc_service](
	            [pvcs_sid] [int] IDENTITY(1,1) NOT NULL,
	            [pvcs_id] [varchar](50) NOT NULL,
	            [pvcs_name] [varchar](500) NOT NULL,
	            [pvcs_order] [int] NOT NULL,
	            [pvcs_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_pvc_service] PRIMARY KEY CLUSTERED 
            (
	            [pvcs_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstQuarterYear(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_quarter_year')
                DROP TABLE [dbo].[lst_quarter_year] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_quarter_year](
	            [qy_id] [varchar](50) NOT NULL,
	            [qy_name] [varchar](500) NOT NULL,
	            [qy_begin] [int] NOT NULL,
	            [qy_end] [int] NOT NULL,
	            [qy_order] [int] NOT NULL,
	            [qy_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_quarter_year] PRIMARY KEY CLUSTERED 
            (
	            [qy_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstRecordType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_record_type')
                DROP TABLE [dbo].[lst_record_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_record_type](
	            [rtp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [rtp_id] [varchar](50) NOT NULL,
	            [rtp_name] [varchar](500) NOT NULL,
	            [rtp_order] [int] NOT NULL,
	            [rtp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_record_type] PRIMARY KEY CLUSTERED 
            (
	            [rtp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstRegion(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_region')
                DROP TABLE [dbo].[lst_region] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_region](
	            [rgn_sid] [int] IDENTITY(1,1) NOT NULL,
	            [rgn_id] [varchar](50) NOT NULL,
	            [rgn_name] [varchar](500) NOT NULL,
	            [rgn_order] [int] NOT NULL,
	            [rgn_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_region] PRIMARY KEY CLUSTERED 
            (
	            [rgn_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSegment(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_segment')
                DROP TABLE [dbo].[lst_segment] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_segment](
	            [sgm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sgm_id] [varchar](50) NOT NULL,
	            [sgm_name] [varchar](500) NOT NULL,
	            [sgm_order] [int] NOT NULL,
	            [sgm_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_segment] PRIMARY KEY CLUSTERED 
            (
	            [sgm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSEROStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_sero_status')
                DROP TABLE [dbo].[lst_sero_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_sero_status](
	            [sst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sst_id] [varchar](50) NOT NULL,
	            [sst_name] [varchar](500) NOT NULL,
	            [sst_order] [int] NOT NULL,
	            [sst_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_sero_status] PRIMARY KEY CLUSTERED 
            (
	            [sst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstServiceHomeVisit(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_service_home_visit')
                DROP TABLE [dbo].[lst_service_home_visit] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_service_home_visit](
	            [shv_sid] [int] IDENTITY(1,1) NOT NULL,
	            [shv_id] [varchar](50) NOT NULL,
	            [shv_name] [varchar](500) NOT NULL,
	            [shv_order] [int] NOT NULL,
	            [shv_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_service_home_visit] PRIMARY KEY CLUSTERED 
            (
	            [shv_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstServiceHomeVisitPrevious(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_service_home_visit_previous')
                DROP TABLE [dbo].[lst_service_home_visit_previous] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_service_home_visit_previous](
	            [shvp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [shvp_id] [varchar](50) NOT NULL,
	            [shvp_name] [varchar](500) NOT NULL,
	            [shvp_order] [int] NOT NULL,
	            [shvp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_service_home_visit_previous] PRIMARY KEY CLUSTERED 
            (
	            [shvp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstServiceProvided(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_service_provided')
                DROP TABLE [dbo].[lst_service_provided] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_service_provided](
	            [svp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [svp_id] [varchar](50) NOT NULL,
	            [svp_name] [varchar](500) NOT NULL,
	            [svp_order] [int] NOT NULL,
	            [svp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_service_provided] PRIMARY KEY CLUSTERED 
            (
	            [svp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstServiceReferred(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_service_referred')
                DROP TABLE [dbo].[lst_service_referred] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_service_referred](
	            [svr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [svr_id] [varchar](50) NOT NULL,
	            [svr_name] [varchar](500) NOT NULL,
	            [svr_order] [int] NOT NULL,
	            [svr_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_service_referred] PRIMARY KEY CLUSTERED 
            (
	            [svr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSocialEconomic(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_social_economic')
                DROP TABLE [dbo].[lst_social_economic] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_social_economic](
	            [sec_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sec_id] [varchar](50) NOT NULL,
	            [sec_name] [varchar](500) NOT NULL,
	            [sec_order] [int] NOT NULL,
	            [sec_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_social_economic] PRIMARY KEY CLUSTERED 
            (
	            [sec_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSocialWorkerStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_social_worker_status')
                DROP TABLE [dbo].[lst_social_worker_status] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_social_worker_status](
	            [sws_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sws_id] [varchar](50) NOT NULL,
	            [sws_name] [varchar](500) NOT NULL,
	            [sws_order] [int] NOT NULL,
	            [sws_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_social_worker_status] PRIMARY KEY CLUSTERED 
            (
	            [sws_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSocialWorkerType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_social_worker_type')
                DROP TABLE [dbo].[lst_social_worker_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_social_worker_type](
	            [swt_sid] [int] IDENTITY(1,1) NOT NULL,
	            [swt_id] [varchar](50) NOT NULL,
	            [swt_name] [varchar](500) NOT NULL,
	            [swt_order] [int] NOT NULL,
	            [swt_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_social_worker_type] PRIMARY KEY CLUSTERED 
            (
	            [swt_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstStaffStructure(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_staff_structure')
                DROP TABLE [dbo].[lst_staff_structure] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_staff_structure](
	            [ss_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ss_id] [varchar](50) NOT NULL,
	            [ss_name] [varchar](500) NOT NULL,
	            [ss_order] [int] NOT NULL,
	            [ss_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_staff_structure] PRIMARY KEY CLUSTERED 
            (
	            [ss_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSubCounty(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_sub_county')
                DROP TABLE [dbo].[lst_sub_county] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_sub_county](
	            [sct_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sct_id] [varchar](50) NOT NULL,
	            [sct_name] [varchar](500) NOT NULL,
	            [sct_order] [int] NOT NULL,
	            [sct_active] [bit] NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_sub_county] PRIMARY KEY CLUSTERED 
            (
	            [sct_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstSyncUpload(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_sync_upload')
                DROP TABLE [dbo].[lst_sync_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_sync_upload](
	            [sul_id] [varchar](50) NOT NULL,
	            [sul_name] [varchar](500) NOT NULL,
	            [sul_key] [varchar](500) NOT NULL,
	            [sul_order] [int] NOT NULL,
	            [sul_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_sync_upload] PRIMARY KEY CLUSTERED 
            (
	            [sul_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstTrainingType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_training_type')
                DROP TABLE [dbo].[lst_training_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_training_type](
	            [ttp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ttp_id] [varchar](50) NOT NULL,
	            [ttp_name] [varchar](500) NOT NULL,
	            [ttp_other] [varchar](500) NOT NULL,
	            [ttp_order] [int] NOT NULL,
	            [ttp_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_training_type] PRIMARY KEY CLUSTERED 
            (
	            [ttp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstVisit(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_visit')
                DROP TABLE [dbo].[lst_visit] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_visit](
	            [vst_sid] [int] IDENTITY(1,1) NOT NULL,
	            [vst_id] [varchar](50) NOT NULL,
	            [vst_name] [varchar](500) NOT NULL,
	            [vst_order] [int] NOT NULL,
	            [vst_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_visit] PRIMARY KEY CLUSTERED 
            (
	            [vst_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstWard(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_ward')
                DROP TABLE [dbo].[lst_ward] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_ward](
	            [wrd_sid] [int] IDENTITY(1,1) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [wrd_name] [varchar](500) NOT NULL,
	            [wrd_order] [int] NOT NULL,
	            [wrd_active] [bit] NOT NULL,
	            [sct_id] [varchar](50) NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_ward] PRIMARY KEY CLUSTERED 
            (
	            [wrd_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstYesNo(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no')
                DROP TABLE [dbo].[lst_yes_no] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_yes_no](
	            [yn_sid] [int] IDENTITY(1,1) NOT NULL,
	            [yn_id] [varchar](50) NOT NULL,
	            [yn_name] [varchar](500) NOT NULL,
	            [yn_order] [int] NOT NULL,
	            [yn_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_yes_no] PRIMARY KEY CLUSTERED 
            (
	            [yn_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstYesNoDontKnow(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no_dont_know')
                DROP TABLE [dbo].[lst_yes_no_dont_know] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_yes_no_dont_know](
	            [ynd_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ynd_id] [varchar](50) NOT NULL,
	            [ynd_name] [varchar](500) NOT NULL,
	            [ynd_order] [int] NOT NULL,
	            [ynd_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_yes_no_dont_know] PRIMARY KEY CLUSTERED 
            (
	            [ynd_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstYesNoNotAlways(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no_not_always')
                DROP TABLE [dbo].[lst_yes_no_not_always] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_yes_no_not_always](
	            [ynna_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ynna_id] [varchar](50) NOT NULL,
	            [ynna_name] [varchar](500) NOT NULL,
	            [ynna_order] [int] NOT NULL,
	            [ynna_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_yes_no_unknown] PRIMARY KEY CLUSTERED 
            (
	            [ynna_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstYesNoShared(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no_shared')
                DROP TABLE [dbo].[lst_yes_no_shared] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_yes_no_shared](
	            [yns_sid] [int] IDENTITY(1,1) NOT NULL,
	            [yns_id] [varchar](50) NOT NULL,
	            [yns_name] [varchar](500) NOT NULL,
	            [yns_order] [int] NOT NULL,
	            [yns_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_yes_no_shared] PRIMARY KEY CLUSTERED 
            (
	            [yns_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLstYesNoneSome(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_none_some')
                DROP TABLE [dbo].[lst_yes_none_some] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_yes_none_some](
	            [ynns_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ynns_id] [varchar](50) NOT NULL,
	            [ynns_name] [varchar](500) NOT NULL,
	            [ynns_order] [int] NOT NULL,
	            [ynns_active] [bit] NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lst_yes_none_some] PRIMARY KEY CLUSTERED 
            (
	            [ynns_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLtControl(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lt_control')
                DROP TABLE [dbo].[lt_control] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lt_control](
	        [ltc_sid] [int] IDENTITY(1,1) NOT NULL,
	        [ltc_id] [varchar](50) NOT NULL,
	        [ltc_text] [varchar](max) NOT NULL,
	        [ltc_page] [varchar](50) NOT NULL,
	        [ltc_control] [varchar](250) NOT NULL,
	        [ltc_index] [int] NOT NULL,
	        [ltc_index_parent] [varchar](50) NOT NULL,
	        [app_id] [varchar](50) NOT NULL,
	        [ltct_id] [varchar](50) NOT NULL,
	        [lng_id] [char](2) NOT NULL,
	        [usr_id_create] [varchar](50) NOT NULL,
	        [usr_id_update] [varchar](50) NOT NULL,
	        [usr_date_create] [datetime] NOT NULL,
	        [usr_date_update] [datetime] NOT NULL,
         CONSTRAINT [PK_lt_control] PRIMARY KEY CLUSTERED 
        (
	        [ltc_sid] ASC
        )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
        ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLtControlType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lt_control_type')
                DROP TABLE [dbo].[lt_control_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lt_control_type](
	            [ltct_id] [varchar](50) NOT NULL,
	            [ltct_name] [varchar](100) NOT NULL,
	            [ltct_order] [int] NOT NULL,
	            [ltct_active] [bit] NOT NULL,
	            [ltct_container] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lt_control_type] PRIMARY KEY CLUSTERED 
            (
	            [ltct_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLtExclusion(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lt_exclusion')
                DROP TABLE [dbo].[lt_exclusion] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lt_exclusion](
	            [lte_id] [varchar](50) NOT NULL,
	            [lte_name] [varchar](100) NOT NULL,
	            [lte_order] [int] NOT NULL,
	            [lte_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lt_exclusion] PRIMARY KEY CLUSTERED 
            (
	            [lte_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLtLanguage(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lt_language')
                DROP TABLE [dbo].[lt_language] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lt_language](
	            [lng_id] [char](2) NOT NULL,
	            [lng_name] [varchar](100) NOT NULL,
	            [lng_order] [int] NOT NULL,
	            [lng_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lt_language] PRIMARY KEY CLUSTERED 
            (
	            [lng_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLtMessage(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lt_message')
                DROP TABLE [dbo].[lt_message] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lt_message](
	            [ltm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ltm_id] [varchar](50) NOT NULL,
	            [ltm_text] [varchar](max) NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_lt_message] PRIMARY KEY CLUSTERED 
            (
	            [ltm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateLtTable(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lt_table')
                DROP TABLE [dbo].[lt_table] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lt_table](
	            [lt_sid] [int] IDENTITY(1,1) NOT NULL,
	            [lt_name] [varchar](500) NOT NULL,
	            [lt_prefix] [varchar](50) NOT NULL,
	            [lt_parent_table] [varchar](250) NOT NULL,
	            [lt_meta_data] [bit] NOT NULL,
	            [lt_has_active] [bit] NOT NULL,
	            [lt_has_order] [bit] NOT NULL,
	            [lt_has_language] [bit] NOT NULL,
	            [lt_has_parent] [bit] NOT NULL,
	            [lt_can_add] [bit] NOT NULL,
             CONSTRAINT [PK_lt_table] PRIMARY KEY CLUSTERED 
            (
	            [lt_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreatePrtAlternativeCarePanel(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_alternative_care_panel')
                DROP TABLE [dbo].[prt_alternative_care_panel] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_alternative_care_panel](
	            [acp_id] [varchar](50) NOT NULL,
	            [acp_date] [datetime] NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [rgn_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_alternative_care_panel] PRIMARY KEY CLUSTERED 
            (
	            [acp_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_alternative_care_panel_upload')
                DROP TABLE [dbo].[prt_alternative_care_panel_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_alternative_care_panel_upload](
	            [acp_sid] [int] IDENTITY(1,1) NOT NULL,
	            [acp_id] [varchar](50) NOT NULL,
	            [acp_date] [datetime] NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [rgn_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_alternative_care_panel_upload] PRIMARY KEY CLUSTERED 
            (
	            [acp_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_insert] ON [dbo].[prt_alternative_care_panel] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_upload]
                        ([acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_update] ON [dbo].[prt_alternative_care_panel] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(acp_id) OR UPDATE(acp_date) OR UPDATE(fy_id) OR UPDATE(prt_id) OR UPDATE(rgn_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_alternative_care_panel_upload]
							([acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_delete] ON [dbo].[prt_alternative_care_panel] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_upload]
                        ([acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtAlternativeCarePanelDistrict(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_alternative_care_panel_district')
                DROP TABLE [dbo].[prt_alternative_care_panel_district] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_alternative_care_panel_district](
	            [acpd_id] [varchar](50) NOT NULL,
	            [acpd_support_extended] [varchar](5000) NOT NULL,
	            [acp_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [yn_id_established] [varchar](50) NOT NULL,
	            [yn_id_functional] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_alternative_care_panel_district] PRIMARY KEY CLUSTERED 
            (
	            [acpd_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_alternative_care_panel_district_upload')
                DROP TABLE [dbo].[prt_alternative_care_panel_district_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_alternative_care_panel_district_upload](
	            [acpd_sid] [int] IDENTITY(1,1) NOT NULL,
	            [acpd_id] [varchar](50) NOT NULL,
	            [acpd_support_extended] [varchar](5000) NOT NULL,
	            [acp_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [yn_id_established] [varchar](50) NOT NULL,
	            [yn_id_functional] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_alternative_care_panel_district_upload] PRIMARY KEY CLUSTERED 
            (
	            [acpd_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_district_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_district_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_district_insert] ON [dbo].[prt_alternative_care_panel_district] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_district_upload]
                        ([acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_district_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_district_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_district_update] ON [dbo].[prt_alternative_care_panel_district] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(acpd_id) OR UPDATE(acpd_support_extended) OR UPDATE(acp_id) OR UPDATE(dst_id) OR UPDATE(yn_id_established) OR UPDATE(yn_id_functional))
	                BEGIN
		                INSERT INTO [dbo].[prt_alternative_care_panel_district_upload]
							([acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_district_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_district_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_district_delete] ON [dbo].[prt_alternative_care_panel_district] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_district_upload]
                        ([acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtCbsdResourceAllocation(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_resource_allocation')
                DROP TABLE [dbo].[prt_cbsd_resource_allocation] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_resource_allocation](
	            [cra_id] [varchar](50) NOT NULL,
	            [cra_date] [datetime] NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [rgn_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_cbsd_resource_allocation] PRIMARY KEY CLUSTERED 
            (
	            [cra_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_resource_allocation_upload')
                DROP TABLE [dbo].[prt_cbsd_resource_allocation_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_resource_allocation_upload](
	            [cra_sid] [int] IDENTITY(1,1) NOT NULL,
	            [cra_id] [varchar](50) NOT NULL,
	            [cra_date] [datetime] NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [rgn_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_cbsd_resource_allocation_upload] PRIMARY KEY CLUSTERED 
            (
	            [cra_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_insert] ON [dbo].[prt_cbsd_resource_allocation] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_upload]
                        ([cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_update] ON [dbo].[prt_cbsd_resource_allocation] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(cra_id) OR UPDATE(cra_date) OR UPDATE(fy_id) OR UPDATE(prt_id) OR UPDATE(rgn_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_resource_allocation_upload]
							([cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_delete] ON [dbo].[prt_cbsd_resource_allocation] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_upload]
                        ([cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtCbsdResourceAllocationDistrict(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_resource_allocation_district')
                DROP TABLE [dbo].[prt_cbsd_resource_allocation_district] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_resource_allocation_district](
	            [crad_id] [varchar](50) NOT NULL,
	            [crad_cbsd_budget] [float] NOT NULL,
	            [crad_cbsd_realization] [float] NOT NULL,
	            [crad_district_grant_budget] [float] NOT NULL,
	            [crad_probation_realization] [float] NOT NULL,
	            [crad_probation_share] [float] NOT NULL,
	            [cra_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_cbsd_resource_allocation_district] PRIMARY KEY CLUSTERED 
            (
	            [crad_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_resource_allocation_district_upload')
                DROP TABLE [dbo].[prt_cbsd_resource_allocation_district_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_resource_allocation_district_upload](
	            [crad_sid] [int] IDENTITY(1,1) NOT NULL,
	            [crad_id] [varchar](50) NOT NULL,
	            [crad_cbsd_budget] [float] NOT NULL,
	            [crad_cbsd_realization] [float] NOT NULL,
	            [crad_district_grant_budget] [float] NOT NULL,
	            [crad_probation_realization] [float] NOT NULL,
	            [crad_probation_share] [float] NOT NULL,
	            [cra_id] [varchar](50) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_cbsd_resource_allocation_district_upload] PRIMARY KEY CLUSTERED 
            (
	            [crad_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_insert] ON [dbo].[prt_cbsd_resource_allocation_district] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
                        ([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_update] ON [dbo].[prt_cbsd_resource_allocation_district] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(crad_id) OR UPDATE(crad_cbsd_budget) OR UPDATE(crad_cbsd_realization) OR UPDATE(crad_district_grant_budget) OR UPDATE(crad_probation_realization) OR UPDATE(crad_probation_share) OR UPDATE(cra_id) OR UPDATE(dst_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
							([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_delete] ON [dbo].[prt_cbsd_resource_allocation_district] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
                        ([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtCbsdStaffAppraisalTracking(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_staff_appraisal_tracking')
                DROP TABLE [dbo].[prt_cbsd_staff_appraisal_tracking] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_staff_appraisal_tracking](
	            [csat_id] [varchar](50) NOT NULL,
	            [csat_date] [datetime] NOT NULL,
	            [csat_comment] [varchar](max) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_cbsd_staff_appraisal_tracking] PRIMARY KEY CLUSTERED 
            (
	            [csat_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_staff_appraisal_tracking_upload')
                DROP TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_upload](
	            [csat_sid] [int] IDENTITY(1,1) NOT NULL,
	            [csat_id] [varchar](50) NOT NULL,
	            [csat_date] [datetime] NOT NULL,
	            [csat_comment] [varchar](max) NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [prt_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_cbsd_staff_appraisal_tracking_upload] PRIMARY KEY CLUSTERED 
            (
	            [csat_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_insert] ON [dbo].[prt_cbsd_staff_appraisal_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
                        ([csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_update] ON [dbo].[prt_cbsd_staff_appraisal_tracking] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(csat_id) OR UPDATE(csat_date) OR UPDATE(csat_comment) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(prt_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
							([csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_delete] ON [dbo].[prt_cbsd_staff_appraisal_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
                        ([csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtCbsdStaffAppraisalTrackingLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_staff_appraisal_tracking_line')
                DROP TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_line](
	            [csatl_id] [varchar](50) NOT NULL,
	            [csatl_posts_approved] [int] NOT NULL,
	            [csatl_posts_filled] [int] NOT NULL,
	            [csat_id] [varchar](50) NOT NULL,
	            [ss_id] [varchar](50) NOT NULL,
	            [yn_id_conducted] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_cbsd_staff_appraisal_tracking_line] PRIMARY KEY CLUSTERED 
            (
	            [csatl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_cbsd_staff_appraisal_tracking_line_upload')
                DROP TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload](
	            [csatl_sid] [int] IDENTITY(1,1) NOT NULL,
	            [csatl_id] [varchar](50) NOT NULL,
	            [csatl_posts_approved] [int] NOT NULL,
	            [csatl_posts_filled] [int] NOT NULL,
	            [csat_id] [varchar](50) NOT NULL,
	            [ss_id] [varchar](50) NOT NULL,
	            [yn_id_conducted] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_cbsd_staff_appraisal_tracking_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [csatl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_insert] ON [dbo].[prt_cbsd_staff_appraisal_tracking_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
                        ([csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_update] ON [dbo].[prt_cbsd_staff_appraisal_tracking_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(csatl_id) OR UPDATE(csatl_posts_approved) OR UPDATE(csatl_posts_filled) OR UPDATE(csat_id) OR UPDATE(ss_id) OR UPDATE(yn_id_conducted))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
							([csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_delete] ON [dbo].[prt_cbsd_staff_appraisal_tracking_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
                        ([csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtDistrictOVCChecklist(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_district_ovc_checklist')
                DROP TABLE [dbo].[prt_district_ovc_checklist] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_district_ovc_checklist](
	            [doc_id] [varchar](50) NOT NULL,
	            [doc_date] [datetime] NOT NULL,
	            [doc_cso_report] [int] NOT NULL,
	            [doc_cso_total] [int] NOT NULL,
	            [doc_sub_county_reviewed] [int] NOT NULL,
	            [doc_sub_county_total] [int] NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [yn_id_dovcc_actions_taken] [varchar](50) NOT NULL,
	            [yn_id_dovcc_minutes] [varchar](50) NOT NULL,
	            [yn_id_dovcc_minutes_available] [varchar](50) NOT NULL,
	            [yn_id_meetings_held] [varchar](50) NOT NULL,
	            [yn_id_membership_constituted] [varchar](50) NOT NULL,
	            [yn_id_ovcmis_district] [varchar](50) NOT NULL,
	            [yn_id_supervision_reports] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_district_ovc_checklist] PRIMARY KEY CLUSTERED 
            (
	            [doc_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_district_ovc_checklist_upload')
                DROP TABLE [dbo].[prt_district_ovc_checklist_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_district_ovc_checklist_upload](
	            [doc_sid] [int] IDENTITY(1,1) NOT NULL,
	            [doc_id] [varchar](50) NOT NULL,
	            [doc_date] [datetime] NOT NULL,
	            [doc_cso_report] [int] NOT NULL,
	            [doc_cso_total] [int] NOT NULL,
	            [doc_sub_county_reviewed] [int] NOT NULL,
	            [doc_sub_county_total] [int] NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [yn_id_dovcc_actions_taken] [varchar](50) NOT NULL,
	            [yn_id_dovcc_minutes] [varchar](50) NOT NULL,
	            [yn_id_dovcc_minutes_available] [varchar](50) NOT NULL,
	            [yn_id_meetings_held] [varchar](50) NOT NULL,
	            [yn_id_membership_constituted] [varchar](50) NOT NULL,
	            [yn_id_ovcmis_district] [varchar](50) NOT NULL,
	            [yn_id_supervision_reports] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_district_ovc_checklist_upload] PRIMARY KEY CLUSTERED 
            (
	            [doc_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_district_ovc_checklist_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_district_ovc_checklist_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_district_ovc_checklist_insert] ON [dbo].[prt_district_ovc_checklist] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_district_ovc_checklist_upload]
                        ([doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_district_ovc_checklist_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_district_ovc_checklist_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_district_ovc_checklist_update] ON [dbo].[prt_district_ovc_checklist] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(doc_id) OR UPDATE(doc_date) OR UPDATE(doc_cso_report) OR UPDATE(doc_cso_total) OR UPDATE(doc_sub_county_reviewed) OR UPDATE(doc_sub_county_total) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(yn_id_dovcc_actions_taken) OR UPDATE(yn_id_dovcc_minutes) OR UPDATE(yn_id_dovcc_minutes_available) OR UPDATE(yn_id_meetings_held) OR UPDATE(yn_id_membership_constituted) OR UPDATE(yn_id_ovcmis_district) OR UPDATE(yn_id_supervision_reports))
	                BEGIN
		                INSERT INTO [dbo].[prt_district_ovc_checklist_upload]
							([doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_district_ovc_checklist_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_district_ovc_checklist_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_district_ovc_checklist_delete] ON [dbo].[prt_district_ovc_checklist] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_district_ovc_checklist_upload]
                        ([doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtInstitutionalCareSummary(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_institutional_care_summary')
                DROP TABLE [dbo].[prt_institutional_care_summary] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_institutional_care_summary](
	            [ics_id] [varchar](50) NOT NULL,
	            [ics_date] [datetime] NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_institutional_care_summary] PRIMARY KEY CLUSTERED 
            (
	            [ics_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_institutional_care_summary_upload')
                DROP TABLE [dbo].[prt_institutional_care_summary_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_institutional_care_summary_upload](
	            [ics_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ics_id] [varchar](50) NOT NULL,
	            [ics_date] [datetime] NOT NULL,
	            [dst_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_institutional_care_summary_upload] PRIMARY KEY CLUSTERED 
            (
	            [ics_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_insert] ON [dbo].[prt_institutional_care_summary] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
                        ([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_update] ON [dbo].[prt_institutional_care_summary] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ics_id) OR UPDATE(ics_date) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
							([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_delete] ON [dbo].[prt_institutional_care_summary] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
                        ([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreatePrtInstitutionalCareSummaryLine(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_institutional_care_summary_line')
                DROP TABLE [dbo].[prt_institutional_care_summary_line] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_institutional_care_summary_line](
	            [icsl_id] [varchar](50) NOT NULL,
	            [icsl_caregiver_age] [int] NOT NULL,
	            [icsl_caregiver_name] [varchar](500) NOT NULL,
	            [icsl_child_age] [int] NOT NULL,
	            [icsl_child_name] [varchar](500) NOT NULL,
	            [icsl_contact_tel] [varchar](500) NOT NULL,
	            [icsl_contact_village] [varchar](500) NOT NULL,
	            [gnd_id_caregiver] [varchar](50) NOT NULL,
	            [gnd_id_child] [varchar](50) NOT NULL,
	            [ics_id] [varchar](50) NOT NULL,
	            [ins_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_prt_institutional_care_summary_line] PRIMARY KEY CLUSTERED 
            (
	            [icsl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_institutional_care_summary_line_upload')
                DROP TABLE [dbo].[prt_institutional_care_summary_line_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[prt_institutional_care_summary_line_upload](
	            [icsl_sid] [int] IDENTITY(1,1) NOT NULL,
	            [icsl_id] [varchar](50) NOT NULL,
	            [icsl_caregiver_age] [int] NOT NULL,
	            [icsl_caregiver_name] [varchar](500) NOT NULL,
	            [icsl_child_age] [int] NOT NULL,
	            [icsl_child_name] [varchar](500) NOT NULL,
	            [icsl_contact_tel] [varchar](500) NOT NULL,
	            [icsl_contact_village] [varchar](500) NOT NULL,
	            [gnd_id_caregiver] [varchar](50) NOT NULL,
	            [gnd_id_child] [varchar](50) NOT NULL,
	            [ics_id] [varchar](50) NOT NULL,
	            [ins_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_prt_institutional_care_summary_line_upload] PRIMARY KEY CLUSTERED 
            (
	            [icsl_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_insert] ON [dbo].[prt_institutional_care_summary_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
                        ([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_update] ON [dbo].[prt_institutional_care_summary_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(icsl_id) OR UPDATE(icsl_caregiver_age) OR UPDATE(icsl_caregiver_name) OR UPDATE(icsl_child_age) OR UPDATE(icsl_child_name) OR UPDATE(icsl_contact_tel) OR UPDATE(icsl_contact_village) OR UPDATE(gnd_id_caregiver) OR UPDATE(gnd_id_child) OR UPDATE(ics_id) OR UPDATE(ins_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
							([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_delete] ON [dbo].[prt_institutional_care_summary_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
                        ([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSilcFinancialRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_financial_register')
                DROP TABLE [dbo].[silc_financial_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_financial_register](
	            [sfr_id] [varchar](50) NOT NULL,
	            [sfr_contact_details] [varchar](500) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_silc_financial_register] PRIMARY KEY CLUSTERED 
            (
	            [sfr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_financial_register_upload')
                DROP TABLE [dbo].[silc_financial_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_financial_register_upload](
	            [sfr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sfr_id] [varchar](50) NOT NULL,
	            [sfr_contact_details] [varchar](500) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_silc_financial_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [sfr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_insert] ON [dbo].[silc_financial_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_upload]
                        ([sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_update] ON [dbo].[silc_financial_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sfr_id) OR UPDATE(sfr_contact_details) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_financial_register_upload]
							([sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_delete] ON [dbo].[silc_financial_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_upload]
                        ([sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSilcFinancialRegisterGroup(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_financial_register_group')
                DROP TABLE [dbo].[silc_financial_register_group] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_financial_register_group](
	            [sfrg_id] [varchar](50) NOT NULL,
	            [sfrg_members_female] [int] NOT NULL,
	            [sfrg_members_male] [int] NOT NULL,
	            [sfrg_amount_borrowed] [float] NOT NULL,
	            [sfr_id] [varchar](50) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [yn_id_borrowed] [varchar](50) NOT NULL,
	            [yn_id_linked] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_silc_financial_register_group] PRIMARY KEY CLUSTERED 
            (
	            [sfrg_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_financial_register_group_upload')
                DROP TABLE [dbo].[silc_financial_register_group_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_financial_register_group_upload](
	            [sfrg_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sfrg_id] [varchar](50) NOT NULL,
	            [sfrg_members_female] [int] NOT NULL,
	            [sfrg_members_male] [int] NOT NULL,
	            [sfrg_amount_borrowed] [float] NOT NULL,
	            [sfr_id] [varchar](50) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [yn_id_borrowed] [varchar](50) NOT NULL,
	            [yn_id_linked] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_silc_financial_register_group_upload] PRIMARY KEY CLUSTERED 
            (
	            [sfrg_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_group_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_group_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_group_insert] ON [dbo].[silc_financial_register_group] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_group_upload]
                        ([sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_group_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_group_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_group_update] ON [dbo].[silc_financial_register_group] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sfrg_id) OR UPDATE(sfrg_members_female) OR UPDATE(sfrg_members_male) OR UPDATE(sfrg_amount_borrowed) OR UPDATE(sfr_id) OR UPDATE(sg_id) OR UPDATE(yn_id_borrowed) OR UPDATE(yn_id_linked))
	                BEGIN
		                INSERT INTO [dbo].[silc_financial_register_group_upload]
							([sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_group_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_group_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_group_delete] ON [dbo].[silc_financial_register_group] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_group_upload]
                        ([sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSilcGroup(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_group')
                DROP TABLE [dbo].[silc_group] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_group](
	            [sg_id] [varchar](50) NOT NULL,
	            [sg_name] [varchar](500) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_silc_group] PRIMARY KEY CLUSTERED 
            (
	            [sg_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_group_upload')
                DROP TABLE [dbo].[silc_group_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_group_upload](
	            [sg_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [sg_name] [varchar](500) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_silc_group_upload] PRIMARY KEY CLUSTERED 
            (
	            [sg_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_insert] ON [dbo].[silc_group] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_upload]
                        ([sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_update] ON [dbo].[silc_group] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sg_id) OR UPDATE(sg_name))
	                BEGIN
		                INSERT INTO [dbo].[silc_group_upload]
							([sg_id], [sg_name],  
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [sg_id], [sg_name], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_delete] ON [dbo].[silc_group] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_upload]
                        ([sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSilcGroupMember(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_group_member')
                DROP TABLE [dbo].[silc_group_member] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_group_member](
	            [sgm_id] [varchar](50) NOT NULL,
	            [sgm_name] [varchar](500) NOT NULL,
	            [sgm_status_reason] [varchar](5000) NOT NULL,
	            [sgm_active] [bit] NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_silc_group_member] PRIMARY KEY CLUSTERED 
            (
	            [sgm_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_group_member_upload')
                DROP TABLE [dbo].[silc_group_member_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_group_member_upload](
	            [sgm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [sgm_id] [varchar](50) NOT NULL,
	            [sgm_name] [varchar](500) NOT NULL,
	            [sgm_status_reason] [varchar](5000) NOT NULL,
	            [sgm_active] [bit] NOT NULL,
	            [hhm_id] [varchar](50) NOT NULL,
	            [mtp_id] [varchar](50) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_silc_group_member_upload] PRIMARY KEY CLUSTERED 
            (
	            [sgm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_member_insert] ON [dbo].[silc_group_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_member_upload]
                        ([sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_member_update] ON [dbo].[silc_group_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sgm_id) OR UPDATE(sgm_name) OR UPDATE(sgm_status_reason) OR UPDATE(sgm_active) OR UPDATE(hhm_id) OR UPDATE(mtp_id) OR UPDATE(sg_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_group_member_upload]
							([sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_member_delete] ON [dbo].[silc_group_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_member_upload]
                        ([sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSilcSavingsRegister(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_savings_register')
                DROP TABLE [dbo].[silc_savings_register] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_savings_register](
	            [ssr_id] [varchar](50) NOT NULL,
	            [ssr_cycle_number] [varchar](500) NOT NULL,
	            [ssr_share_value] [float] NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_silc_savings_register] PRIMARY KEY CLUSTERED 
            (
	            [ssr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_savings_register_upload')
                DROP TABLE [dbo].[silc_savings_register_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_savings_register_upload](
	            [ssr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ssr_id] [varchar](50) NOT NULL,
	            [ssr_cycle_number] [varchar](500) NOT NULL,
	            [ssr_share_value] [float] NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [fy_id] [varchar](50) NOT NULL,
	            [qy_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [sg_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_silc_savings_register_upload] PRIMARY KEY CLUSTERED 
            (
	            [ssr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_insert] ON [dbo].[silc_savings_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_upload]
                        ([ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_update] ON [dbo].[silc_savings_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ssr_id) OR UPDATE(ssr_cycle_number) OR UPDATE(ssr_share_value) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(wrd_id) OR UPDATE(sg_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_savings_register_upload]
							([ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_delete] ON [dbo].[silc_savings_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_upload]
                        ([ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSilcSavingsRegisterMember(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_savings_register_member')
                DROP TABLE [dbo].[silc_savings_register_member] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_savings_register_member](
	            [ssrm_id] [varchar](50) NOT NULL,
	            [ssrm_shares_bought_today] [float] NOT NULL,
	            [ssrm_shares_brought_forward] [float] NOT NULL,
	            [ssrm_shares_redeemed] [float] NOT NULL,
	            [ssrm_shares_total] [float] NOT NULL,
	            [ssrm_welfare_fund] [varchar](500) NOT NULL,
	            [sgm_id] [varchar](50) NOT NULL,
	            [ssr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_silc_savings_register_member] PRIMARY KEY CLUSTERED 
            (
	            [ssrm_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_savings_register_member_upload')
                DROP TABLE [dbo].[silc_savings_register_member_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[silc_savings_register_member_upload](
	            [ssrm_sid] [int] IDENTITY(1,1) NOT NULL,
	            [ssrm_id] [varchar](50) NOT NULL,
	            [ssrm_shares_bought_today] [float] NOT NULL,
	            [ssrm_shares_brought_forward] [float] NOT NULL,
	            [ssrm_shares_redeemed] [float] NOT NULL,
	            [ssrm_shares_total] [float] NOT NULL,
	            [ssrm_welfare_fund] [varchar](500) NOT NULL,
	            [sgm_id] [varchar](50) NOT NULL,
	            [ssr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_silc_savings_register_member_upload] PRIMARY KEY CLUSTERED 
            (
	            [ssrm_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_member_insert] ON [dbo].[silc_savings_register_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_member_upload]
                        ([ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_member_update] ON [dbo].[silc_savings_register_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ssrm_id) OR UPDATE(ssrm_shares_bought_today) OR UPDATE(ssrm_shares_brought_forward) OR UPDATE(ssrm_shares_redeemed) OR UPDATE(ssrm_shares_total) OR UPDATE(ssrm_welfare_fund) OR UPDATE(sgm_id) OR UPDATE(ssr_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_savings_register_member_upload]
							([ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_member_delete] ON [dbo].[silc_savings_register_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_member_upload]
                        ([ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSsError(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ss_error')
                DROP TABLE [dbo].[ss_error] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ss_error](
	            [err_sid] [int] IDENTITY(1,1) NOT NULL,
	            [err_form] [varchar](50) NOT NULL,
	            [err_method] [varchar](50) NOT NULL,
	            [err_message] [varchar](5000) NOT NULL,
	            [err_stack] [varchar](max) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_ss_error] PRIMARY KEY CLUSTERED 
            (
	            [err_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ss_error_upload')
                DROP TABLE [dbo].[ss_error_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[ss_error_upload](
	            [erru_sid] [int] IDENTITY(1,1) NOT NULL,
	            [err_sid] [int] NOT NULL,
	            [err_form] [varchar](50) NOT NULL,
	            [err_method] [varchar](50) NOT NULL,
	            [err_message] [varchar](5000) NOT NULL,
	            [err_stack] [varchar](max) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_ss_error_upload] PRIMARY KEY CLUSTERED 
            (
	            [erru_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ss_error_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ss_error_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ss_error_insert] ON [dbo].[ss_error] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ss_error_upload]
                        ([err_sid], [err_form], [err_method], [err_message], [err_stack], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [err_sid], [err_form], [err_method], [err_message], [err_stack], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ss_error_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ss_error_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ss_error_delete] ON [dbo].[ss_error] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ss_error_upload]
                        ([err_sid], [err_form], [err_method], [err_message], [err_stack], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [err_sid], [err_form], [err_method], [err_message], [err_stack], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateSwmSocialWorker(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'swm_social_worker')
                DROP TABLE [dbo].[swm_social_worker] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[swm_social_worker](
	            [swk_id] [varchar](50) NOT NULL,
	            [swk_first_name] [varchar](250) NOT NULL,
	            [swk_last_name] [varchar](250) NOT NULL,
	            [swk_email] [varchar](250) NOT NULL,
	            [swk_phone] [varchar](250) NOT NULL,
	            [swk_phone_other] [varchar](250) NOT NULL,
	            [swk_status_reason] [varchar](500) NOT NULL,
	            [swk_village] [varchar](250) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [hnr_id] [varchar](50) NOT NULL,
	            [swk_id_manager] [varchar](50) NOT NULL,
	            [sws_id] [varchar](50) NOT NULL,
	            [swt_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_swm_social_worker] PRIMARY KEY CLUSTERED 
            (
	            [swk_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'swm_social_worker_upload')
                DROP TABLE [dbo].[swm_social_worker_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[swm_social_worker_upload](
	            [swk_sid] [int] IDENTITY(1,1) NOT NULL,
	            [swk_id] [varchar](50) NOT NULL,
	            [swk_first_name] [varchar](250) NOT NULL,
	            [swk_last_name] [varchar](250) NOT NULL,
	            [swk_email] [varchar](250) NOT NULL,
	            [swk_phone] [varchar](250) NOT NULL,
	            [swk_phone_other] [varchar](250) NOT NULL,
	            [swk_status_reason] [varchar](500) NOT NULL,
	            [swk_village] [varchar](250) NOT NULL,
	            [cso_id] [varchar](50) NOT NULL,
	            [hnr_id] [varchar](50) NOT NULL,
	            [swk_id_manager] [varchar](50) NOT NULL,
	            [sws_id] [varchar](50) NOT NULL,
	            [swt_id] [varchar](50) NOT NULL,
	            [wrd_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_swm_social_worker_upload] PRIMARY KEY CLUSTERED 
            (
	            [swk_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'swm_social_worker_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[swm_social_worker_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[swm_social_worker_insert] ON [dbo].[swm_social_worker] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[swm_social_worker_upload]
                        ([swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'swm_social_worker_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[swm_social_worker_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[swm_social_worker_update] ON [dbo].[swm_social_worker] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(swk_id) OR UPDATE(swk_first_name) OR UPDATE(swk_last_name) OR UPDATE(swk_email) OR UPDATE(swk_phone) OR UPDATE(swk_phone_other) OR UPDATE(swk_status_reason) OR UPDATE(swk_village) OR UPDATE(cso_id) OR UPDATE(hnr_id) OR UPDATE(swk_id_manager) OR UPDATE(sws_id) OR UPDATE(swt_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[swm_social_worker_upload]
							([swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'swm_social_worker_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[swm_social_worker_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[swm_social_worker_delete] ON [dbo].[swm_social_worker] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[swm_social_worker_upload]
                        ([swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateUmApplicationSection(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_application_section')
                DROP TABLE [dbo].[um_application_section] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_application_section](
	            [aps_id] [varchar](50) NOT NULL,
	            [aps_name] [varchar](250) NOT NULL,
	            [aps_text] [varchar](250) NOT NULL,
	            [aps_order] [int] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_um_application_section] PRIMARY KEY CLUSTERED 
            (
	            [aps_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmOffice(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_office')
                DROP TABLE [dbo].[um_office] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_office](
	            [ofc_id] [varchar](50) NOT NULL,
	            [ofc_name] [varchar](250) NOT NULL,
	            [ofc_server_id] [varchar](250) NOT NULL,
	            [ofc_email] [varchar](250) NOT NULL,
	            [ofc_phone] [varchar](250) NOT NULL,
	            [ofc_address] [varchar](5000) NOT NULL,
	            [ofc_app_version] [varchar](50) NOT NULL,
	            [ost_id] [varchar](50) NOT NULL,
	            [otp_id] [varchar](50) NOT NULL,
	            [usr_id_contact] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
                [district_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_um_office] PRIMARY KEY CLUSTERED 
            (
	            [ofc_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmOfficePermission(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_office_permission')
                DROP TABLE [dbo].[um_office_permission] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_office_permission](
	            [opr_id] [varchar](50) NOT NULL,
	            [otp_id] [varchar](50) NOT NULL,
	            [prm_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
             CONSTRAINT [PK_um_office_permission] PRIMARY KEY CLUSTERED 
            (
	            [opr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmPermission(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_permission')
                DROP TABLE [dbo].[um_permission] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_permission](
	            [prm_id] [varchar](50) NOT NULL,
	            [prm_name] [varchar](250) NOT NULL,
	            [prm_order] [int] NOT NULL,
	            [prm_active] [bit] NOT NULL,
	            [aps_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_um_permission] PRIMARY KEY CLUSTERED 
            (
	            [prm_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmRole(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_role')
                DROP TABLE [dbo].[um_role] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_role](
	            [rl_id] [varchar](50) NOT NULL,
	            [rl_name] [varchar](250) NOT NULL,
	            [rl_order] [int] NOT NULL,
	            [rl_active] [bit] NOT NULL,
	            [rlt_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_um_role] PRIMARY KEY CLUSTERED 
            (
	            [rl_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmRolePermission(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_role_permission')
                DROP TABLE [dbo].[um_role_permission] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_role_permission](
	            [rlpr_id] [varchar](50) NOT NULL,
	            [prm_id] [varchar](50) NOT NULL,
	            [rl_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
             CONSTRAINT [PK_um_role_permission] PRIMARY KEY CLUSTERED 
            (
	            [rlpr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmRoleType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_role_type')
                DROP TABLE [dbo].[um_role_type] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_role_type](
	            [rlt_id] [varchar](50) NOT NULL,
	            [rlt_name] [varchar](250) NOT NULL,
	            [rlt_order] [int] NOT NULL,
	            [rlt_active] [bit] NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
             CONSTRAINT [PK_um_role_type] PRIMARY KEY CLUSTERED 
            (
	            [rlt_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void CreateUmUser(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_user')
                DROP TABLE [dbo].[um_user] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_user](
	            [usr_id] [varchar](50) NOT NULL,
	            [usr_password] [varchar](128) NOT NULL,
	            [usr_password_format] [int] NOT NULL,
	            [usr_password_salt] [varchar](128) NOT NULL,
	            [usr_first_name] [varchar](250) NOT NULL,
	            [usr_last_name] [varchar](250) NOT NULL,
	            [usr_email] [varchar](250) NOT NULL,
	            [usr_phone] [varchar](250) NOT NULL,
	            [usr_skype] [varchar](250) NOT NULL,
	            [usr_position] [varchar](250) NOT NULL,
	            [usr_active] [bit] NOT NULL,
	            [hnr_id] [varchar](50) NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
             CONSTRAINT [PK_um_user] PRIMARY KEY CLUSTERED 
            (
	            [usr_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_user_upload')
                DROP TABLE [dbo].[um_user_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_user_upload](
	            [usr_sid] [int] IDENTITY(1,1) NOT NULL,
	            [usr_id] [varchar](50) NOT NULL,
	            [usr_password] [varchar](128) NOT NULL,
	            [usr_password_format] [int] NOT NULL,
	            [usr_password_salt] [varchar](128) NOT NULL,
	            [usr_first_name] [varchar](250) NOT NULL,
	            [usr_last_name] [varchar](250) NOT NULL,
	            [usr_email] [varchar](250) NOT NULL,
	            [usr_phone] [varchar](250) NOT NULL,
	            [usr_skype] [varchar](250) NOT NULL,
	            [usr_position] [varchar](250) NOT NULL,
	            [usr_active] [bit] NOT NULL,
	            [hnr_id] [varchar](50) NOT NULL,
	            [lng_id] [char](2) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_id_update] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
	            [usr_date_update] [datetime] NOT NULL,
	            [ofc_id] [varchar](50) NOT NULL,
	            [trg_action] [int] NOT NULL,
             CONSTRAINT [PK_um_user_upload] PRIMARY KEY CLUSTERED 
            (
	            [usr_sid] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'um_user_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[um_user_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[um_user_insert] ON [dbo].[um_user] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[um_user_upload]
                        ([usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                    FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'um_user_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[um_user_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[um_user_update] ON [dbo].[um_user] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(usr_id) OR UPDATE(usr_password) OR UPDATE(usr_password_format) OR UPDATE(usr_password_salt) OR UPDATE(usr_first_name) OR UPDATE(usr_last_name) OR UPDATE(usr_email) OR UPDATE(usr_phone) OR UPDATE(usr_skype) OR UPDATE(usr_position) OR UPDATE(usr_active) OR UPDATE(hnr_id) OR UPDATE(lng_id))
	                BEGIN
		                INSERT INTO [dbo].[um_user_upload]
							([usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                    FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'um_user_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[um_user_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[um_user_delete] ON [dbo].[um_user] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[um_user_upload]
                        ([usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void CreateUmUserRole(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_user_role')
                DROP TABLE [dbo].[um_user_role] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_user_role](
	            [url_id] [varchar](50) NOT NULL,
	            [rl_id] [varchar](50) NOT NULL,
	            [usr_id] [varchar](50) NOT NULL,
	            [usr_id_create] [varchar](50) NOT NULL,
	            [usr_date_create] [datetime] NOT NULL,
             CONSTRAINT [PK_um_user_role] PRIMARY KEY CLUSTERED 
            (
	            [url_id] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void Createhh_household_linkages_tracking(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_linkages_tracking')
                DROP TABLE [dbo].[hh_household_linkages_tracking] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE[dbo].[hh_household_linkages_tracking](
                    [hhm_linkages_record_guid][nvarchar](150) NOT NULL,
                    [partner_id] [nvarchar](50) NOT NULL,
                    [hhm_district_id] [nvarchar](50) NOT NULL,
                    [subcounty_id] [nvarchar](50) NOT NULL,
                    [parish_id] [nvarchar](50) NOT NULL,
                    [village] [nvarchar](100) NOT NULL,
                    [hhm_id] [nvarchar](50) NOT NULL,
                    [service_provider_id] [nvarchar](50) NOT NULL,
                    [usr_id_create] [varchar](50) NOT NULL,
                    [usr_id_update] [varchar](50) NOT NULL,
                    [usr_date_create] [datetime]
                    NOT NULL,
                    [usr_date_update] [datetime]
                    NOT NULL,
                    [ofc_id] [varchar](100) NOT NULL,
                    [district_id] [nvarchar](50) NOT NULL,
                    CONSTRAINT[PK_hh_household_linkages_tracking] PRIMARY KEY CLUSTERED
                    (
                    [hhm_linkages_record_guid] ASC
                    )WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON[PRIMARY]
                    ) ON[PRIMARY]";

                    dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_linkages_tracking_upload')
                DROP TABLE [dbo].[hh_household_linkages_tracking_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE[dbo].[hh_household_linkages_tracking_upload](
                    [hhm_linkages_record_guid][nvarchar](150) NOT NULL,
                    [partner_id] [nvarchar](50) NOT NULL,
                    [hhm_district_id] [nvarchar](50) NOT NULL,
                    [subcounty_id] [nvarchar](50) NOT NULL,
                    [parish_id] [nvarchar](50) NOT NULL,
                    [village] [nvarchar](100) NOT NULL,
                    [hhm_id] [nvarchar](50) NOT NULL,
                    [service_provider_id] [nvarchar](50) NOT NULL,
                    [usr_id_create] [varchar](50) NOT NULL,
                    [usr_id_update] [varchar](50) NOT NULL,
                    [usr_date_create] [datetime]
                    NOT NULL,
                    [usr_date_update] [datetime]
                    NOT NULL,
                    [ofc_id] [varchar](100) NOT NULL,
                    [trg_action] [int] NOT NULL,
                    [district_id] [nvarchar](50) NOT NULL
                    ) ON[PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_tracking_insert] ON [dbo].[hh_household_linkages_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_tracking_upload]
                        ([hhm_linkages_record_guid], [partner_id], [hhm_district_id], [subcounty_id], [parish_id], [village], [hhm_id], [service_provider_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhm_linkages_record_guid], [partner_id], [hhm_district_id], [subcounty_id], [parish_id], [village], [hhm_id], [service_provider_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_tracking_update] ON [dbo].[hh_household_linkages_tracking] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_tracking_upload]
                        ([hhm_linkages_record_guid], [partner_id], [hhm_district_id], [subcounty_id], [parish_id], [village], [hhm_id], [service_provider_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhm_linkages_record_guid], [partner_id], [hhm_district_id], [subcounty_id], [parish_id], [village], [hhm_id], [service_provider_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
                  FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_tracking_delete] ON [dbo].[hh_household_linkages_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_tracking_upload]
                        ([hhm_linkages_record_guid], [partner_id], [hhm_district_id], [subcounty_id], [parish_id], [village], [hhm_id], [service_provider_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhm_linkages_record_guid], [partner_id], [hhm_district_id], [subcounty_id], [parish_id], [village], [hhm_id], [service_provider_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createhh_household_linkages_services_required(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_linkages_services_required')
                DROP TABLE [dbo].[hh_household_linkages_services_required] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_linkages_services_required](
                    [record_guid] [nvarchar](150) NOT NULL,
	                [hhm_linkages_record_guid] [nvarchar](100) NOT NULL,
	                [lsr_id] [nvarchar](50) NOT NULL,
	                [usr_id_create] [varchar](50) NOT NULL,
	                [usr_id_update] [varchar](50) NOT NULL,
	                [usr_date_create] [datetime] NOT NULL,
	                [usr_date_update] [datetime] NOT NULL,
	                [ofc_id] [varchar](100) NOT NULL,
	                [district_id] [nvarchar](50) NOT NULL
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_linkages_services_required_upload')
                DROP TABLE [dbo].[hh_household_linkages_services_required_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_linkages_services_required_upload](
                    [record_guid] [nvarchar](150) NOT NULL,
	                [hhm_linkages_record_guid] [nvarchar](100) NOT NULL,
	                [lsr_id] [nvarchar](50) NOT NULL,
	                [usr_id_create] [varchar](50) NOT NULL,
	                [usr_id_update] [varchar](50) NOT NULL,
	                [usr_date_create] [datetime] NOT NULL,
	                [usr_date_update] [datetime] NOT NULL,
	                [ofc_id] [varchar](100) NOT NULL,
	                [trg_action] [int] NOT NULL,
	                [district_id] [nvarchar](50) NOT NULL
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_services_required_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_services_required_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_services_required_insert] ON [dbo].[hh_household_linkages_services_required] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_services_required_upload]
                        ([record_guid],[hhm_linkages_record_guid], [lsr_id], [usr_id_create],[usr_id_update], [usr_date_create],[usr_date_update], [ofc_id],[trg_action], [district_id])
	                SELECT [record_guid], [hhm_linkages_record_guid], [lsr_id], [usr_id_create],[usr_id_create], [usr_date_create],[usr_date_update], [ofc_id],1, [district_id]
                  FROM INSERTED
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_services_required_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_services_required_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_services_required_update] ON [dbo].[hh_household_linkages_services_required] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_services_required_upload]
                        ([record_guid],[hhm_linkages_record_guid], [lsr_id], [usr_id_create],[usr_id_update], [usr_date_create],[usr_date_update], [ofc_id],[trg_action], [district_id])
	                SELECT [record_guid], [hhm_linkages_record_guid], [lsr_id], [usr_id_create],[usr_id_create], [usr_date_create],[usr_date_update], [ofc_id],2, [district_id]
                  FROM INSERTED
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_services_required_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_services_required_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_services_required_delete] ON [dbo].[hh_household_linkages_services_required] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_services_required_upload]
                        ([record_guid],[hhm_linkages_record_guid], [lsr_id], [usr_id_create], [usr_date_create], [ofc_id],[trg_action], [district_id])
	                SELECT [record_guid], [hhm_linkages_record_guid], [lsr_id], [usr_id_create], [usr_date_create], [ofc_id],3, [district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createhh_household_linkages_services_provided(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_linkages_services_provided')
                DROP TABLE [dbo].[hh_household_linkages_services_provided] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_linkages_services_provided](
                    [record_guid] [nvarchar](150) NOT NULL,
	                [lsp_id] [nvarchar](100) NOT NULL,
	                [hhm_linkages_record_guid] [nvarchar](100) NOT NULL,
	                [usr_id_create] [varchar](50) NOT NULL,
	                [usr_date_create] [datetime] NOT NULL,
	                [ofc_id] [varchar](50) NOT NULL,
	                [district_id] [nvarchar](50) NOT NULL
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_linkages_services_provided_upload')
                DROP TABLE [dbo].[hh_household_linkages_services_provided_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_linkages_services_provided_upload](
                    [record_guid] [nvarchar](150) NOT NULL,
	                [lsp_id] [nvarchar](100) NOT NULL,
	                [hhm_linkages_record_guid] [nvarchar](100) NOT NULL,
	                [usr_id_create] [varchar](50) NOT NULL,
	                [usr_date_create] [datetime] NOT NULL,
	                [ofc_id] [varchar](50) NOT NULL,
	                [trg_action] [int] NOT NULL,
	                [district_id] [nvarchar](50) NOT NULL
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_services_provided_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_services_provided_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_services_provided_insert] ON [dbo].[hh_household_linkages_services_provided] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_services_provided_upload]
                        ([record_guid],[lsp_id], [hhm_linkages_record_guid], [usr_id_create], [usr_date_create], [ofc_id],[trg_action], [district_id])
	                SELECT [record_guid], [lsp_id], [hhm_linkages_record_guid], [usr_id_create], [usr_date_create], [ofc_id],1, [district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_services_provided_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_services_provided_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_services_provided_update] ON [dbo].[hh_household_linkages_services_provided] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_services_provided_upload]
                        ([record_guid],[lsp_id], [hhm_linkages_record_guid], [usr_id_create], [usr_date_create], [ofc_id],[trg_action], [district_id])
	                SELECT [record_guid], [lsp_id], [hhm_linkages_record_guid], [usr_id_create], [usr_date_create], [ofc_id],2, [district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_linkages_services_provided_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_linkages_services_provided_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_linkages_services_provided_delete] ON [dbo].[hh_household_linkages_services_provided] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_linkages_services_provided_upload]
                        ([record_guid],[lsp_id], [hhm_linkages_record_guid], [usr_id_create], [usr_date_create], [ofc_id],[trg_action], [district_id])
	                SELECT [record_guid], [lsp_id], [hhm_linkages_record_guid], [usr_id_create], [usr_date_create], [ofc_id],3, [district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createum_office_group_details(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_office_group_details')
                DROP TABLE [dbo].[um_office_group_details] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[um_office_group_details](
	                [office_grp_record_guid] [nvarchar](100) NOT NULL,
	                [ofc_id] [nvarchar](50) NOT NULL,
	                [active] [bit] NOT NULL,
                 CONSTRAINT [PK_um_office_group_details] PRIMARY KEY CLUSTERED 
                (
	                [ofc_id] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables
            #endregion SQL
        }

        private static void Createhh_household_risk_assessment_header(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_risk_assessment_header')
                DROP TABLE [dbo].[hh_household_risk_assessment_header] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_risk_assessment_header](
	                    [ras_id] [nvarchar](150) NOT NULL,
	                    [hh_code] [nvarchar](50) NOT NULL,
	                    [hh_id] [nvarchar](100) NOT NULL,
	                    [interviewed_member_id] [nvarchar](100) NOT NULL,
	                    [date_of_visit] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](100) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_hh_household_risk_assessment_header_1] PRIMARY KEY CLUSTERED 
                    (
	                    [ras_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_risk_assessment_header_upload')
                DROP TABLE [dbo].[hh_household_risk_assessment_header_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_risk_assessment_header_upload](
	                [ras_id] [nvarchar](150) NOT NULL,
	                [hh_code] [nvarchar](50) NOT NULL,
	                [hh_id] [nvarchar](100) NOT NULL,
	                [interviewed_member_id] [nvarchar](100) NOT NULL,
	                [date_of_visit] [date] NOT NULL,
	                [usr_id_create] [varchar](50) NOT NULL,
	                [usr_id_update] [varchar](50) NOT NULL,
	                [usr_date_create] [datetime] NOT NULL,
	                [usr_date_update] [datetime] NOT NULL,
	                [ofc_id] [varchar](100) NOT NULL,
	                [trg_action] [int] NOT NULL,
	                [district_id] [nvarchar](50) NOT NULL,
                 CONSTRAINT [PK_hh_household_risk_assessment_header_upload] PRIMARY KEY CLUSTERED 
                (
	                [ras_id] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_header_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_header_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_header_insert] ON [dbo].[hh_household_risk_assessment_header] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_header_upload]
                               ([ras_id],[hh_code],[hh_id] ,[interviewed_member_id]  ,[date_of_visit] ,[usr_id_create] ,[usr_id_update]
                              ,[usr_date_create]  ,[usr_date_update] ,[ofc_id],[trg_action],[district_id])
	                       SELECT [ras_id],
				             [hh_code],[hh_id] ,[interviewed_member_id]  ,[date_of_visit] ,[usr_id_create] ,[usr_id_update]
                            ,[usr_date_create]  ,[usr_date_update] ,[ofc_id],1,[district_id]    
              FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_header_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_header_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_header_update] ON [dbo].[hh_household_risk_assessment_header] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_header_upload]
                                        ([ras_id],[hh_code],[hh_id] ,[interviewed_member_id]  ,[date_of_visit] ,[usr_id_create] ,[usr_id_update]
                       ,[usr_date_create]  ,[usr_date_update] ,[ofc_id],[trg_action],[district_id])
	                                SELECT [ras_id],
				                 [hh_code],[hh_id] ,[interviewed_member_id]  ,[date_of_visit] ,[usr_id_create] ,[usr_id_update]
                       ,[usr_date_create]  ,[usr_date_update] ,[ofc_id],2,[district_id]    
                  FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_header_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_header_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_header_delete] ON [dbo].[hh_household_risk_assessment_header] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_header_upload]
                                    ([ras_id],[hh_code],[hh_id] ,[interviewed_member_id]  ,[date_of_visit] ,[usr_id_create] ,[usr_id_update]
                   ,[usr_date_create]  ,[usr_date_update] ,[ofc_id],[trg_action],[district_id])
	                            SELECT [ras_id],
				             [hh_code],[hh_id] ,[interviewed_member_id]  ,[date_of_visit] ,[usr_id_create] ,[usr_id_update]
                   ,[usr_date_create]  ,[usr_date_update] ,[ofc_id],3,[district_id]    
              FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createhh_household_risk_assessment_beneficiaries(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_risk_assessment_beneficiaries')
                DROP TABLE [dbo].[hh_household_risk_assessment_beneficiaries] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_risk_assessment_beneficiaries](
	                    [ras_id] [nvarchar](100) NOT NULL,
	                    [rasm_id] [nvarchar](100) NOT NULL,
	                    [hh_member_id] [nvarchar](100) NOT NULL,
	                    [hh_member_code] [nvarchar](50) NOT NULL,
	                    [current_hiv_status_id] [nvarchar](50) NOT NULL,
	                    [is_on_art] [nvarchar](50) NOT NULL,
	                    [screen_hospital_last_six_months] [nvarchar](50) NOT NULL,
	                    [screen_either_parents_deceased] [nvarchar](50) NOT NULL,
	                    [screen_either_siblings_deceased] [nvarchar](50) NOT NULL,
	                    [screen_poor_health_last_three_months] [nvarchar](50) NOT NULL,
	                    [screen_adult_child_with_hiv_or_tb] [nvarchar](50) NOT NULL,
	                    [screen_below_relative_grade] [nvarchar](50) NOT NULL,
	                    [child_eligible_for_test_refferal] [nvarchar](50) NOT NULL,
	                    [care_giver_accepted_to_test_child] [nvarchar](50) NOT NULL,
	                    [test_result] [nvarchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](100) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_hh_household_risk_assessment_beneficiaries] PRIMARY KEY CLUSTERED 
                    (
	                    [rasm_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_risk_assessment_beneficiaries_upload')
                DROP TABLE [dbo].[hh_household_risk_assessment_beneficiaries_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_risk_assessment_beneficiaries_upload](
	                    [ras_id] [nvarchar](100) NOT NULL,
	                    [rasm_id] [nvarchar](100) NOT NULL,
	                    [hh_member_id] [nvarchar](100) NOT NULL,
	                    [hh_member_code] [nvarchar](50) NOT NULL,
	                    [current_hiv_status_id] [nvarchar](50) NOT NULL,
	                    [is_on_art] [nvarchar](50) NOT NULL,
	                    [screen_hospital_last_six_months] [nvarchar](50) NOT NULL,
	                    [screen_either_parents_deceased] [nvarchar](50) NOT NULL,
	                    [screen_either_siblings_deceased] [nvarchar](50) NOT NULL,
	                    [screen_poor_health_last_three_months] [nvarchar](50) NOT NULL,
	                    [screen_adult_child_with_hiv_or_tb] [nvarchar](50) NOT NULL,
	                    [screen_below_relative_grade] [nvarchar](50) NOT NULL,
	                    [child_eligible_for_test_refferal] [nvarchar](50) NOT NULL,
	                    [care_giver_accepted_to_test_child] [nvarchar](50) NOT NULL,
	                    [test_result] [nvarchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](100) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_beneficiaries_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_insert] ON [dbo].[hh_household_risk_assessment_beneficiaries] FOR insert
                AS
                BEGIN
	                 INSERT INTO [dbo].[hh_household_risk_assessment_beneficiaries_upload]
                           ([ras_id],[rasm_id] ,[hh_member_id],[hh_member_code],
                            [current_hiv_status_id] ,[is_on_art],[screen_hospital_last_six_months],[screen_either_parents_deceased]
			                ,[screen_either_siblings_deceased],[screen_poor_health_last_three_months] ,[screen_adult_child_with_hiv_or_tb]
			                ,[screen_below_relative_grade] ,[child_eligible_for_test_refferal] ,[care_giver_accepted_to_test_child],[test_result]
			                ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],trg_action ,[district_id])     
                    SELECT [ras_id],[rasm_id],[hh_member_id] ,[hh_member_code]  ,[current_hiv_status_id]
                            ,[is_on_art] ,[screen_hospital_last_six_months],[screen_either_parents_deceased],[screen_either_siblings_deceased],[screen_poor_health_last_three_months]
                             ,[screen_adult_child_with_hiv_or_tb],[screen_below_relative_grade] ,[child_eligible_for_test_refferal],[care_giver_accepted_to_test_child],[test_result]
                             ,[usr_id_create] ,[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],1 ,[district_id]
                    FROM inserted 
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_beneficiaries_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_update] ON [dbo].[hh_household_risk_assessment_beneficiaries] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_beneficiaries_upload]
                       ([ras_id],[rasm_id] ,[hh_member_id],[hh_member_code],
                        [current_hiv_status_id] ,[is_on_art],[screen_hospital_last_six_months],[screen_either_parents_deceased]
			            ,[screen_either_siblings_deceased],[screen_poor_health_last_three_months] ,[screen_adult_child_with_hiv_or_tb]
			            ,[screen_below_relative_grade] ,[child_eligible_for_test_refferal] ,[care_giver_accepted_to_test_child],[test_result]
			            ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],trg_action ,[district_id])     
                    SELECT [ras_id],[rasm_id],[hh_member_id] ,[hh_member_code]  ,[current_hiv_status_id]
                        ,[is_on_art] ,[screen_hospital_last_six_months],[screen_either_parents_deceased],[screen_either_siblings_deceased],[screen_poor_health_last_three_months]
                         ,[screen_adult_child_with_hiv_or_tb],[screen_below_relative_grade] ,[child_eligible_for_test_refferal],[care_giver_accepted_to_test_child],[test_result]
                         ,[usr_id_create] ,[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],2 ,[district_id]
                    FROM inserted 
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_beneficiaries_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_delete] ON [dbo].[hh_household_risk_assessment_beneficiaries] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_beneficiaries_upload]
                   ([ras_id],[rasm_id] ,[hh_member_id],[hh_member_code],
                    [current_hiv_status_id] ,[is_on_art],[screen_hospital_last_six_months],[screen_either_parents_deceased]
			        ,[screen_either_siblings_deceased],[screen_poor_health_last_three_months] ,[screen_adult_child_with_hiv_or_tb]
			        ,[screen_below_relative_grade] ,[child_eligible_for_test_refferal] ,[care_giver_accepted_to_test_child],[test_result]
			        ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],trg_action ,[district_id])     
                SELECT [ras_id],[rasm_id],[hh_member_id] ,[hh_member_code]  ,[current_hiv_status_id]
                    ,[is_on_art] ,[screen_hospital_last_six_months],[screen_either_parents_deceased],[screen_either_siblings_deceased],[screen_poor_health_last_three_months]
                     ,[screen_adult_child_with_hiv_or_tb],[screen_below_relative_grade] ,[child_eligible_for_test_refferal],[care_giver_accepted_to_test_child],[test_result]
                     ,[usr_id_create] ,[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],3 ,[district_id]
                      FROM deleted 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createhh_household_improvement_plan(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_improvement_plan')
                DROP TABLE [dbo].[hh_household_improvement_plan] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_improvement_plan](
	                    [hip_id] [nvarchar](100) NOT NULL,
	                    [hh_code] [nvarchar](50) NOT NULL,
	                    [hh_id] [nvarchar](100) NOT NULL,
	                    [visit_date] [date] NOT NULL,
	                    [ov_below_seventeen_yrs_male] [int] NOT NULL,
	                    [ov_below_seventeen_yrs_female] [int] NOT NULL,
	                    [ov_above_eighteen_yrs_male] [int] NOT NULL,
	                    [ov_above_eighteen_yrs_female] [int] NOT NULL,
	                    [health_knows_status_of_children] [nvarchar](50) NOT NULL,
	                    [health_enrolled_on_art] [nvarchar](50) NOT NULL,
	                    [health_action_plan] [nvarchar](1000) NOT NULL,
	                    [health_follow_up_date] [nvarchar](50) NOT NULL,
	                    [household_is_healthy] [nvarchar](50) NOT NULL,
	                    [safe_has_birth_certificates] [nvarchar](50) NOT NULL,
	                    [safe_no_child_abuse] [nvarchar](50) NOT NULL,
	                    [safe_action_plan] [nvarchar](1000) NOT NULL,
	                    [safe_follow_up_date] [nvarchar](50) NOT NULL,
	                    [household_is_safe] [nvarchar](50) NOT NULL,
	                    [stable_source_of_income] [nvarchar](50) NOT NULL,
	                    [stable_financial_services] [nvarchar](50) NOT NULL,
	                    [stable_two_or_more_meals] [nvarchar](50) NOT NULL,
	                    [stable_action_plan] [nvarchar](1000) NOT NULL,
	                    [stable_follow_up_date] [nvarchar](50) NOT NULL,
	                    [household_is_stable] [nvarchar](50) NOT NULL,
	                    [schooled_all_attending_school] [nvarchar](50) NOT NULL,
	                    [schooled_attained_techinical_skill] [nvarchar](50) NOT NULL,
	                    [schooled_others] [nvarchar](300) NOT NULL,
	                    [schooled_action_plan] [nvarchar](1000) NOT NULL,
	                    [schooled_follow_up_date] [nvarchar](50) NOT NULL,
	                    [household_is_schooled] [nvarchar](50) NOT NULL,
	                    [sw_id] [nvarchar](100) NOT NULL,
	                    [sw_comment] [nvarchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_hh_household_improvement_plan] PRIMARY KEY CLUSTERED 
                    (
	                    [hip_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_improvement_plan_upload')
                DROP TABLE [dbo].[hh_household_improvement_plan_upload] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[hh_household_improvement_plan_upload](
	                        [hip_id] [nvarchar](100) NOT NULL,
	                        [hh_code] [nvarchar](50) NOT NULL,
	                        [hh_id] [nvarchar](100) NOT NULL,
	                        [visit_date] [date] NOT NULL,
	                        [ov_below_seventeen_yrs_male] [int] NOT NULL,
	                        [ov_below_seventeen_yrs_female] [int] NOT NULL,
	                        [ov_above_eighteen_yrs_male] [int] NOT NULL,
	                        [ov_above_eighteen_yrs_female] [int] NOT NULL,
	                        [health_knows_status_of_children] [nvarchar](50) NOT NULL,
	                        [health_enrolled_on_art] [nvarchar](50) NOT NULL,
	                        [health_action_plan] [nvarchar](1000) NOT NULL,
	                        [health_follow_up_date] [nvarchar](50) NOT NULL,
	                        [household_is_healthy] [nvarchar](50) NOT NULL,
	                        [safe_has_birth_certificates] [nvarchar](50) NOT NULL,
	                        [safe_no_child_abuse] [nvarchar](50) NOT NULL,
	                        [safe_action_plan] [nvarchar](1000) NOT NULL,
	                        [safe_follow_up_date] [nvarchar](50) NOT NULL,
	                        [household_is_safe] [nvarchar](50) NOT NULL,
	                        [stable_source_of_income] [nvarchar](50) NOT NULL,
	                        [stable_financial_services] [nvarchar](50) NOT NULL,
	                        [stable_two_or_more_meals] [nvarchar](50) NOT NULL,
	                        [stable_action_plan] [nvarchar](1000) NOT NULL,
	                        [stable_follow_up_date] [nvarchar](50) NOT NULL,
	                        [household_is_stable] [nvarchar](50) NOT NULL,
	                        [schooled_all_attending_school] [nvarchar](50) NOT NULL,
	                        [schooled_attained_techinical_skill] [nvarchar](50) NOT NULL,
	                        [schooled_others] [nvarchar](300) NOT NULL,
	                        [schooled_action_plan] [nvarchar](1000) NOT NULL,
	                        [schooled_follow_up_date] [nvarchar](50) NOT NULL,
	                        [household_is_schooled] [nvarchar](50) NOT NULL,
	                        [sw_id] [nvarchar](100) NOT NULL,
	                        [sw_comment] [nvarchar](100) NOT NULL,
	                        [trg_action] [int] NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](100) NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL
                        ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_improvement_plan_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_improvement_plan_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_improvement_plan_insert] ON [dbo].[hh_household_improvement_plan] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_improvement_plan_upload]([hip_id],[hh_code],[hh_id],[visit_date] ,[ov_below_seventeen_yrs_male],[ov_below_seventeen_yrs_female]
                   ,[ov_above_eighteen_yrs_male],[ov_above_eighteen_yrs_female],[health_knows_status_of_children],[health_enrolled_on_art] ,[health_action_plan]
		           ,[health_follow_up_date],[household_is_healthy],[safe_has_birth_certificates],[safe_no_child_abuse],[safe_action_plan],[safe_follow_up_date]
                   ,[household_is_safe],[stable_source_of_income],[stable_financial_services],[stable_two_or_more_meals],[stable_action_plan],[stable_follow_up_date]
		           ,[household_is_stable],[schooled_all_attending_school],[schooled_attained_techinical_skill] ,[schooled_others],[schooled_action_plan]
                   ,[schooled_follow_up_date],[household_is_schooled],[sw_id] ,[sw_comment],[trg_action],[usr_id_create],[usr_id_update] ,[usr_date_create]
		           ,[usr_date_update],[ofc_id],[district_id])
	                        SELECT [hip_id],[hh_code],[hh_id],[visit_date],[ov_below_seventeen_yrs_male],[ov_below_seventeen_yrs_female]
                   ,[ov_above_eighteen_yrs_male],[ov_above_eighteen_yrs_female],[health_knows_status_of_children],[health_enrolled_on_art] ,[health_action_plan]
		           ,[health_follow_up_date],[household_is_healthy],[safe_has_birth_certificates],[safe_no_child_abuse],[safe_action_plan],[safe_follow_up_date]
                   ,[household_is_safe],[stable_source_of_income],[stable_financial_services],[stable_two_or_more_meals],[stable_action_plan],[stable_follow_up_date]
		           ,[household_is_stable],[schooled_all_attending_school],[schooled_attained_techinical_skill] ,[schooled_others],[schooled_action_plan]
                   ,[schooled_follow_up_date],[household_is_schooled],[sw_id] ,[sw_comment],1,[usr_id_create],[usr_id_update] ,[usr_date_create]
		           ,[usr_date_update],[ofc_id],[district_id]
		           FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_improvement_plan_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_improvement_plan_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_improvement_plan_update] ON [dbo].[hh_household_improvement_plan] FOR UPDATE
                AS
                BEGIN
	                        INSERT INTO [dbo].[hh_household_improvement_plan_upload]([hip_id],[hh_code],[hh_id],[visit_date] ,[ov_below_seventeen_yrs_male],[ov_below_seventeen_yrs_female]
                   ,[ov_above_eighteen_yrs_male],[ov_above_eighteen_yrs_female],[health_knows_status_of_children],[health_enrolled_on_art] ,[health_action_plan]
		           ,[health_follow_up_date],[household_is_healthy],[safe_has_birth_certificates],[safe_no_child_abuse],[safe_action_plan],[safe_follow_up_date]
                   ,[household_is_safe],[stable_source_of_income],[stable_financial_services],[stable_two_or_more_meals],[stable_action_plan],[stable_follow_up_date]
		           ,[household_is_stable],[schooled_all_attending_school],[schooled_attained_techinical_skill] ,[schooled_others],[schooled_action_plan]
                   ,[schooled_follow_up_date],[household_is_schooled],[sw_id] ,[sw_comment],[trg_action],[usr_id_create],[usr_id_update] ,[usr_date_create]
		           ,[usr_date_update],[ofc_id],[district_id])
	                        SELECT [hip_id],[hh_code],[hh_id],[visit_date] ,[ov_below_seventeen_yrs_male],[ov_below_seventeen_yrs_female]
                   ,[ov_above_eighteen_yrs_male],[ov_above_eighteen_yrs_female],[health_knows_status_of_children],[health_enrolled_on_art] ,[health_action_plan]
		           ,[health_follow_up_date],[household_is_healthy],[safe_has_birth_certificates],[safe_no_child_abuse],[safe_action_plan],[safe_follow_up_date]
                   ,[household_is_safe],[stable_source_of_income],[stable_financial_services],[stable_two_or_more_meals],[stable_action_plan],[stable_follow_up_date]
		           ,[household_is_stable],[schooled_all_attending_school],[schooled_attained_techinical_skill] ,[schooled_others],[schooled_action_plan]
                   ,[schooled_follow_up_date],[household_is_schooled],[sw_id] ,[sw_comment],2,[usr_id_create],[usr_id_update] ,[usr_date_create]
		           ,[usr_date_update],[ofc_id],[district_id]
		           FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_improvement_plan_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_improvement_plan_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_improvement_plan_delete] ON [dbo].[hh_household_improvement_plan] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_improvement_plan_upload]([hip_id],[hh_code],[hh_id],[visit_date] ,[ov_below_seventeen_yrs_male],[ov_below_seventeen_yrs_female]
                   ,[ov_above_eighteen_yrs_male],[ov_above_eighteen_yrs_female],[health_knows_status_of_children],[health_enrolled_on_art] ,[health_action_plan]
		           ,[health_follow_up_date],[household_is_healthy],[safe_has_birth_certificates],[safe_no_child_abuse],[safe_action_plan],[safe_follow_up_date]
                   ,[household_is_safe],[stable_source_of_income],[stable_financial_services],[stable_two_or_more_meals],[stable_action_plan],[stable_follow_up_date]
		           ,[household_is_stable],[schooled_all_attending_school],[schooled_attained_techinical_skill] ,[schooled_others],[schooled_action_plan]
                   ,[schooled_follow_up_date],[household_is_schooled],[sw_id] ,[sw_comment],[trg_action],[usr_id_create],[usr_id_update] ,[usr_date_create]
		           ,[usr_date_update],[ofc_id],[district_id])
	                        SELECT [hip_id],[hh_code],[hh_id],[visit_date] ,[ov_below_seventeen_yrs_male],[ov_below_seventeen_yrs_female]
                   ,[ov_above_eighteen_yrs_male],[ov_above_eighteen_yrs_female],[health_knows_status_of_children],[health_enrolled_on_art] ,[health_action_plan]
		           ,[health_follow_up_date],[household_is_healthy],[safe_has_birth_certificates],[safe_no_child_abuse],[safe_action_plan],[safe_follow_up_date]
                   ,[household_is_safe],[stable_source_of_income],[stable_financial_services],[stable_two_or_more_meals],[stable_action_plan],[stable_follow_up_date]
		           ,[household_is_stable],[schooled_all_attending_school],[schooled_attained_techinical_skill] ,[schooled_others],[schooled_action_plan]
                   ,[schooled_follow_up_date],[household_is_schooled],[sw_id] ,[sw_comment],3,[usr_id_create],[usr_id_update] ,[usr_date_create]
		           ,[usr_date_update],[ofc_id],[district_id]
		           FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createsilc_community_training_register(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_community_training_register')
                        CREATE TABLE [dbo].[silc_community_training_register](
	                        [ctr_id] [nvarchar](100) NOT NULL,
	                        [prt_id] [nvarchar](50) NOT NULL,
	                        [cso_id] [nvarchar](50) NOT NULL,
	                        [dst_id] [nvarchar](50) NOT NULL,
	                        [sct_id] [nvarchar](50) NOT NULL,
	                        [tr_name] [nvarchar](100) NOT NULL,
	                        [module_name] [nvarchar](100) NOT NULL,
	                        [tr_total_days] [nvarchar](50) NOT NULL,
	                        [tr_date_from] [date] NOT NULL,
	                        [tr_date_to] [date] NOT NULL,
	                        [module_desc] [nvarchar](1000) NOT NULL,
	                        [tr_venue] [nvarchar](100) NOT NULL,
	                        [trainer_type] [nvarchar](50) NOT NULL,
	                        [artisan_name] [nvarchar](100) NOT NULL,
	                        [facilitator_trainer_name] [nvarchar](100) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL,
                         CONSTRAINT [PK_silc_community_training_register] PRIMARY KEY CLUSTERED 
                        (
	                        [ctr_id] ASC
                        )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                        ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_community_training_register_upload')
                            CREATE TABLE [dbo].[silc_community_training_register_upload](
	                            [ctr_id] [nvarchar](100) NOT NULL,
	                            [prt_id] [nvarchar](50) NOT NULL,
	                            [cso_id] [nvarchar](50) NOT NULL,
	                            [dst_id] [nvarchar](50) NOT NULL,
	                            [sct_id] [nvarchar](50) NOT NULL,
	                            [tr_name] [nvarchar](100) NOT NULL,
	                            [module_name] [nvarchar](100) NOT NULL,
	                            [tr_total_days] [nvarchar](50) NOT NULL,
	                            [tr_date_from] [date] NOT NULL,
	                            [tr_date_to] [date] NOT NULL,
	                            [module_desc] [nvarchar](1000) NOT NULL,
	                            [tr_venue] [nvarchar](100) NOT NULL,
	                            [trainer_type] [nvarchar](50) NOT NULL,
	                            [artisan_name] [nvarchar](100) NOT NULL,
	                            [facilitator_trainer_name] [nvarchar](100) NOT NULL,
	                            [usr_id_create] [varchar](50) NOT NULL,
	                            [usr_id_update] [varchar](50) NOT NULL,
	                            [usr_date_create] [datetime] NOT NULL,
	                            [usr_date_update] [datetime] NOT NULL,
	                            [ofc_id] [varchar](50) NOT NULL,
	                            [trg_action] [int] NOT NULL,
	                            [district_id] [nvarchar](50) NOT NULL
                            ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_insert] ON [dbo].[silc_community_training_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_community_training_register_upload]
                   ([ctr_id],[prt_id],[cso_id] ,[dst_id] ,[sct_id] ,[tr_name] ,[module_name] ,[tr_total_days],[tr_date_from]
                   ,[tr_date_to] ,[module_desc],[tr_venue] ,[trainer_type] ,[artisan_name] ,[facilitator_trainer_name] ,[usr_id_create] ,[usr_id_update]
		            ,[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action] ,[district_id])
             SELECT [ctr_id],[prt_id],[cso_id] ,[dst_id] ,[sct_id] ,[tr_name] ,[module_name] ,[tr_total_days],[tr_date_from]
                   ,[tr_date_to] ,[module_desc],[tr_venue] ,[trainer_type] ,[artisan_name] ,[facilitator_trainer_name] ,[usr_id_create] ,[usr_id_update]
		            ,[usr_date_create],[usr_date_update] ,[ofc_id],1 ,[district_id] FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_update] ON [dbo].[silc_community_training_register] FOR UPDATE
                AS
                BEGIN
	                        INSERT INTO [dbo].[silc_community_training_register_upload]
                   ([ctr_id],[prt_id],[cso_id] ,[dst_id] ,[sct_id] ,[tr_name] ,[module_name] ,[tr_total_days],[tr_date_from]
                   ,[tr_date_to] ,[module_desc],[tr_venue] ,[trainer_type] ,[artisan_name] ,[facilitator_trainer_name] ,[usr_id_create] ,[usr_id_update]
		            ,[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action] ,[district_id])
             SELECT [ctr_id],[prt_id],[cso_id] ,[dst_id] ,[sct_id] ,[tr_name] ,[module_name] ,[tr_total_days],[tr_date_from]
                   ,[tr_date_to] ,[module_desc],[tr_venue] ,[trainer_type] ,[artisan_name] ,[facilitator_trainer_name] ,[usr_id_create] ,[usr_id_update]
		            ,[usr_date_create],[usr_date_update] ,[ofc_id],2 ,[district_id] FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_delete] ON [dbo].[silc_community_training_register] FOR DELETE
                AS
                BEGIN
	            INSERT INTO [dbo].[silc_community_training_register_upload]
               ([ctr_id],[prt_id],[cso_id] ,[dst_id] ,[sct_id] ,[tr_name] ,[module_name] ,[tr_total_days],[tr_date_from]
               ,[tr_date_to] ,[module_desc],[tr_venue] ,[trainer_type] ,[artisan_name] ,[facilitator_trainer_name] ,[usr_id_create] ,[usr_id_update]
		        ,[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action] ,[district_id])
         SELECT [ctr_id],[prt_id],[cso_id] ,[dst_id] ,[sct_id] ,[tr_name] ,[module_name] ,[tr_total_days],[tr_date_from]
               ,[tr_date_to] ,[module_desc],[tr_venue] ,[trainer_type] ,[artisan_name] ,[facilitator_trainer_name] ,[usr_id_create] ,[usr_id_update]
		        ,[usr_date_create],[usr_date_update] ,[ofc_id],3 ,[district_id] FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }


        private static void Createsilc_community_training_register_member(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_community_training_register_member')
                       CREATE TABLE [dbo].[silc_community_training_register_member](
	                    [ctrm_id] [nvarchar](100) NOT NULL,
	                    [ctr_id] [nvarchar](100) NOT NULL,
	                    [ben_type] [nvarchar](50) NOT NULL,
	                    [hhm_code] [nvarchar](20) NOT NULL,
	                    [parcipant_name] [nvarchar](100) NOT NULL,
	                    [gnd_id] [nvarchar](100) NOT NULL,
	                    [age] [nvarchar](5) NOT NULL,
	                    [usr_id_create] [varchar](100) NOT NULL,
	                    [usr_id_update] [varchar](100) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](100) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_silc_community_training_register_member] PRIMARY KEY CLUSTERED 
                    (
	                    [ctrm_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_community_training_register_member_upload')
                            CREATE TABLE [dbo].[silc_community_training_register_member_upload](
	                            [ctrm_id] [nvarchar](100) NOT NULL,
	                            [ctr_id] [nvarchar](100) NOT NULL,
	                            [ben_type] [nvarchar](50) NOT NULL,
	                            [hhm_code] [nvarchar](20) NOT NULL,
	                            [parcipant_name] [nvarchar](100) NOT NULL,
	                            [gnd_id] [nvarchar](100) NOT NULL,
	                            [age] [nvarchar](5) NOT NULL,
	                            [usr_id_create] [varchar](50) NOT NULL,
	                            [usr_id_update] [varchar](50) NOT NULL,
	                            [usr_date_create] [datetime] NOT NULL,
	                            [usr_date_update] [datetime] NOT NULL,
	                            [ofc_id] [varchar](100) NOT NULL,
	                            [trg_action] [int] NOT NULL,
	                            [district_id] [nvarchar](50) NOT NULL
                            ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_member_insert] ON [dbo].[silc_community_training_register_member] FOR INSERT
                        AS
             BEGIN
	                        INSERT INTO [dbo].[silc_community_training_register_member_upload]
                   ([ctrm_id],[ctr_id],[ben_type],[hhm_code],[parcipant_name] ,[gnd_id] ,[age]
                   ,[usr_id_create] ,[usr_id_update] ,[usr_date_create] ,[usr_date_update] ,[ofc_id]
                   ,[trg_action] ,[district_id])
            SELECT [ctrm_id],[ctr_id],[ben_type],[hhm_code],[parcipant_name] ,[gnd_id] ,[age]
                   ,[usr_id_create] ,[usr_id_update] ,[usr_date_create] ,[usr_date_update] ,[ofc_id]
                   ,1 ,[district_id] FROM inserted
           END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_member_update] ON [dbo].[silc_community_training_register_member] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_community_training_register_member_upload]
                       ([ctrm_id],[ctr_id],[ben_type],[hhm_code],[parcipant_name] ,[gnd_id] ,[age]
                       ,[usr_id_create] ,[usr_id_update] ,[usr_date_create] ,[usr_date_update] ,[ofc_id]
                       ,[trg_action] ,[district_id])
                SELECT [ctrm_id],[ctr_id],[ben_type],[hhm_code],[parcipant_name] ,[gnd_id] ,[age]
                       ,[usr_id_create] ,[usr_id_update] ,[usr_date_create] ,[usr_date_update] ,[ofc_id]
                       ,2 ,[district_id] FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_member_delete] ON [dbo].[silc_community_training_register_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_community_training_register_member_upload]
                   ([ctrm_id],[ctr_id],[ben_type],[hhm_code],[parcipant_name] ,[gnd_id] ,[age]
                   ,[usr_id_create] ,[usr_id_update] ,[usr_date_create] ,[usr_date_update] ,[ofc_id]
                   ,[trg_action] ,[district_id])
            SELECT [ctrm_id],[ctr_id],[ben_type],[hhm_code],[parcipant_name] ,[gnd_id] ,[age]
                   ,[usr_id_create] ,[usr_id_update] ,[usr_date_create] ,[usr_date_update] ,[ofc_id]
                   ,3 ,[district_id] FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createsilc_community_training_register_member_attendance_dates(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_community_training_register_member_attendance_dates')
                       CREATE TABLE [dbo].[silc_community_training_register_member_attendance_dates](
	                    [ctrmD_id] [nvarchar](100) NOT NULL,
	                    [ctrm_id] [nvarchar](100) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_silc_community_training_register_member_attendance_dates] PRIMARY KEY CLUSTERED 
                    (
	                    [ctrmD_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'silc_community_training_register_member_attendance_dates_upload')
                            CREATE TABLE [dbo].[silc_community_training_register_member_attendance_dates_upload](
	                            [ctrmD_id] [nvarchar](100) NOT NULL,
	                            [ctrm_id] [nvarchar](100) NOT NULL,
	                            [date] [date] NOT NULL,
	                            [ofc_id] [varchar](50) NOT NULL,
	                            [trg_action] [int] NOT NULL,
	                            [district_id] [nvarchar](50) NOT NULL
                            ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_member_attendance_dates_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_member_attendance_dates_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_member_attendance_dates_insert] ON [dbo].[silc_community_training_register_member_attendance_dates] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_community_training_register_member_attendance_dates_upload]
                    ([ctrmD_id],[ctrm_id],[date] ,[ofc_id],[trg_action],[district_id])
                     SELECT [ctrmD_id],[ctrm_id],[date] ,[ofc_id],1,[district_id]
	                 FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_member_attendance_dates_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_member_attendance_dates_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_member_attendance_dates_update] ON [dbo].[silc_community_training_register_member_attendance_dates] FOR UPDATE
                AS
                BEGIN
	                 INSERT INTO [dbo].[silc_community_training_register_member_attendance_dates_upload]
                     ([ctrmD_id],[ctrm_id],[date] ,[ofc_id],[trg_action],[district_id])
                     SELECT [ctrmD_id],[ctrm_id],[date] ,[ofc_id],2,[district_id]
	                 FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_community_training_register_member_attendance_dates_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_community_training_register_member_attendance_dates_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_community_training_register_member_attendance_dates_delete] ON [dbo].[silc_community_training_register_member_attendance_dates] FOR delete
                AS
                BEGIN
	                 INSERT INTO [dbo].[silc_community_training_register_member_attendance_dates_upload]
                     ([ctrmD_id],[ctrm_id],[date] ,[ofc_id],[trg_action],[district_id])
                     SELECT [ctrmD_id],[ctrm_id],[date] ,[ofc_id],3,[district_id]
	                 FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_youth_training_inventory(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_training_inventory')
                       CREATE TABLE [dbo].[ben_youth_training_inventory](
	                    [yti_id] [nvarchar](100) NOT NULL,
	                    [prt_id] [nvarchar](50) NOT NULL,
	                    [cso_id] [nvarchar](50) NOT NULL,
	                    [dst_id] [nvarchar](50) NOT NULL,
	                    [sct_id] [nvarchar](50) NOT NULL,
	                    [wrd_id] [nvarchar](50) NOT NULL,
	                    [begin_date] [date] NOT NULL,
	                    [hhm_code] [nvarchar](50) NOT NULL,
	                    [hhm_name] [nvarchar](100) NOT NULL,
	                    [grp_name] [nvarchar](100) NOT NULL,
	                    [age] [nvarchar](20) NOT NULL,
	                    [gnd_id] [nvarchar](100) NOT NULL,
	                    [training_type] [nvarchar](100) NOT NULL,
	                    [trainer_name] [nvarchar](100) NOT NULL,
	                    [exp_date_completion] [date] NOT NULL,
	                    [actual_date_completion] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youth_training_inventory] PRIMARY KEY CLUSTERED 
                    (
	                    [yti_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_training_inventory_upload')
                        CREATE TABLE [dbo].[ben_youth_training_inventory_upload](
	                    [yti_id] [nvarchar](100) NOT NULL,
	                    [prt_id] [nvarchar](50) NOT NULL,
	                    [cso_id] [nvarchar](50) NOT NULL,
	                    [dst_id] [nvarchar](50) NOT NULL,
	                    [sct_id] [nvarchar](50) NOT NULL,
	                    [wrd_id] [nvarchar](50) NOT NULL,
	                    [begin_date] [date] NOT NULL,
	                    [hhm_code] [nvarchar](50) NOT NULL,
	                    [hhm_name] [nvarchar](100) NOT NULL,
	                    [grp_name] [nvarchar](100) NOT NULL,
	                    [age] [nvarchar](20) NOT NULL,
	                    [gnd_id] [nvarchar](100) NOT NULL,
	                    [training_type] [nvarchar](100) NOT NULL,
	                    [trainer_name] [nvarchar](100) NOT NULL,
	                    [exp_date_completion] [date] NOT NULL,
	                    [actual_date_completion] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_inventory_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_inventory_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_inventory_insert] ON [dbo].[ben_youth_training_inventory] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youth_training_inventory_upload]
					   ([yti_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id],[begin_date],[hhm_code],[hhm_name]
					   ,[grp_name],[age],[gnd_id],[training_type],[trainer_name],[exp_date_completion],[actual_date_completion]
					   ,[usr_id_create],[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action],[district_id])
	                SELECT [yti_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id],[begin_date],[hhm_code],[hhm_name]
					   ,[grp_name],[age],[gnd_id],[training_type],[trainer_name],[exp_date_completion],[actual_date_completion]
					   ,[usr_id_create],[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],1,[district_id]
                  FROM inserted
           END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_inventory_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_inventory_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_inventory_update] ON [dbo].[ben_youth_training_inventory] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youth_training_inventory_upload]
					   ([yti_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id],[begin_date],[hhm_code],[hhm_name]
					   ,[grp_name],[age],[gnd_id],[training_type],[trainer_name],[exp_date_completion],[actual_date_completion]
					   ,[usr_id_create],[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action],[district_id])
	                SELECT [yti_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id],[begin_date],[hhm_code],[hhm_name]
					   ,[grp_name],[age],[gnd_id],[training_type],[trainer_name],[exp_date_completion],[actual_date_completion]
					   ,[usr_id_create],[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],2,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_inventory_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_inventory_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_inventory_delete] ON [dbo].[ben_youth_training_inventory] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youth_training_inventory_upload]
					   ([yti_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id],[begin_date],[hhm_code],[hhm_name]
					   ,[grp_name],[age],[gnd_id],[training_type],[trainer_name],[exp_date_completion],[actual_date_completion]
					   ,[usr_id_create],[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action],[district_id])
	                SELECT [yti_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id],[begin_date],[hhm_code],[hhm_name]
					   ,[grp_name],[age],[gnd_id],[training_type],[trainer_name],[exp_date_completion],[actual_date_completion]
					   ,[usr_id_create],[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }


        private static void Createlst_es_trainingType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_es_training_type')
                       CREATE TABLE [dbo].[lst_es_training_type](
	                    [ttp_sid] [int] NOT NULL,
	                    [ttp_id] [nvarchar](50) NOT NULL,
	                    [ttp_name] [nvarchar](500) NOT NULL,
	                    [ttp_order] [int] NOT NULL,
	                    [ttp_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_es_training_type] PRIMARY KEY CLUSTERED 
                    (
	                    [ttp_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_es_training_type_session')
                        CREATE TABLE [dbo].[lst_es_training_type_session](
	                        [ttps_sid] [int] NOT NULL,
	                        [ttps_id] [nvarchar](50) NOT NULL,
	                        [ttp_id] [nvarchar](50) NOT NULL,
	                        [ttps_name] [nvarchar](500) NOT NULL,
	                        [ttps_order] [nchar](10) NOT NULL,
	                        [ttps_active] [bit] NOT NULL,
	                        [lng_id] [char](2) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
                         CONSTRAINT [PK_lst_es_training_type_session] PRIMARY KEY CLUSTERED 
                        (
	                        [ttps_sid] ASC
                        )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                        ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables
            #endregion SQL
        }

        private static void Createlst_hh_hat_services_received(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_hh_hat_services_received')
                DROP TABLE [dbo].[lst_hh_hat_services_received] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TABLE [dbo].[lst_hh_hat_services_received](
	                [hhs_sid] [int] IDENTITY(1,1) NOT NULL,
	                [hhs_id] [varchar](50) NOT NULL,
	                [service_type_id] [nvarchar](50) NOT NULL,
	                [hhs_name] [varchar](500) NOT NULL,
	                [hhs_order] [int] NOT NULL,
	                [hhs_active] [bit] NOT NULL,
	                [lng_id] [char](2) NOT NULL,
	                [UserId_create] [varchar](50) NOT NULL,
	                [UserId_update] [varchar](50) NOT NULL,
	                [User_date_create] [datetime] NOT NULL,
	                [User_date_update] [datetime] NOT NULL,
                 CONSTRAINT [PK_lst_hh_hat_services_received] PRIMARY KEY CLUSTERED 
                (
	                [hhs_sid] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void Createben_youthgroup_savings_register(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youthgroup_savings_register')
                       CREATE TABLE [dbo].[ben_youthgroup_savings_register](
	                    [ysr_id] [nvarchar](100) NOT NULL,
	                    [prt_id] [nvarchar](50) NOT NULL,
	                    [cso_id] [nvarchar](50) NOT NULL,
	                    [dst_id] [nvarchar](50) NOT NULL,
	                    [sct_id] [nvarchar](50) NOT NULL,
	                    [wrd_id] [nvarchar](50) NOT NULL,
	                    [village] [nvarchar](100) NOT NULL,
	                    [month] [nvarchar](50) NOT NULL,
	                    [year] [nvarchar](50) NOT NULL,
	                    [ygrp_name] [nvarchar](100) NOT NULL,
	                    [ygrp_chairperson_name] [nvarchar](100) NOT NULL,
	                    [ygrp_chairperson_name_phone] [nvarchar](50) NOT NULL,
	                    [youth_field_assisstant_name] [nvarchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](100) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youthgroup_savings_register] PRIMARY KEY CLUSTERED 
                    (
	                    [ysr_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youthgroup_savings_register_upload')
                        CREATE TABLE [dbo].[ben_youthgroup_savings_register_upload](
	                    [ysr_id] [nvarchar](100) NOT NULL,
	                    [prt_id] [nvarchar](50) NOT NULL,
	                    [cso_id] [nvarchar](50) NOT NULL,
	                    [dst_id] [nvarchar](50) NOT NULL,
	                    [sct_id] [nvarchar](50) NOT NULL,
	                    [wrd_id] [nvarchar](50) NOT NULL,
	                    [village] [nvarchar](100) NOT NULL,
	                    [month] [nvarchar](50) NOT NULL,
	                    [year] [nvarchar](50) NOT NULL,
	                    [ygrp_name] [nvarchar](100) NOT NULL,
	                    [ygrp_chairperson_name] [nvarchar](100) NOT NULL,
	                    [ygrp_chairperson_name_phone] [nvarchar](50) NOT NULL,
	                    [youth_field_assisstant_name] [nvarchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_insert] ON [dbo].[ben_youthgroup_savings_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_upload]
					   ([ysr_id],[prt_id],[cso_id],[dst_id] ,[sct_id],[wrd_id],[village],[month],[year]
					   ,[ygrp_name],[ygrp_chairperson_name],[ygrp_chairperson_name_phone] ,[youth_field_assisstant_name]
					   ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action] ,[district_id])
	                SELECT [ysr_id],[prt_id],[cso_id],[dst_id] ,[sct_id],[wrd_id],[village],[month],[year]
					   ,[ygrp_name],[ygrp_chairperson_name],[ygrp_chairperson_name_phone] ,[youth_field_assisstant_name]
					   ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1 ,[district_id]
                  FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_update] ON [dbo].[ben_youthgroup_savings_register] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_upload]
					   ([ysr_id],[prt_id],[cso_id],[dst_id] ,[sct_id],[wrd_id],[village],[month],[year]
					   ,[ygrp_name],[ygrp_chairperson_name],[ygrp_chairperson_name_phone] ,[youth_field_assisstant_name]
					   ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action] ,[district_id])
	                SELECT [ysr_id],[prt_id],[cso_id],[dst_id] ,[sct_id],[wrd_id],[village],[month],[year]
					   ,[ygrp_name],[ygrp_chairperson_name],[ygrp_chairperson_name_phone] ,[youth_field_assisstant_name]
					   ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2 ,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_delete] ON [dbo].[ben_youthgroup_savings_register] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_upload]
					   ([ysr_id],[prt_id],[cso_id],[dst_id] ,[sct_id],[wrd_id],[village],[month],[year]
					   ,[ygrp_name],[ygrp_chairperson_name],[ygrp_chairperson_name_phone] ,[youth_field_assisstant_name]
					   ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action] ,[district_id])
	                SELECT [ysr_id],[prt_id],[cso_id],[dst_id] ,[sct_id],[wrd_id],[village],[month],[year]
					   ,[ygrp_name],[ygrp_chairperson_name],[ygrp_chairperson_name_phone] ,[youth_field_assisstant_name]
					   ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3 ,[district_id]
                  FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_youthgroup_savings_register_member(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youthgroup_savings_register_member')
                       CREATE TABLE [dbo].[ben_youthgroup_savings_register_member](
	                    [ysrm_id] [nvarchar](100) NOT NULL,
	                    [ysr_id] [nvarchar](100) NOT NULL,
	                    [hhm_code] [nvarchar](20) NOT NULL,
	                    [hhm_name] [nvarchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youthgroup_savings_register_member] PRIMARY KEY CLUSTERED 
                    (
	                    [ysrm_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youthgroup_savings_register_member_upload')
                        CREATE TABLE [dbo].[ben_youthgroup_savings_register_member_upload](
	                    [ysrm_id] [nvarchar](100) NOT NULL,
	                    [ysr_id] [nvarchar](100) NOT NULL,
	                    [hhm_code] [nvarchar](20) NOT NULL,
	                    [hhm_name] [nvarchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_insert] ON [dbo].[ben_youthgroup_savings_register_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_upload]
					   ([ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action]
						,[district_id])
	                SELECT [ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],1
						,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_update] ON [dbo].[ben_youthgroup_savings_register_member] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_upload]
					   ([ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action]
						,[district_id])
	                SELECT [ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],2
						,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_delete] ON [dbo].[ben_youthgroup_savings_register_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_upload]
					   ([ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action]
						,[district_id])
	                SELECT [ysrm_id],[ysr_id],[hhm_code] ,[hhm_name],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],3
						,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_youthgroup_savings_register_member_amount(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youthgroup_savings_register_member_amount')
                       CREATE TABLE [dbo].[ben_youthgroup_savings_register_member_amount](
	                    [ysrm_id] [nvarchar](100) NOT NULL,
	                    [ysrms_id] [nvarchar](100) NOT NULL,
	                    [total_savings] [nvarchar](50) NOT NULL,
	                    [amout_borrowed] [nvarchar](50) NOT NULL,
	                    [loan_purpose] [nvarchar](50) NOT NULL,
	                    [loan_purpose_other] [nvarchar](50) NOT NULL,
                        [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youthgroup_savings_register_member_amount] PRIMARY KEY CLUSTERED 
                    (
	                    [ysrms_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youthgroup_savings_register_member_amount_upload')
                        CREATE TABLE [dbo].[ben_youthgroup_savings_register_member_amount_upload](
	                    [ysrm_id] [nvarchar](100) NOT NULL,
	                    [ysrms_id] [nvarchar](100) NOT NULL,
	                    [total_savings] [nvarchar](50) NOT NULL,
	                    [amout_borrowed] [nvarchar](50) NOT NULL,
	                    [loan_purpose] [nvarchar](50) NOT NULL,
	                    [loan_purpose_other] [nvarchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                        [district_id] [nvarchar](50) NOT NULL,
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_amount_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_amount_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_amount_insert] ON [dbo].[ben_youthgroup_savings_register_member_amount] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_amount_upload]
           ([ysrm_id],[ysrms_id],[total_savings],[amout_borrowed] ,[loan_purpose],[loan_purpose_other] ,[trg_action],[district_id])
	                SELECT [ysrm_id],[ysrms_id],[total_savings],[amout_borrowed] ,[loan_purpose],[loan_purpose_other] ,1,[district_id]
                  FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_amount_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_amount_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_amount_update] ON [dbo].[ben_youthgroup_savings_register_member_amount] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_amount_upload]
           ([ysrm_id],[ysrms_id],[total_savings],[amout_borrowed] ,[loan_purpose],[loan_purpose_other] ,[trg_action],[district_id])
	                SELECT [ysrm_id],[ysrms_id],[total_savings],[amout_borrowed] ,[loan_purpose],[loan_purpose_other] ,2,[district_id]
                  FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_amount_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_amount_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_amount_delete] ON [dbo].[ben_youthgroup_savings_register_member_amount] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_amount_upload]
           ([ysrm_id],[ysrms_id],[total_savings],[amout_borrowed] ,[loan_purpose],[loan_purpose_other] ,[trg_action],[district_id])
	                SELECT [ysrm_id],[ysrms_id],[total_savings],[amout_borrowed] ,[loan_purpose],[loan_purpose_other] ,3,[district_id]
                  FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_education_subsidy_assessment(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_education_subsidy_assessment')
                       CREATE TABLE [dbo].[ben_education_subsidy_assessment](
	                        [ed_sub_id] [varchar](50) NOT NULL,
	                        [prt_id] [varchar](50) NOT NULL,
	                        [cso_id] [varchar](50) NOT NULL,
	                        [dst_id] [varchar](50) NOT NULL,
	                        [sct_id] [varchar](50) NOT NULL,
	                        [wrd_id] [varchar](50) NOT NULL,
	                        [village] [varchar](50) NOT NULL,
	                        [assessment_date] [date] NOT NULL,
	                        [hhm_id_caregiver] [varchar](100) NOT NULL,
	                        [caregiver_phone] [varchar](50) NOT NULL,
	                        [hh_id] [varchar](50) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL,
                         CONSTRAINT [PK_ben_education_subsidy_assessment] PRIMARY KEY CLUSTERED 
                        (
	                        [ed_sub_id] ASC
                        )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                        ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_education_subsidy_assessment_upload')
                        CREATE TABLE [dbo].[ben_education_subsidy_assessment_upload](
	                        [ed_sub_id] [varchar](50) NOT NULL,
	                        [prt_id] [varchar](50) NOT NULL,
	                        [cso_id] [varchar](50) NOT NULL,
	                        [dst_id] [varchar](50) NOT NULL,
	                        [sct_id] [varchar](50) NOT NULL,
	                        [wrd_id] [varchar](50) NOT NULL,
	                        [village] [varchar](50) NOT NULL,
	                        [assessment_date] [date] NOT NULL,
	                        [hhm_id_caregiver] [varchar](100) NOT NULL,
	                        [caregiver_phone] [varchar](50) NOT NULL,
	                        [hh_id] [varchar](50) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [trg_action] [int] NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL
                        ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_education_subsidy_assessment_member')
                        CREATE TABLE [dbo].[ben_education_subsidy_assessment_member](
	                        [ed_subm_id] [varchar](50) NOT NULL,
	                        [ed_sub_id] [varchar](50) NOT NULL,
	                        [hhm_id] [varchar](50) NOT NULL,
	                        [last_class_completed] [varchar](50) NOT NULL,
	                        [prev_school] [varchar](50) NOT NULL,
	                        [drop_out_year] [varchar](50) NOT NULL,
	                        [dropout_reason] [varchar](100) NULL,
	                        [yn_id_willing_to_study] [varchar](50) NOT NULL,
	                        [enrollment_class] [varchar](50) NOT NULL,
	                        [ttps_id] [varchar](50) NOT NULL,
	                        [preffered_school] [varchar](50) NOT NULL,
	                        [caregiver_contribution] [varchar](100) NOT NULL,
	                        [yn_id_hh_head_in_silc_grp] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_sch_attendance] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_pta_meeting] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_acad_performance] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_project_interventions] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_contribute_fee] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_keep_child_in_sch] [varchar](50) NOT NULL,
	                        [swk_id] [varchar](50) NOT NULL,
	                        [swk_phone] [varchar](50) NOT NULL,
	                        [psw_id] [varchar](50) NOT NULL,
	                        [psw_phone] [varchar](50) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL,
                         CONSTRAINT [PK_ben_education_subsidy_assessment_member] PRIMARY KEY CLUSTERED 
                        (
	                        [ed_subm_id] ASC
                        )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                        ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_education_subsidy_assessment_member_upload')
                        CREATE TABLE [dbo].[ben_education_subsidy_assessment_member_upload](
	                        [ed_subm_id] [varchar](50) NOT NULL,
	                        [ed_sub_id] [varchar](50) NOT NULL,
	                        [hhm_id] [varchar](50) NOT NULL,
	                        [last_class_completed] [varchar](50) NOT NULL,
	                        [prev_school] [varchar](50) NOT NULL,
	                        [drop_out_year] [varchar](50) NOT NULL,
	                        [dropout_reason] [varchar](100) NOT NULL,
	                        [yn_id_willing_to_study] [varchar](50) NOT NULL,
	                        [enrollment_class] [varchar](50) NOT NULL,
	                        [ttps_id] [varchar](50) NOT NULL,
	                        [preffered_school] [varchar](50) NOT NULL,
	                        [caregiver_contribution] [varchar](100) NOT NULL,
	                        [yn_id_hh_head_in_silc_grp] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_sch_attendance] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_pta_meeting] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_acad_performance] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_project_interventions] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_contribute_fee] [varchar](50) NOT NULL,
	                        [yn_id_caregiver_commit_keep_child_in_sch] [varchar](50) NOT NULL,
	                        [swk_id] [varchar](50) NOT NULL,
	                        [swk_phone] [varchar](50) NOT NULL,
	                        [psw_id] [varchar](50) NOT NULL,
	                        [psw_phone] [varchar](50) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [trg_action] [int] NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL
                        ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            #region ben_education_subsidy_assessment
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_assessment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_assessment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_assessment_insert] ON [dbo].[ben_education_subsidy_assessment] FOR INSERT
                    AS
                    BEGIN
	            INSERT INTO [dbo].[ben_education_subsidy_assessment_upload]
				([ed_sub_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id] ,[village],[assessment_date],[hhm_id_caregiver]
				,[caregiver_phone],[hh_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				,[trg_action],[district_id])
	            SELECT [ed_sub_id],[prt_id],[cso_id] ,[dst_id],[sct_id],[wrd_id],[village],[assessment_date],[hhm_id_caregiver],[caregiver_phone]
                ,[hh_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
            FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_assessment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_assessment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_assessment_update] ON [dbo].[ben_education_subsidy_assessment] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_education_subsidy_assessment_upload]
				   ([ed_sub_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id] ,[village],[assessment_date],[hhm_id_caregiver]
				   ,[caregiver_phone],[hh_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				   ,[trg_action],[district_id])
	                SELECT [ed_sub_id],[prt_id],[cso_id] ,[dst_id],[sct_id],[wrd_id],[village],[assessment_date],[hhm_id_caregiver],[caregiver_phone]
                  ,[hh_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
              FROM inserted 
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_assessment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_assessment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_assessment_delete] ON [dbo].[ben_education_subsidy_assessment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_education_subsidy_assessment_upload]
				   ([ed_sub_id],[prt_id],[cso_id],[dst_id],[sct_id],[wrd_id] ,[village],[assessment_date],[hhm_id_caregiver]
				   ,[caregiver_phone],[hh_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				   ,[trg_action],[district_id])
	                SELECT [ed_sub_id],[prt_id],[cso_id] ,[dst_id],[sct_id],[wrd_id],[village],[assessment_date],[hhm_id_caregiver],[caregiver_phone]
                  ,[hh_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
              FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_education_subsidy_assessment

            #region ben_education_subsidy_assessment_member
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_assessment_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_assessment_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_assessment_member_insert] ON [dbo].[ben_education_subsidy_assessment_member] FOR INSERT
                        AS
                        BEGIN
		                        INSERT INTO [dbo].[ben_education_subsidy_assessment_member_upload]
	                        ([ed_subm_id],[ed_sub_id] ,[hhm_id],[last_class_completed],[prev_school],[drop_out_year],[dropout_reason],[yn_id_willing_to_study]
	                        ,[enrollment_class] ,[ttps_id],[preffered_school],[caregiver_contribution],[yn_id_hh_head_in_silc_grp],[yn_id_caregiver_commit_sch_attendance]
	                        ,[yn_id_caregiver_commit_pta_meeting],[yn_id_caregiver_commit_acad_performance],[yn_id_caregiver_commit_project_interventions]
	                        ,[yn_id_caregiver_commit_contribute_fee],[yn_id_caregiver_commit_keep_child_in_sch],[swk_id],[swk_phone],[psw_id],[psw_phone],[usr_id_create]
	                        ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ed_subm_id],[ed_sub_id] ,[hhm_id],[last_class_completed],[prev_school],[drop_out_year],[dropout_reason],[yn_id_willing_to_study]
	                        ,[enrollment_class] ,[ttps_id],[preffered_school],[caregiver_contribution],[yn_id_hh_head_in_silc_grp],[yn_id_caregiver_commit_sch_attendance]
	                        ,[yn_id_caregiver_commit_pta_meeting],[yn_id_caregiver_commit_acad_performance],[yn_id_caregiver_commit_project_interventions]
	                        ,[yn_id_caregiver_commit_contribute_fee],[yn_id_caregiver_commit_keep_child_in_sch],[swk_id],[swk_phone],[psw_id],[psw_phone],[usr_id_create]
	                        ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
	                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_assessment_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_assessment_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_assessment_member_update] ON [dbo].[ben_education_subsidy_assessment_member] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_education_subsidy_assessment_member_upload]
           ([ed_subm_id],[ed_sub_id] ,[hhm_id],[last_class_completed],[prev_school],[drop_out_year],[dropout_reason],[yn_id_willing_to_study]
           ,[enrollment_class] ,[ttps_id],[preffered_school],[caregiver_contribution],[yn_id_hh_head_in_silc_grp],[yn_id_caregiver_commit_sch_attendance]
           ,[yn_id_caregiver_commit_pta_meeting],[yn_id_caregiver_commit_acad_performance],[yn_id_caregiver_commit_project_interventions]
           ,[yn_id_caregiver_commit_contribute_fee],[yn_id_caregiver_commit_keep_child_in_sch],[swk_id],[swk_phone],[psw_id],[psw_phone],[usr_id_create]
           ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
     SELECT [ed_subm_id],[ed_sub_id] ,[hhm_id],[last_class_completed],[prev_school],[drop_out_year],[dropout_reason],[yn_id_willing_to_study]
           ,[enrollment_class] ,[ttps_id],[preffered_school],[caregiver_contribution],[yn_id_hh_head_in_silc_grp],[yn_id_caregiver_commit_sch_attendance]
           ,[yn_id_caregiver_commit_pta_meeting],[yn_id_caregiver_commit_acad_performance],[yn_id_caregiver_commit_project_interventions]
           ,[yn_id_caregiver_commit_contribute_fee],[yn_id_caregiver_commit_keep_child_in_sch],[swk_id],[swk_phone],[psw_id],[psw_phone],[usr_id_create]
           ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
		   FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_assessment_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_assessment_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_assessment_member_delete] ON [dbo].[ben_education_subsidy_assessment_member] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_education_subsidy_assessment_member_upload]
           ([ed_subm_id],[ed_sub_id] ,[hhm_id],[last_class_completed],[prev_school],[drop_out_year],[dropout_reason],[yn_id_willing_to_study]
           ,[enrollment_class] ,[ttps_id],[preffered_school],[caregiver_contribution],[yn_id_hh_head_in_silc_grp],[yn_id_caregiver_commit_sch_attendance]
           ,[yn_id_caregiver_commit_pta_meeting],[yn_id_caregiver_commit_acad_performance],[yn_id_caregiver_commit_project_interventions]
           ,[yn_id_caregiver_commit_contribute_fee],[yn_id_caregiver_commit_keep_child_in_sch],[swk_id],[swk_phone],[psw_id],[psw_phone],[usr_id_create]
           ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
     SELECT [ed_subm_id],[ed_sub_id] ,[hhm_id],[last_class_completed],[prev_school],[drop_out_year],[dropout_reason],[yn_id_willing_to_study]
           ,[enrollment_class] ,[ttps_id],[preffered_school],[caregiver_contribution],[yn_id_hh_head_in_silc_grp],[yn_id_caregiver_commit_sch_attendance]
           ,[yn_id_caregiver_commit_pta_meeting],[yn_id_caregiver_commit_acad_performance],[yn_id_caregiver_commit_project_interventions]
           ,[yn_id_caregiver_commit_contribute_fee],[yn_id_caregiver_commit_keep_child_in_sch],[swk_id],[swk_phone],[psw_id],[psw_phone],[usr_id_create]
           ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
		   FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_education_subsidy_assessment_member
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_ben_agro_enterprise_ranking_matrix(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_agro_enterprise_ranking_matrix')
                       CREATE TABLE [dbo].[ben_agro_enterprise_ranking_matrix](
	                    [agro_ent_id] [varchar](100) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [fa_name] [varchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_agro_enterprise_ranking_matrix] PRIMARY KEY CLUSTERED 
                    (
	                    [agro_ent_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_agro_enterprise_ranking_matrix_crop_ranking')
                        CREATE TABLE [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking](
	                    [agro_entm_id] [varchar](50) NOT NULL,
	                    [agro_ent_id] [varchar](100) NOT NULL,
	                    [crop_1_id] [varchar](50) NOT NULL,
	                    [crop_1_param1_score] [int] NOT NULL,
	                    [crop_1_param2_score] [int] NOT NULL,
	                    [crop_1_param3_score] [int] NOT NULL,
	                    [crop_1_param4_score] [int] NOT NULL,
	                    [crop_1_param5_score] [int] NOT NULL,
	                    [crop_1_param6_score] [int] NOT NULL,
	                    [crop_1_param7_score] [int] NOT NULL,
	                    [crop_1_param8_score] [int] NOT NULL,
	                    [crop_1_total_score] [int] NOT NULL,
	                    [crop_1_rank] [int] NOT NULL,
	                    [crop_2_id] [varchar](50) NOT NULL,
	                    [crop_2_param1_score] [int] NOT NULL,
	                    [crop_2_param2_score] [int] NOT NULL,
	                    [crop_2_param3_score] [int] NOT NULL,
	                    [crop_2_param4_score] [int] NOT NULL,
	                    [crop_2_param5_score] [int] NOT NULL,
	                    [crop_2_param6_score] [int] NOT NULL,
	                    [crop_2_param7_score] [int] NOT NULL,
	                    [crop_2_param8_score] [int] NOT NULL,
	                    [crop_2_total_score] [int] NOT NULL,
	                    [crop_2_rank] [int] NOT NULL,
	                    [crop3_id] [varchar](50) NOT NULL,
	                    [crop_3_param1_score] [int] NOT NULL,
	                    [crop_3_param2_score] [int] NOT NULL,
	                    [crop_3_param3_score] [int] NOT NULL,
	                    [crop_3_param4_score] [int] NOT NULL,
	                    [crop_3_param5_score] [int] NOT NULL,
	                    [crop_3_param6_score] [int] NOT NULL,
	                    [crop_3_param7_score] [int] NOT NULL,
	                    [crop_3_param8_score] [int] NOT NULL,
	                    [crop_3_total_score] [int] NOT NULL,
	                    [crop_3_rank] [int] NOT NULL,
	                    [crop_4_id] [varchar](50) NOT NULL,
	                    [crop_4_param1_score] [int] NOT NULL,
	                    [crop_4_param2_score] [int] NOT NULL,
	                    [crop_4_param3_score] [int] NOT NULL,
	                    [crop_4_param4_score] [int] NOT NULL,
	                    [crop_4_param5_score] [int] NOT NULL,
	                    [crop_4_param6_score] [int] NOT NULL,
	                    [crop_4_param7_score] [int] NOT NULL,
	                    [crop_4_param8_score] [int] NOT NULL,
	                    [crop_4_total_score] [int] NOT NULL,
	                    [crop_4_rank] [int] NOT NULL,
	                    [crop_5_id] [varchar](50) NOT NULL,
	                    [crop_5_param1_score] [int] NOT NULL,
	                    [crop_5_param2_score] [int] NOT NULL,
	                    [crop_5_param3_score] [int] NOT NULL,
	                    [crop_5_param4_score] [int] NOT NULL,
	                    [crop_5_param5_score] [int] NOT NULL,
	                    [crop_5_param6_score] [int] NOT NULL,
	                    [crop_5_param7_score] [int] NOT NULL,
	                    [crop_5_param8_score] [int] NOT NULL,
	                    [crop_5_total_score] [int] NOT NULL,
	                    [crop_5_rank] [int] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_agro_enterprise_ranking_matrix_crop_ranking] PRIMARY KEY CLUSTERED 
                    (
	                    [agro_entm_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_agro_enterprise_ranking_matrix_upload')
                        CREATE TABLE [dbo].[ben_agro_enterprise_ranking_matrix_upload](
	                    [agro_ent_id] [varchar](100) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [fa_name] [varchar](100) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_agro_enterprise_ranking_matrix_crop_ranking_upload')
                       CREATE TABLE [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_upload](
	                    [agro_entm_id] [varchar](50) NOT NULL,
	                    [agro_ent_id] [varchar](100) NOT NULL,
	                    [crop_1_id] [varchar](50) NOT NULL,
	                    [crop_1_param1_score] [int] NOT NULL,
	                    [crop_1_param2_score] [int] NOT NULL,
	                    [crop_1_param3_score] [int] NOT NULL,
	                    [crop_1_param4_score] [int] NOT NULL,
	                    [crop_1_param5_score] [int] NOT NULL,
	                    [crop_1_param6_score] [int] NOT NULL,
	                    [crop_1_param7_score] [int] NOT NULL,
	                    [crop_1_param8_score] [int] NOT NULL,
	                    [crop_1_total_score] [int] NOT NULL,
	                    [crop_1_rank] [int] NOT NULL,
	                    [crop_2_id] [varchar](50) NOT NULL,
	                    [crop_2_param1_score] [int] NOT NULL,
	                    [crop_2_param2_score] [int] NOT NULL,
	                    [crop_2_param3_score] [int] NOT NULL,
	                    [crop_2_param4_score] [int] NOT NULL,
	                    [crop_2_param5_score] [int] NOT NULL,
	                    [crop_2_param6_score] [int] NOT NULL,
	                    [crop_2_param7_score] [int] NOT NULL,
	                    [crop_2_param8_score] [int] NOT NULL,
	                    [crop_2_total_score] [int] NOT NULL,
	                    [crop_2_rank] [int] NOT NULL,
	                    [crop3_id] [varchar](50) NOT NULL,
	                    [crop_3_param1_score] [int] NOT NULL,
	                    [crop_3_param2_score] [int] NOT NULL,
	                    [crop_3_param3_score] [int] NOT NULL,
	                    [crop_3_param4_score] [int] NOT NULL,
	                    [crop_3_param5_score] [int] NOT NULL,
	                    [crop_3_param6_score] [int] NOT NULL,
	                    [crop_3_param7_score] [int] NOT NULL,
	                    [crop_3_param8_score] [int] NOT NULL,
	                    [crop_3_total_score] [int] NOT NULL,
	                    [crop_3_rank] [int] NOT NULL,
	                    [crop_4_id] [varchar](50) NOT NULL,
	                    [crop_4_param1_score] [int] NOT NULL,
	                    [crop_4_param2_score] [int] NOT NULL,
	                    [crop_4_param3_score] [int] NOT NULL,
	                    [crop_4_param4_score] [int] NOT NULL,
	                    [crop_4_param5_score] [int] NOT NULL,
	                    [crop_4_param6_score] [int] NOT NULL,
	                    [crop_4_param7_score] [int] NOT NULL,
	                    [crop_4_param8_score] [int] NOT NULL,
	                    [crop_4_total_score] [int] NOT NULL,
	                    [crop_4_rank] [int] NOT NULL,
	                    [crop_5_id] [varchar](50) NOT NULL,
	                    [crop_5_param1_score] [int] NOT NULL,
	                    [crop_5_param2_score] [int] NOT NULL,
	                    [crop_5_param3_score] [int] NOT NULL,
	                    [crop_5_param4_score] [int] NOT NULL,
	                    [crop_5_param5_score] [int] NOT NULL,
	                    [crop_5_param6_score] [int] NOT NULL,
	                    [crop_5_param7_score] [int] NOT NULL,
	                    [crop_5_param8_score] [int] NOT NULL,
	                    [crop_5_total_score] [int] NOT NULL,
	                    [crop_5_rank] [int] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            #region ben_education_subsidy_assessment
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_agro_enterprise_ranking_matrix_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_insert] ON [dbo].[ben_agro_enterprise_ranking_matrix] FOR INSERT
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_agro_enterprise_ranking_matrix_upload]
                   ([agro_ent_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fa_name],[usr_id_create]
                   ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [agro_ent_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fa_name],[usr_id_create]
                   ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                          FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_agro_enterprise_ranking_matrix_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_update] ON [dbo].[ben_agro_enterprise_ranking_matrix] FOR UPDATE
                            AS
                            BEGIN
	                            INSERT INTO [dbo].[ben_agro_enterprise_ranking_matrix_upload]
                       ([agro_ent_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fa_name],[usr_id_create]
                       ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                            SELECT [agro_ent_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fa_name],[usr_id_create]
                       ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                              FROM inserted
                            END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_agro_enterprise_ranking_matrix_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_delete] ON [dbo].[ben_agro_enterprise_ranking_matrix] FOR DELETE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_agro_enterprise_ranking_matrix_upload]
                    ([agro_ent_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fa_name],[usr_id_create]
                    ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [agro_ent_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fa_name],[usr_id_create]
                    ,[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                            FROM deleted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_education_subsidy_assessment

            #region ben_education_subsidy_assessment_member
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_agro_enterprise_ranking_matrix_crop_ranking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_insert] ON [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_upload]
           ([agro_entm_id],[agro_ent_id],[crop_1_id],[crop_1_param1_score],[crop_1_param2_score],[crop_1_param3_score],[crop_1_param4_score],[crop_1_param5_score]
           ,[crop_1_param6_score],[crop_1_param7_score],[crop_1_param8_score],[crop_1_total_score],[crop_1_rank]
           ,[crop_2_id],[crop_2_param1_score],[crop_2_param2_score],[crop_2_param3_score],[crop_2_param4_score],[crop_2_param5_score],[crop_2_param6_score]
           ,[crop_2_param7_score],[crop_2_param8_score],[crop_2_total_score],[crop_2_rank]
           ,[crop3_id],[crop_3_param1_score],[crop_3_param2_score],[crop_3_param3_score],[crop_3_param4_score],[crop_3_param5_score],[crop_3_param6_score],[crop_3_param7_score]
           ,[crop_3_param8_score],[crop_3_total_score],[crop_3_rank]
           ,[crop_4_id],[crop_4_param1_score],[crop_4_param2_score],[crop_4_param3_score],[crop_4_param4_score],[crop_4_param5_score],[crop_4_param6_score],[crop_4_param7_score]
           ,[crop_4_param8_score],[crop_4_total_score],[crop_4_rank]
		   ,[crop_5_id],[crop_5_param1_score],[crop_5_param2_score],[crop_5_param3_score],[crop_5_param4_score],[crop_5_param5_score],[crop_5_param6_score],[crop_5_param7_score]
           ,[crop_5_param8_score],[crop_5_total_score],[crop_5_rank],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])

	             SELECT [agro_entm_id],[agro_ent_id],[crop_1_id],[crop_1_param1_score],[crop_1_param2_score],[crop_1_param3_score],[crop_1_param4_score],[crop_1_param5_score]
           ,[crop_1_param6_score],[crop_1_param7_score],[crop_1_param8_score],[crop_1_total_score],[crop_1_rank]
           ,[crop_2_id],[crop_2_param1_score],[crop_2_param2_score],[crop_2_param3_score],[crop_2_param4_score],[crop_2_param5_score],[crop_2_param6_score]
           ,[crop_2_param7_score],[crop_2_param8_score],[crop_2_total_score],[crop_2_rank]
           ,[crop3_id],[crop_3_param1_score],[crop_3_param2_score],[crop_3_param3_score],[crop_3_param4_score],[crop_3_param5_score],[crop_3_param6_score],[crop_3_param7_score]
           ,[crop_3_param8_score],[crop_3_total_score],[crop_3_rank]
           ,[crop_4_id],[crop_4_param1_score],[crop_4_param2_score],[crop_4_param3_score],[crop_4_param4_score],[crop_4_param5_score],[crop_4_param6_score],[crop_4_param7_score]
           ,[crop_4_param8_score],[crop_4_total_score],[crop_4_rank]
		   ,[crop_5_id],[crop_5_param1_score],[crop_5_param2_score],[crop_5_param3_score],[crop_5_param4_score],[crop_5_param5_score],[crop_5_param6_score],[crop_5_param7_score]
           ,[crop_5_param8_score],[crop_5_total_score],[crop_5_rank],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                  FROM inserted
             END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_agro_enterprise_ranking_matrix_crop_ranking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_update] ON [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_upload]
           ([agro_entm_id],[agro_ent_id],[crop_1_id],[crop_1_param1_score],[crop_1_param2_score],[crop_1_param3_score],[crop_1_param4_score],[crop_1_param5_score]
           ,[crop_1_param6_score],[crop_1_param7_score],[crop_1_param8_score],[crop_1_total_score],[crop_1_rank]
           ,[crop_2_id],[crop_2_param1_score],[crop_2_param2_score],[crop_2_param3_score],[crop_2_param4_score],[crop_2_param5_score],[crop_2_param6_score]
           ,[crop_2_param7_score],[crop_2_param8_score],[crop_2_total_score],[crop_2_rank]
           ,[crop3_id],[crop_3_param1_score],[crop_3_param2_score],[crop_3_param3_score],[crop_3_param4_score],[crop_3_param5_score],[crop_3_param6_score],[crop_3_param7_score]
           ,[crop_3_param8_score],[crop_3_total_score],[crop_3_rank]
           ,[crop_4_id],[crop_4_param1_score],[crop_4_param2_score],[crop_4_param3_score],[crop_4_param4_score],[crop_4_param5_score],[crop_4_param6_score],[crop_4_param7_score]
           ,[crop_4_param8_score],[crop_4_total_score],[crop_4_rank]
		   ,[crop_5_id],[crop_5_param1_score],[crop_5_param2_score],[crop_5_param3_score],[crop_5_param4_score],[crop_5_param5_score],[crop_5_param6_score],[crop_5_param7_score]
           ,[crop_5_param8_score],[crop_5_total_score],[crop_5_rank],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])

	             SELECT [agro_entm_id],[agro_ent_id],[crop_1_id],[crop_1_param1_score],[crop_1_param2_score],[crop_1_param3_score],[crop_1_param4_score],[crop_1_param5_score]
           ,[crop_1_param6_score],[crop_1_param7_score],[crop_1_param8_score],[crop_1_total_score],[crop_1_rank]
           ,[crop_2_id],[crop_2_param1_score],[crop_2_param2_score],[crop_2_param3_score],[crop_2_param4_score],[crop_2_param5_score],[crop_2_param6_score]
           ,[crop_2_param7_score],[crop_2_param8_score],[crop_2_total_score],[crop_2_rank]
           ,[crop3_id],[crop_3_param1_score],[crop_3_param2_score],[crop_3_param3_score],[crop_3_param4_score],[crop_3_param5_score],[crop_3_param6_score],[crop_3_param7_score]
           ,[crop_3_param8_score],[crop_3_total_score],[crop_3_rank]
           ,[crop_4_id],[crop_4_param1_score],[crop_4_param2_score],[crop_4_param3_score],[crop_4_param4_score],[crop_4_param5_score],[crop_4_param6_score],[crop_4_param7_score]
           ,[crop_4_param8_score],[crop_4_total_score],[crop_4_rank]
		   ,[crop_5_id],[crop_5_param1_score],[crop_5_param2_score],[crop_5_param3_score],[crop_5_param4_score],[crop_5_param5_score],[crop_5_param6_score],[crop_5_param7_score]
           ,[crop_5_param8_score],[crop_5_total_score],[crop_5_rank],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_agro_enterprise_ranking_matrix_crop_ranking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_delete] ON [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_agro_enterprise_ranking_matrix_crop_ranking_upload]
           ([agro_entm_id],[agro_ent_id],[crop_1_id],[crop_1_param1_score],[crop_1_param2_score],[crop_1_param3_score],[crop_1_param4_score],[crop_1_param5_score]
           ,[crop_1_param6_score],[crop_1_param7_score],[crop_1_param8_score],[crop_1_total_score],[crop_1_rank]
           ,[crop_2_id],[crop_2_param1_score],[crop_2_param2_score],[crop_2_param3_score],[crop_2_param4_score],[crop_2_param5_score],[crop_2_param6_score]
           ,[crop_2_param7_score],[crop_2_param8_score],[crop_2_total_score],[crop_2_rank]
           ,[crop3_id],[crop_3_param1_score],[crop_3_param2_score],[crop_3_param3_score],[crop_3_param4_score],[crop_3_param5_score],[crop_3_param6_score],[crop_3_param7_score]
           ,[crop_3_param8_score],[crop_3_total_score],[crop_3_rank]
           ,[crop_4_id],[crop_4_param1_score],[crop_4_param2_score],[crop_4_param3_score],[crop_4_param4_score],[crop_4_param5_score],[crop_4_param6_score],[crop_4_param7_score]
           ,[crop_4_param8_score],[crop_4_total_score],[crop_4_rank]
		   ,[crop_5_id],[crop_5_param1_score],[crop_5_param2_score],[crop_5_param3_score],[crop_5_param4_score],[crop_5_param5_score],[crop_5_param6_score],[crop_5_param7_score]
           ,[crop_5_param8_score],[crop_5_total_score],[crop_5_rank],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])

	             SELECT [agro_entm_id],[agro_ent_id],[crop_1_id],[crop_1_param1_score],[crop_1_param2_score],[crop_1_param3_score],[crop_1_param4_score],[crop_1_param5_score]
           ,[crop_1_param6_score],[crop_1_param7_score],[crop_1_param8_score],[crop_1_total_score],[crop_1_rank]
           ,[crop_2_id],[crop_2_param1_score],[crop_2_param2_score],[crop_2_param3_score],[crop_2_param4_score],[crop_2_param5_score],[crop_2_param6_score]
           ,[crop_2_param7_score],[crop_2_param8_score],[crop_2_total_score],[crop_2_rank]
           ,[crop3_id],[crop_3_param1_score],[crop_3_param2_score],[crop_3_param3_score],[crop_3_param4_score],[crop_3_param5_score],[crop_3_param6_score],[crop_3_param7_score]
           ,[crop_3_param8_score],[crop_3_total_score],[crop_3_rank]
           ,[crop_4_id],[crop_4_param1_score],[crop_4_param2_score],[crop_4_param3_score],[crop_4_param4_score],[crop_4_param5_score],[crop_4_param6_score],[crop_4_param7_score]
           ,[crop_4_param8_score],[crop_4_total_score],[crop_4_rank]
		   ,[crop_5_id],[crop_5_param1_score],[crop_5_param2_score],[crop_5_param3_score],[crop_5_param4_score],[crop_5_param5_score],[crop_5_param6_score],[crop_5_param7_score]
           ,[crop_5_param8_score],[crop_5_total_score],[crop_5_rank],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                  FROM deleted
           END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_education_subsidy_assessment_member
            #endregion Triggers
            #endregion SQL
        }

        private static void Createlst_agro_scoring_crops(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_agro_scoring_crops')
                       CREATE TABLE [dbo].[lst_agro_scoring_crops](
	                    [crop_sid] [int] NOT NULL,
	                    [crop_id] [varchar](50) NOT NULL,
	                    [crop_name] [varchar](500) NOT NULL,
	                    [crop_order] [int] NOT NULL,
	                    [crop_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                        [type_id] [varchar](50) NOT NULL
                     CONSTRAINT [PK_lst_agro_scoring_crops] PRIMARY KEY CLUSTERED 
                    (
	                    [crop_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables
            #endregion SQL
        }

        private static void Createlst_agro_scoring_parameter(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_agro_scoring_parameter')
                       CREATE TABLE [dbo].[lst_agro_scoring_parameter](
	                    [asp_sid] [int] NOT NULL,
	                    [asp_id] [varchar](50) NOT NULL,
	                    [asp_name] [varchar](500) NOT NULL,
	                    [asp_order] [int] NOT NULL,
	                    [asp_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_agro_scoring_parameter] PRIMARY KEY CLUSTERED 
                    (
	                    [asp_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables
            #endregion SQL
        }

        private static void Createlst_hh_identification_source(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_hh_identification_source')
                       CREATE TABLE [dbo].[lst_hh_identification_source](
	                    [ids_sid] [int] NOT NULL,
	                    [ids_id] [nvarchar](50) NOT NULL,
	                    [ids_name] [nvarchar](500) NOT NULL,
	                    [ids_order] [int] NOT NULL,
	                    [ids_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_hh_identification_source] PRIMARY KEY CLUSTERED 
                    (
	                    [ids_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables
            #endregion SQL
        }


        private static void Createben_education_subsidy_school_readiness(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_education_subsidy_school_readiness')
                       CREATE TABLE [dbo].[ben_education_subsidy_school_readiness](
	                    [edsr_id] [varchar](50) NOT NULL,
	                    [ip_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [edsr_ass_date] [date] NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [hhm_id_caregiver] [varchar](50) NOT NULL,
	                    [hhm_caregiver_phone] [varchar](50) NOT NULL,
	                    [yn_hh_silc] [varchar](50) NOT NULL,
	                    [yn_child_in_school] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [last_class_completed] [varchar](50) NOT NULL,
	                    [prev_school_name] [varchar](50) NOT NULL,
	                    [drop_out_yr] [varchar](50) NOT NULL,
	                    [child_next_steps] [varchar](50) NOT NULL,
	                    [current_class] [varchar](50) NOT NULL,
	                    [child_future_plans] [varchar](1000) NOT NULL,
	                    [current_school_name] [varchar](50) NOT NULL,
	                    [sw_id] [varchar](50) NOT NULL,
	                    [psw_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_education_subsidy_school_readiness] PRIMARY KEY CLUSTERED 
                    (
	                    [edsr_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_education_subsidy_school_readiness_upload')
                      CREATE TABLE [dbo].[ben_education_subsidy_school_readiness_upload](
	                    [edsr_id] [varchar](50) NOT NULL,
	                    [ip_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [edsr_ass_date] [date] NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [hhm_id_caregiver] [varchar](50) NOT NULL,
	                    [hhm_caregiver_phone] [varchar](50) NOT NULL,
	                    [yn_hh_silc] [varchar](50) NOT NULL,
	                    [yn_child_in_school] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [last_class_completed] [varchar](50) NOT NULL,
	                    [prev_school_name] [varchar](50) NOT NULL,
	                    [drop_out_yr] [varchar](50) NOT NULL,
	                    [child_next_steps] [varchar](50) NOT NULL,
	                    [current_class] [varchar](50) NOT NULL,
	                    [child_future_plans] [varchar](1000) NOT NULL,
	                    [current_school_name] [varchar](50) NOT NULL,
	                    [sw_id] [varchar](50) NOT NULL,
	                    [psw_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_school_readiness_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_school_readiness_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_school_readiness_insert] ON [dbo].[ben_education_subsidy_school_readiness] FOR INSERT
                    AS
                    BEGIN
	           INSERT INTO [dbo].[ben_education_subsidy_school_readiness_upload]
           ([edsr_id],[ip_id],[cso_id],[wrd_id],[edsr_ass_date],[hh_id],[hhm_id_caregiver],[hhm_caregiver_phone],[yn_hh_silc]
           ,[yn_child_in_school],[hhm_id],[last_class_completed],[prev_school_name],[drop_out_yr],[child_next_steps]
           ,[current_class],[child_future_plans],[current_school_name],[sw_id],[psw_id],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],[trg_action],[district_id])
	            SELECT [edsr_id],[ip_id],[cso_id],[wrd_id],[edsr_ass_date],[hh_id],[hhm_id_caregiver],[hhm_caregiver_phone],[yn_hh_silc]
           ,[yn_child_in_school],[hhm_id],[last_class_completed],[prev_school_name],[drop_out_yr],[child_next_steps]
           ,[current_class],[child_future_plans],[current_school_name],[sw_id],[psw_id],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],1,[district_id]
            FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_school_readiness_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_school_readiness_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_school_readiness_update] ON [dbo].[ben_education_subsidy_school_readiness] FOR UPDATE
                    AS
                    BEGIN
	           INSERT INTO [dbo].[ben_education_subsidy_school_readiness_upload]
           ([edsr_id],[ip_id],[cso_id],[wrd_id],[edsr_ass_date],[hh_id],[hhm_id_caregiver],[hhm_caregiver_phone],[yn_hh_silc]
           ,[yn_child_in_school],[hhm_id],[last_class_completed],[prev_school_name],[drop_out_yr],[child_next_steps]
           ,[current_class],[child_future_plans],[current_school_name],[sw_id],[psw_id],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],[trg_action],[district_id])
	            SELECT [edsr_id],[ip_id],[cso_id],[wrd_id],[edsr_ass_date],[hh_id],[hhm_id_caregiver],[hhm_caregiver_phone],[yn_hh_silc]
           ,[yn_child_in_school],[hhm_id],[last_class_completed],[prev_school_name],[drop_out_yr],[child_next_steps]
           ,[current_class],[child_future_plans],[current_school_name],[sw_id],[psw_id],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],2,[district_id]
            FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_education_subsidy_school_readiness_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_education_subsidy_school_readiness_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_education_subsidy_school_readiness_delete] ON [dbo].[ben_education_subsidy_school_readiness] FOR DELETE
                    AS
                    BEGIN
	           INSERT INTO [dbo].[ben_education_subsidy_school_readiness_upload]
           ([edsr_id],[ip_id],[cso_id],[wrd_id],[edsr_ass_date],[hh_id],[hhm_id_caregiver],[hhm_caregiver_phone],[yn_hh_silc]
           ,[yn_child_in_school],[hhm_id],[last_class_completed],[prev_school_name],[drop_out_yr],[child_next_steps]
           ,[current_class],[child_future_plans],[current_school_name],[sw_id],[psw_id],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],[trg_action],[district_id])
	            SELECT [edsr_id],[ip_id],[cso_id],[wrd_id],[edsr_ass_date],[hh_id],[hhm_id_caregiver],[hhm_caregiver_phone],[yn_hh_silc]
           ,[yn_child_in_school],[hhm_id],[last_class_completed],[prev_school_name],[drop_out_yr],[child_next_steps]
           ,[current_class],[child_future_plans],[current_school_name],[sw_id],[psw_id],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],3,[district_id]
            FROM inserted
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Correct_Kiruhura_agro_enterprise_rankingLists(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DROP TABLE[dbo].[lst_agro_scoring_crops]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "DROP TABLE [lst_agro_scoring_parameter]";
            dbCon.ExecuteNonQuery(strSQL);

            Createlst_agro_scoring_crops(dbCon);
            Createlst_agro_scoring_parameter(dbCon);

            Insertlst_agro_scoring_crops(dbCon);
            Insertlst_agro_scoring_parameter(dbCon);
            #endregion SQL
        }

        private static void Createprt_subcounty_ovc_checklist(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_subcounty_ovc_checklist')
                       CREATE TABLE [dbo].[prt_subcounty_ovc_checklist](
	                    [soc_id] [varchar](50) NOT NULL,
	                    [soc_date] [datetime] NOT NULL,
	                    [soc_cso_report] [int] NOT NULL,
	                    [soc_cso_total] [int] NOT NULL,
	                    [soc_action_points_implemented] [int] NOT NULL,
	                    [soc_action_points_total_identified] [int] NOT NULL,
	                    [dst_id] [varchar](50) NOT NULL,
	                    [fy_id] [varchar](50) NOT NULL,
	                    [qy_id] [varchar](50) NOT NULL,
	                    [yn_id_meetings_held] [varchar](50) NOT NULL,
	                    [yn_id_membership_constituted] [varchar](50) NOT NULL,
	                    [yn_id_cdo_supervision] [varchar](50) NOT NULL,
	                    [yn_signed_minutes_available] [varchar](50) NOT NULL,
	                    [yn_id_sovcc_discussed_minutes_available] [varchar](50) NOT NULL,
	                    [yn_id_ovcmis_district] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_prt_subcounty_ovc_checklist] PRIMARY KEY CLUSTERED 
                    (
	                    [soc_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'prt_subcounty_ovc_checklist_upload')
                        CREATE TABLE [dbo].[prt_subcounty_ovc_checklist_upload](
	                        [soc_id] [varchar](50) NOT NULL,
	                        [soc_date] [datetime] NOT NULL,
	                        [soc_cso_report] [int] NOT NULL,
	                        [soc_cso_total] [int] NOT NULL,
	                        [soc_action_points_implemented] [int] NOT NULL,
	                        [soc_action_points_total_identified] [int] NOT NULL,
	                        [dst_id] [varchar](50) NOT NULL,
	                        [fy_id] [varchar](50) NOT NULL,
	                        [qy_id] [varchar](50) NOT NULL,
	                        [yn_id_meetings_held] [varchar](50) NOT NULL,
	                        [yn_id_membership_constituted] [varchar](50) NOT NULL,
	                        [yn_id_cdo_supervision] [varchar](50) NOT NULL,
	                        [yn_signed_minutes_available] [varchar](50) NOT NULL,
	                        [yn_id_sovcc_discussed_minutes_available] [varchar](50) NOT NULL,
	                        [yn_id_ovcmis_district] [varchar](50) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [trg_action] [int] NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL
                        ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_subcounty_ovc_checklist_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_subcounty_ovc_checklist_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_subcounty_ovc_checklist_insert] ON [dbo].[prt_subcounty_ovc_checklist] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_subcounty_ovc_checklist_upload]
				   ([soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],[trg_action],[district_id])
	                SELECT [soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_subcounty_ovc_checklist_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_subcounty_ovc_checklist_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_subcounty_ovc_checklist_update] ON [dbo].[prt_subcounty_ovc_checklist] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_subcounty_ovc_checklist_upload]
				   ([soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],[trg_action],[district_id])
	                SELECT [soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],2,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_subcounty_ovc_checklist_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_subcounty_ovc_checklist_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_subcounty_ovc_checklist_delete] ON [dbo].[prt_subcounty_ovc_checklist] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_subcounty_ovc_checklist_upload]
				   ([soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],[trg_action],[district_id])
	                SELECT [soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_apprenticeship_skill_acquisition_tracking(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_apprenticeship_skill_acquisition_tracking_skill')
                       CREATE TABLE [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill](
	                        [asatskill_id] [varchar](50) NOT NULL,
	                        [asat_id] [varchar](50) NOT NULL,
	                        [module_id] [varchar](50) NOT NULL,
	                        [skill_id] [varchar](50) NOT NULL,
	                        [excellent_acquired_skr_id] [varchar](50) NOT NULL,
	                        [average_acquired_skr_id] [varchar](50) NOT NULL,
	                        [not_acquired_skr_id] [varchar](50) NOT NULL,
	                        [usr_id_create] [varchar](50) NOT NULL,
	                        [usr_id_update] [varchar](50) NOT NULL,
	                        [usr_date_create] [datetime] NOT NULL,
	                        [usr_date_update] [datetime] NOT NULL,
	                        [ofc_id] [varchar](50) NOT NULL,
	                        [district_id] [nvarchar](50) NOT NULL,
                         CONSTRAINT [PK_ben_apprenticeship_skill_acquisition_tracking_skill] PRIMARY KEY CLUSTERED 
                        (
	                        [asatskill_id] ASC
                        )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                        ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_apprenticeship_skill_acquisition_tracking_skill_upload')
                        CREATE TABLE [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_upload](
	                    [asatskill_id] [varchar](50) NOT NULL,
	                    [asat_id] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [skill_id] [varchar](50) NOT NULL,
	                    [excellent_acquired_skr_id] [varchar](50) NOT NULL,
	                    [average_acquired_skr_id] [varchar](50) NOT NULL,
	                    [not_acquired_skr_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_apprenticeship_skill_acquisition_tracking')
                        CREATE TABLE [dbo].[ben_apprenticeship_skill_acquisition_tracking](
	                    [asat_id] [nvarchar](50) NOT NULL,
	                    [review_date_from] [date] NOT NULL,
	                    [review_date_to] [date] NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [trade_id] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [youth_acquire_not_acquire_skill_reason] [varchar](500) NOT NULL,
	                    [recommended_steps] [varchar](500) NOT NULL,
	                    [artisan_name] [varchar](100) NOT NULL,
	                    [artisan_report_date] [date] NOT NULL,
	                    [youth_skills_acquired] [varchar](500) NOT NULL,
	                    [yn_skill_not_acquired_well] [varchar](50) NOT NULL,
	                    [skill_not_acquired_well] [varchar](500) NOT NULL,
	                    [skill_not_acquired_well_reason] [varchar](500) NOT NULL,
	                    [youth_report_date] [date] NOT NULL,
	                    [dyo_name] [varchar](50) NOT NULL,
	                    [dyo_review_date] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_apprenticeship_skill_acquisition_tracking] PRIMARY KEY CLUSTERED 
                    (
	                    [asat_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_apprenticeship_skill_acquisition_tracking_upload')
                        CREATE TABLE [dbo].[ben_apprenticeship_skill_acquisition_tracking_upload](
	                    [asat_id] [nvarchar](50) NOT NULL,
	                    [review_date_from] [date] NOT NULL,
	                    [review_date_to] [date] NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [trade_id] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [youth_acquire_not_acquire_skill_reason] [varchar](500) NOT NULL,
	                    [recommended_steps] [varchar](500) NOT NULL,
	                    [artisan_name] [varchar](100) NOT NULL,
	                    [artisan_report_date] [date] NOT NULL,
	                    [youth_skills_acquired] [varchar](500) NOT NULL,
	                    [yn_skill_not_acquired_well] [varchar](50) NOT NULL,
	                    [skill_not_acquired_well] [varchar](500) NOT NULL,
	                    [skill_not_acquired_well_reason] [varchar](500) NOT NULL,
	                    [youth_report_date] [date] NOT NULL,
	                    [dyo_name] [varchar](50) NOT NULL,
	                    [dyo_review_date] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_skill_acquisition_tracking_skill_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_insert] ON [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill] FOR INSERT
                    AS
                    BEGIN
	                    INSERT INTO [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_upload] ([asatskill_id],[asat_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id]
			            ,[not_acquired_skr_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
			            ,[trg_action],[district_id])

			            SELECT [asatskill_id],[asat_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id]
			            ,[not_acquired_skr_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
			            ,1,[district_id]
                        FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_skill_acquisition_tracking_skill_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_update] ON [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_upload] ([asatskill_id],[asat_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id]
				  ,[not_acquired_skr_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				  ,[trg_action],[district_id])

				   SELECT [asatskill_id],[asat_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id]
				  ,[not_acquired_skr_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				  ,2,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_skill_acquisition_tracking_skill_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_delete] ON [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_skill_acquisition_tracking_skill_upload] ([asatskill_id],[asat_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id]
				  ,[not_acquired_skr_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				  ,[trg_action],[district_id])

				   SELECT [asatskill_id],[asat_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id]
				  ,[not_acquired_skr_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
				  ,3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_skill_acquisition_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_insert] ON [dbo].[ben_apprenticeship_skill_acquisition_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_skill_acquisition_tracking_upload]
           ([asat_id],[review_date_from],[review_date_to],[wrd_id],[hhm_id],[trade_id],[module_id],[youth_acquire_not_acquire_skill_reason]
           ,[recommended_steps],[artisan_name],[artisan_report_date],[youth_skills_acquired],[yn_skill_not_acquired_well],[skill_not_acquired_well]
           ,[skill_not_acquired_well_reason],[youth_report_date],[dyo_name],[dyo_review_date],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],[trg_action],[district_id])

	       SELECT [asat_id],[review_date_from],[review_date_to],[wrd_id],[hhm_id],[trade_id],[module_id],[youth_acquire_not_acquire_skill_reason]
           ,[recommended_steps],[artisan_name],[artisan_report_date],[youth_skills_acquired],[yn_skill_not_acquired_well],[skill_not_acquired_well]
           ,[skill_not_acquired_well_reason],[youth_report_date],[dyo_name],[dyo_review_date],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_skill_acquisition_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_update] ON [dbo].[ben_apprenticeship_skill_acquisition_tracking] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_skill_acquisition_tracking_upload]
           ([asat_id],[review_date_from],[review_date_to],[wrd_id],[hhm_id],[trade_id],[module_id],[youth_acquire_not_acquire_skill_reason]
           ,[recommended_steps],[artisan_name],[artisan_report_date],[youth_skills_acquired],[yn_skill_not_acquired_well],[skill_not_acquired_well]
           ,[skill_not_acquired_well_reason],[youth_report_date],[dyo_name],[dyo_review_date],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],[trg_action],[district_id])

	       SELECT [asat_id],[review_date_from],[review_date_to],[wrd_id],[hhm_id],[trade_id],[module_id],[youth_acquire_not_acquire_skill_reason]
           ,[recommended_steps],[artisan_name],[artisan_report_date],[youth_skills_acquired],[yn_skill_not_acquired_well],[skill_not_acquired_well]
           ,[skill_not_acquired_well_reason],[youth_report_date],[dyo_name],[dyo_review_date],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],2,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_skill_acquisition_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_skill_acquisition_tracking_delete] ON [dbo].[ben_apprenticeship_skill_acquisition_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_skill_acquisition_tracking_upload]
           ([asat_id],[review_date_from],[review_date_to],[wrd_id],[hhm_id],[trade_id],[module_id],[youth_acquire_not_acquire_skill_reason]
           ,[recommended_steps],[artisan_name],[artisan_report_date],[youth_skills_acquired],[yn_skill_not_acquired_well],[skill_not_acquired_well]
           ,[skill_not_acquired_well_reason],[youth_report_date],[dyo_name],[dyo_review_date],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],[trg_action],[district_id])

	       SELECT [asat_id],[review_date_from],[review_date_to],[wrd_id],[hhm_id],[trade_id],[module_id],[youth_acquire_not_acquire_skill_reason]
           ,[recommended_steps],[artisan_name],[artisan_report_date],[youth_skills_acquired],[yn_skill_not_acquired_well],[skill_not_acquired_well]
           ,[skill_not_acquired_well_reason],[youth_report_date],[dyo_name],[dyo_review_date],[usr_id_create],[usr_id_update],[usr_date_create]
           ,[usr_date_update],[ofc_id],3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion SQL
        }

        private static void Createlst_apprenticeship_trade(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_apprenticeship_trade')
                       CREATE TABLE [dbo].[lst_apprenticeship_trade](
	                    [trd_sid] [int] NOT NULL,
	                    [trd_id] [varchar](50) NOT NULL,
	                    [trd_name] [varchar](50) NOT NULL,
	                    [trd_order] [int] NOT NULL,
	                    [trd_active] [bit] NOT NULL,
	                    [lng_id] [varchar](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [date] NOT NULL,
	                    [usr_date_update] [date] NOT NULL,
                     CONSTRAINT [PK_lst_apprenticeship_trade] PRIMARY KEY CLUSTERED 
                    (
	                    [trd_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            //strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_apprenticeship_trade')
            //           ALTER TABLE [dbo].[lst_apprenticeship_trade] ADD  CONSTRAINT [DF_lst_apprenticeship_trade_usr_date_create]  DEFAULT (getdate()) FOR [usr_date_create]";
            //dbCon.ExecuteNonQuery(strSQL);

            //strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_apprenticeship_trade')
            //           ALTER TABLE [dbo].[lst_apprenticeship_trade] ADD  CONSTRAINT [DF_lst_apprenticeship_trade_usr_date_update]  DEFAULT (getdate()) FOR [usr_date_update]";
            //dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #endregion Triggers
            #endregion SQL
        }

        private static void Createlst_apprenticeship_trade_skills(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_apprenticeship_trade_skills')
                       CREATE TABLE [dbo].[lst_apprenticeship_trade_skills](
	                    [trs_sid] [int] NOT NULL,
	                    [trs_id] [nvarchar](50) NOT NULL,
	                    [trd_id] [varchar](50) NOT NULL,
	                    [trs_name] [nvarchar](500) NOT NULL,
	                    [trs_order] [int] NOT NULL,
	                    [trs_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_apprenticeship_trade_skills] PRIMARY KEY CLUSTERED 
                    (
	                    [trs_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #endregion SQL
        }

        private static void Createlst_linkages_coordinator(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_linkages_coordinator')
                        CREATE TABLE [dbo].[lst_linkages_coordinator](
	                    [lc_id] [varchar](50) NOT NULL,
	                    [lc_name] [varchar](500) NOT NULL,
	                    [lc_order] [int] NOT NULL,
	                    [lc_phone] [varchar](50) NOT NULL,
	                    [lc_email] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [lc_active] [bit] NOT NULL,
	                    [dst_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_linkages_coordinator] PRIMARY KEY CLUSTERED 
                    (
	                    [lc_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #endregion SQL
        }

        private static void Createben_ovc_viral_load(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_ovc_viral_load')
                       CREATE TABLE [dbo].[ben_ovc_viral_load](
	                    [vl_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [qrt_start_date] [date] NOT NULL,
	                    [qrt_end_date] [date] NOT NULL,
	                    [linc_id] [varchar](50) NOT NULL,
	                    [sw_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_ovc_viral_load] PRIMARY KEY CLUSTERED 
                    (
	                    [vl_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_ovc_viral_load_upload')
                        CREATE TABLE [dbo].[ben_ovc_viral_load_upload](
	                    [vl_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [vl_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [qrt_start_date] [date] NOT NULL,
	                    [qrt_end_date] [date] NOT NULL,
	                    [linc_id] [varchar](50) NOT NULL,
	                    [sw_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NULL,
                     CONSTRAINT [PK_ben_ovc_viral_load_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [vl_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_ovc_viral_load_member')
                        CREATE TABLE [dbo].[ben_ovc_viral_load_member](
	                    [vlm_id] [varchar](50) NOT NULL,
	                    [vl_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [hef_name] [varchar](50) NOT NULL,
	                    [art_number] [varchar](50) NOT NULL,
	                    [vl_eligible] [varchar](50) NOT NULL,
	                    [vl_done] [varchar](50) NOT NULL,
	                    [vl_date] [varchar](50) NOT NULL,
	                    [vl_nextdate] [date] NOT NULL,
	                    [suppressed] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                        CONSTRAINT [PK_ben_ovc_viral_load_member] PRIMARY KEY CLUSTERED 
                    (
	                    [vlm_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_ovc_viral_load_member_upload')
                       CREATE TABLE [dbo].[ben_ovc_viral_load_member_upload](
	                    [vlm_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [vlm_id] [varchar](50) NOT NULL,
	                    [vl_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [hef_name] [varchar](50) NOT NULL,
	                    [art_number] [varchar](50) NOT NULL,
	                    [vl_eligible] [varchar](50) NOT NULL,
	                    [vl_done] [varchar](50) NOT NULL,
	                    [vl_date] [varchar](50) NOT NULL,
	                    [vl_nextdate] [date] NOT NULL,
	                    [suppressed] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_ovc_viral_load_member_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [vlm_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            #region ben_ovc_viral_load
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_ovc_viral_load_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_ovc_viral_load_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_ovc_viral_load_insert] ON [dbo].[ben_ovc_viral_load] FOR INSERT
                        AS
                        BEGIN
                        INSERT INTO [dbo].[ben_ovc_viral_load_upload]
                        ([vl_id],[prt_id],[cso_id],[wrd_id],[hh_id],[qrt_start_date],[qrt_end_date],[linc_id],[sw_id],[usr_id_create],[usr_id_update]
                        ,[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
                        SELECT [vl_id],[prt_id],[cso_id],[wrd_id],[hh_id],[qrt_start_date],[qrt_end_date],[linc_id],[sw_id],[usr_id_create],[usr_id_update]
                        ,[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_ovc_viral_load_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_ovc_viral_load_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_ovc_viral_load_update] ON [dbo].[ben_ovc_viral_load] FOR UPDATE
                        AS
                        BEGIN
                        INSERT INTO [dbo].[ben_ovc_viral_load_upload]
                        ([vl_id],[prt_id],[cso_id],[wrd_id],[hh_id],[qrt_start_date],[qrt_end_date],[linc_id],[sw_id],[usr_id_create],[usr_id_update]
                        ,[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
                        SELECT [vl_id],[prt_id],[cso_id],[wrd_id],[hh_id],[qrt_start_date],[qrt_end_date],[linc_id],[sw_id],[usr_id_create],[usr_id_update]
                        ,[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_ovc_viral_load_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_ovc_viral_load_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_ovc_viral_load_delete] ON [dbo].[ben_ovc_viral_load] FOR DELETE
                        AS
                        BEGIN
                        INSERT INTO [dbo].[ben_ovc_viral_load_upload]
                        ([vl_id],[prt_id],[cso_id],[wrd_id],[hh_id],[qrt_start_date],[qrt_end_date],[linc_id],[sw_id],[usr_id_create],[usr_id_update]
                        ,[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
                        SELECT [vl_id],[prt_id],[cso_id],[wrd_id],[hh_id],[qrt_start_date],[qrt_end_date],[linc_id],[sw_id],[usr_id_create],[usr_id_update]
                        ,[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_ovc_viral_load

            #region ben_ovc_viral_load_member
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_ovc_viral_load_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_ovc_viral_load_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_ovc_viral_load_member_insert] ON [dbo].[ben_ovc_viral_load_member] FOR INSERT
                        AS
                        BEGIN
                        INSERT INTO [dbo].[ben_ovc_viral_load_member_upload]
                                   ([vlm_id],[vl_id],[hhm_id],[hef_name],[art_number],[vl_eligible],[vl_done],[vl_date],[vl_nextdate]
                                   ,[suppressed],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
                        SELECT [vlm_id],[vl_id],[hhm_id],[hef_name],[art_number],[vl_eligible],[vl_done],[vl_date],[vl_nextdate]
                                   ,[suppressed],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_ovc_viral_load_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_ovc_viral_load_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_ovc_viral_load_member_update] ON [dbo].[ben_ovc_viral_load_member] FOR UPDATE
                        AS
                        BEGIN
                        INSERT INTO [dbo].[ben_ovc_viral_load_member_upload]
                                   ([vlm_id],[vl_id],[hhm_id],[hef_name],[art_number],[vl_eligible],[vl_done],[vl_date],[vl_nextdate]
                                   ,[suppressed],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
                        SELECT [vlm_id],[vl_id],[hhm_id],[hef_name],[art_number],[vl_eligible],[vl_done],[vl_date],[vl_nextdate]
                                   ,[suppressed],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_ovc_viral_load_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_ovc_viral_load_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_ovc_viral_load_member_delete] ON [dbo].[ben_ovc_viral_load_member] FOR DELETE
                        AS
                        BEGIN
                        INSERT INTO [dbo].[ben_ovc_viral_load_member_upload]
                                   ([vlm_id],[vl_id],[hhm_id],[hef_name],[art_number],[vl_eligible],[vl_done],[vl_date],[vl_nextdate]
                                   ,[suppressed],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
                        SELECT [vlm_id],[vl_id],[hhm_id],[hef_name],[art_number],[vl_eligible],[vl_done],[vl_date],[vl_nextdate]
                                   ,[suppressed],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                        FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_ovc_viral_load_member
            #endregion Triggers
            #endregion SQL
        }


        private static void Createben_youth_training_completion(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_training_completion')
                       CREATE TABLE [dbo].[ben_youth_training_completion](
	                    [ytc_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [hhm_tel] [varchar](50) NOT NULL,
	                    [yfo_name] [varchar](50) NOT NULL,
	                    [y_adress] [varchar](4000) NOT NULL,
	                    [skills_learnt] [varchar](4000) NOT NULL,
	                    [skills_more_training] [varchar](4000) NOT NULL,
	                    [yn_id_graduate] [varchar](50) NOT NULL,
	                    [yn_id_graduate_no_reason] [varchar](4000) NOT NULL,
	                    [artisan_rating] [varchar](50) NOT NULL,
	                    [yn_id_fam_support] [varchar](50) NOT NULL,
                        [yn_id_fam_support_yes_how] [varchar](4000) NOT NULL,
	                    [yn_id_fam_support_no_reason] [varchar](4000) NOT NULL,
	                    [yn_id_training_challenges] [varchar](50) NOT NULL,
	                    [yn_id_training_challenges_yes_list] [varchar](4000) NOT NULL,
	                    [yn_id_earn_money] [varchar](50) NOT NULL,
	                    [yn_id_earn_money_yes_weekly_amt] [varchar](50) NOT NULL,
	                    [plan_after_training] [varchar](4000) NOT NULL,
	                    [youth_rate_attendance] [varchar](50) NOT NULL,
	                    [youth_rate_commitment] [varchar](50) NOT NULL,
	                    [youth_rate_participation] [varchar](50) NOT NULL,
	                    [youth_rate_comprehension] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [yn_id_retain_youth] [varchar](50) NOT NULL,
	                    [yn_id_retain_youth_no_recommend] [varchar](100) NOT NULL,
	                    [yn_id_open_own_biz] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                        CONSTRAINT [PK_ben_youth_training_completion] PRIMARY KEY CLUSTERED 
                    (
	                    [ytc_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_training_completion_upload')
                        CREATE TABLE [dbo].[ben_youth_training_completion_upload](
	                    [ytc_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [hhm_tel] [varchar](50) NOT NULL,
	                    [yfo_name] [varchar](50) NOT NULL,
	                    [y_adress] [varchar](4000) NOT NULL,
	                    [skills_learnt] [varchar](4000) NOT NULL,
	                    [skills_more_training] [varchar](4000) NOT NULL,
	                    [yn_id_graduate] [varchar](50) NOT NULL,
	                    [yn_id_graduate_no_reason] [varchar](4000) NOT NULL,
	                    [artisan_rating] [varchar](50) NOT NULL,
	                    [yn_id_fam_support] [varchar](50) NOT NULL,
                        [yn_id_fam_support_yes_how] [varchar](4000) NOT NULL,
	                    [yn_id_fam_support_no_reason] [varchar](4000) NOT NULL,
	                    [yn_id_training_challenges] [varchar](50) NOT NULL,
	                    [yn_id_training_challenges_yes_list] [varchar](4000) NOT NULL,
	                    [yn_id_earn_money] [varchar](50) NOT NULL,
	                    [yn_id_earn_money_yes_weekly_amt] [varchar](50) NOT NULL,
	                    [plan_after_training] [varchar](4000) NOT NULL,
	                    [youth_rate_attendance] [varchar](50) NOT NULL,
	                    [youth_rate_commitment] [varchar](50) NOT NULL,
	                    [youth_rate_participation] [varchar](50) NOT NULL,
	                    [youth_rate_comprehension] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [yn_id_retain_youth] [varchar](50) NOT NULL,
	                    [yn_id_retain_youth_no_recommend] [varchar](100) NOT NULL,
	                    [yn_id_open_own_biz] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_training_completion_skill_acquisition_tracking')
                        CREATE TABLE [dbo].[ben_youth_training_completion_skill_acquisition_tracking](
	                    [ytc_skill_id] [varchar](50) NOT NULL,
	                    [ytc_id] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [skill_id] [varchar](50) NOT NULL,
	                    [excellent_acquired_skr_id] [varchar](50) NOT NULL,
	                    [average_acquired_skr_id] [varchar](50) NOT NULL,
	                    [not_acquired_skr_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youth_training_completion_skill_acquisition_tracking] PRIMARY KEY CLUSTERED 
                    (
	                    [ytc_skill_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_training_completion_skill_acquisition_tracking_upload')
                       CREATE TABLE [dbo].[ben_youth_training_completion_skill_acquisition_tracking_upload](
	                    [ytc_skill_id] [varchar](50) NOT NULL,
	                    [ytc_id] [varchar](50) NOT NULL,
	                    [module_id] [varchar](50) NOT NULL,
	                    [skill_id] [varchar](50) NOT NULL,
	                    [excellent_acquired_skr_id] [varchar](50) NOT NULL,
	                    [average_acquired_skr_id] [varchar](50) NOT NULL,
	                    [not_acquired_skr_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            #region ben_youth_training_completion
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_completion_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_completion_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_completion_insert] ON [dbo].[ben_youth_training_completion] FOR INSERT
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_training_completion_upload] 
                            ([ytc_id],[prt_id],[cso_id],[wrd_id],[date],[hh_id],[hhm_id],[hhm_tel],[yfo_name],[y_adress],[skills_learnt],[skills_more_training]
                            ,[yn_id_graduate],[yn_id_graduate_no_reason],[artisan_rating],[yn_id_fam_support],[yn_id_fam_support_yes_how],[yn_id_fam_support_no_reason],[yn_id_training_challenges]
                            ,[yn_id_training_challenges_yes_list],[yn_id_earn_money],[yn_id_earn_money_yes_weekly_amt],[plan_after_training],[youth_rate_attendance]
                            ,[youth_rate_commitment],[youth_rate_participation],[youth_rate_comprehension],[module_id],[yn_id_retain_youth],[yn_id_retain_youth_no_recommend]
                            ,[yn_id_open_own_biz],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ytc_id],[prt_id],[cso_id],[wrd_id],[date],[hh_id],[hhm_id],[hhm_tel],[yfo_name],[y_adress],[skills_learnt],[skills_more_training]
                            ,[yn_id_graduate],[yn_id_graduate_no_reason],[artisan_rating],[yn_id_fam_support],[yn_id_fam_support_yes_how],[yn_id_fam_support_no_reason],[yn_id_training_challenges]
                            ,[yn_id_training_challenges_yes_list],[yn_id_earn_money],[yn_id_earn_money_yes_weekly_amt],[plan_after_training],[youth_rate_attendance]
                            ,[youth_rate_commitment],[youth_rate_participation],[youth_rate_comprehension],[module_id],[yn_id_retain_youth],[yn_id_retain_youth_no_recommend]
                            ,[yn_id_open_own_biz],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_completion_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_completion_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_completion_update] ON [dbo].[ben_youth_training_completion] FOR UPDATE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_training_completion_upload] 
                            ([ytc_id],[prt_id],[cso_id],[wrd_id],[date],[hh_id],[hhm_id],[hhm_tel],[yfo_name],[y_adress],[skills_learnt],[skills_more_training]
                            ,[yn_id_graduate],[yn_id_graduate_no_reason],[artisan_rating],[yn_id_fam_support],[yn_id_fam_support_yes_how],[yn_id_fam_support_no_reason],[yn_id_training_challenges]
                            ,[yn_id_training_challenges_yes_list],[yn_id_earn_money],[yn_id_earn_money_yes_weekly_amt],[plan_after_training],[youth_rate_attendance]
                            ,[youth_rate_commitment],[youth_rate_participation],[youth_rate_comprehension],[module_id],[yn_id_retain_youth],[yn_id_retain_youth_no_recommend]
                            ,[yn_id_open_own_biz],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ytc_id],[prt_id],[cso_id],[wrd_id],[date],[hh_id],[hhm_id],[hhm_tel],[yfo_name],[y_adress],[skills_learnt],[skills_more_training]
                            ,[yn_id_graduate],[yn_id_graduate_no_reason],[artisan_rating],[yn_id_fam_support],[yn_id_fam_support_yes_how],[yn_id_fam_support_no_reason],[yn_id_training_challenges]
                            ,[yn_id_training_challenges_yes_list],[yn_id_earn_money],[yn_id_earn_money_yes_weekly_amt],[plan_after_training],[youth_rate_attendance]
                            ,[youth_rate_commitment],[youth_rate_participation],[youth_rate_comprehension],[module_id],[yn_id_retain_youth],[yn_id_retain_youth_no_recommend]
                            ,[yn_id_open_own_biz],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_completion_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_completion_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_completion_delete] ON [dbo].[ben_youth_training_completion] FOR DELETE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_training_completion_upload] 
                            ([ytc_id],[prt_id],[cso_id],[wrd_id],[date],[hh_id],[hhm_id],[hhm_tel],[yfo_name],[y_adress],[skills_learnt],[skills_more_training]
                            ,[yn_id_graduate],[yn_id_graduate_no_reason],[artisan_rating],[yn_id_fam_support],[yn_id_fam_support_yes_how],[yn_id_fam_support_no_reason],[yn_id_training_challenges]
                            ,[yn_id_training_challenges_yes_list],[yn_id_earn_money],[yn_id_earn_money_yes_weekly_amt],[plan_after_training],[youth_rate_attendance]
                            ,[youth_rate_commitment],[youth_rate_participation],[youth_rate_comprehension],[module_id],[yn_id_retain_youth],[yn_id_retain_youth_no_recommend]
                            ,[yn_id_open_own_biz],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ytc_id],[prt_id],[cso_id],[wrd_id],[date],[hh_id],[hhm_id],[hhm_tel],[yfo_name],[y_adress],[skills_learnt],[skills_more_training]
                            ,[yn_id_graduate],[yn_id_graduate_no_reason],[artisan_rating],[yn_id_fam_support],[yn_id_fam_support_yes_how],[yn_id_fam_support_no_reason],[yn_id_training_challenges]
                            ,[yn_id_training_challenges_yes_list],[yn_id_earn_money],[yn_id_earn_money_yes_weekly_amt],[plan_after_training],[youth_rate_attendance]
                            ,[youth_rate_commitment],[youth_rate_participation],[youth_rate_comprehension],[module_id],[yn_id_retain_youth],[yn_id_retain_youth_no_recommend]
                            ,[yn_id_open_own_biz],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                            FROM deleted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_youth_training_completion

            #region ben_youth_training_completion_skill_acquisition_tracking
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_completion_skill_acquisition_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_completion_skill_acquisition_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_completion_skill_acquisition_tracking_insert] ON [dbo].[ben_youth_training_completion_skill_acquisition_tracking] FOR INSERT
                        AS
                        BEGIN
	                            INSERT INTO [dbo].[ben_youth_training_completion_skill_acquisition_tracking_upload]
                                ([ytc_skill_id],[ytc_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id],[not_acquired_skr_id],[usr_id_create],[usr_id_update]
                                ,[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ytc_skill_id],[ytc_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id],[not_acquired_skr_id],[usr_id_create],[usr_id_update]
                                ,[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_completion_skill_acquisition_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_completion_skill_acquisition_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_completion_skill_acquisition_tracking_update] ON [dbo].[ben_youth_training_completion_skill_acquisition_tracking] FOR UPDATE
                        AS
                        BEGIN
	                            INSERT INTO [dbo].[ben_youth_training_completion_skill_acquisition_tracking_upload]
                                ([ytc_skill_id],[ytc_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id],[not_acquired_skr_id],[usr_id_create],[usr_id_update]
                                ,[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ytc_skill_id],[ytc_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id],[not_acquired_skr_id],[usr_id_create],[usr_id_update]
                                ,[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_training_completion_skill_acquisition_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_training_completion_skill_acquisition_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_training_completion_skill_acquisition_tracking_delete] ON [dbo].[ben_youth_training_completion_skill_acquisition_tracking] FOR DELETE
                        AS
                        BEGIN
	                            INSERT INTO [dbo].[ben_youth_training_completion_skill_acquisition_tracking_upload]
                                ([ytc_skill_id],[ytc_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id],[not_acquired_skr_id],[usr_id_create],[usr_id_update]
                                ,[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [ytc_skill_id],[ytc_id],[module_id],[skill_id],[excellent_acquired_skr_id],[average_acquired_skr_id],[not_acquired_skr_id],[usr_id_create],[usr_id_update]
                                ,[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                            FROM deleted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_youth_training_completion_skill_acquisition_tracking
            #endregion Triggers
            #endregion SQL
        }

        private static void Createben_youth_assessment_scoring(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_assessment_scoring')
                       CREATE TABLE [dbo].[ben_youth_assessment_scoring](
	                    [yas_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [dt_ass_date] [date] NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [ttp_id] [varchar](50) NOT NULL,
	                    [ttps_id] [varchar](50) NOT NULL,
	                    [ys1_id] [varchar](50) NOT NULL,
	                    [ys2_id] [varchar](50) NOT NULL,
	                    [ys3_id] [varchar](50) NOT NULL,
	                    [ys4_id] [varchar](50) NOT NULL,
	                    [ys5_id] [varchar](50) NOT NULL,
	                    [ys6_id] [varchar](50) NOT NULL,
	                    [total_score] [varchar](50) NOT NULL,
	                    [youth_notes] [varchar](150) NOT NULL,
	                    [assessor_name] [varchar](50) NOT NULL,
	                    [date_assessor_sign] [date] NOT NULL,
	                    [approver_name] [varchar](50) NOT NULL,
	                    [date_approver_sign] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youth_assessment_scoring] PRIMARY KEY CLUSTERED 
                    (
	                    [yas_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_assessment_scoring_upload')
                        CREATE TABLE [dbo].[ben_youth_assessment_scoring_upload](
	                    [yas_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [dt_ass_date] [date] NOT NULL,
	                    [hh_id] [varchar](50) NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [ttp_id] [varchar](50) NOT NULL,
	                    [ttps_id] [varchar](50) NOT NULL,
	                    [ys1_id] [varchar](50) NOT NULL,
	                    [ys2_id] [varchar](50) NOT NULL,
	                    [ys3_id] [varchar](50) NOT NULL,
	                    [ys4_id] [varchar](50) NOT NULL,
	                    [ys5_id] [varchar](50) NOT NULL,
	                    [ys6_id] [varchar](50) NOT NULL,
	                    [total_score] [varchar](50) NOT NULL,
	                    [youth_notes] [varchar](150) NOT NULL,
	                    [assessor_name] [varchar](50) NOT NULL,
	                    [date_assessor_sign] [date] NOT NULL,
	                    [approver_name] [varchar](50) NOT NULL,
	                    [date_approver_sign] [date] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            #region ben_youth_training_completion
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_assessment_scoring_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_assessment_scoring_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_assessment_scoring_insert] ON [dbo].[ben_youth_assessment_scoring] FOR INSERT
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_assessment_scoring_upload]
	                        ([yas_id],[prt_id],[cso_id],[wrd_id],[dt_ass_date],[hh_id],[hhm_id],[ttp_id],[ttps_id],[ys1_id],[ys2_id]
	                        ,[ys3_id],[ys4_id],[ys5_id],[ys6_id],[total_score],[youth_notes],[assessor_name],[date_assessor_sign],[approver_name]
	                        ,[date_approver_sign],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [yas_id],[prt_id],[cso_id],[wrd_id],[dt_ass_date],[hh_id],[hhm_id],[ttp_id],[ttps_id],[ys1_id],[ys2_id]
	                        ,[ys3_id],[ys4_id],[ys5_id],[ys6_id],[total_score],[youth_notes],[assessor_name],[date_assessor_sign],[approver_name]
	                        ,[date_approver_sign],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],1,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_assessment_scoring_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_assessment_scoring_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_assessment_scoring_update] ON [dbo].[ben_youth_assessment_scoring] FOR UPDATE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_assessment_scoring_upload]
	                        ([yas_id],[prt_id],[cso_id],[wrd_id],[dt_ass_date],[hh_id],[hhm_id],[ttp_id],[ttps_id],[ys1_id],[ys2_id]
	                        ,[ys3_id],[ys4_id],[ys5_id],[ys6_id],[total_score],[youth_notes],[assessor_name],[date_assessor_sign],[approver_name]
	                        ,[date_approver_sign],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [yas_id],[prt_id],[cso_id],[wrd_id],[dt_ass_date],[hh_id],[hhm_id],[ttp_id],[ttps_id],[ys1_id],[ys2_id]
	                        ,[ys3_id],[ys4_id],[ys5_id],[ys6_id],[total_score],[youth_notes],[assessor_name],[date_assessor_sign],[approver_name]
	                        ,[date_approver_sign],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],2,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_assessment_scoring_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_assessment_scoring_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_assessment_scoring_delete] ON [dbo].[ben_youth_assessment_scoring] FOR DELETE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_assessment_scoring_upload]
	                        ([yas_id],[prt_id],[cso_id],[wrd_id],[dt_ass_date],[hh_id],[hhm_id],[ttp_id],[ttps_id],[ys1_id],[ys2_id]
	                        ,[ys3_id],[ys4_id],[ys5_id],[ys6_id],[total_score],[youth_notes],[assessor_name],[date_assessor_sign],[approver_name]
	                        ,[date_approver_sign],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],[trg_action],[district_id])
	                        SELECT [yas_id],[prt_id],[cso_id],[wrd_id],[dt_ass_date],[hh_id],[hhm_id],[ttp_id],[ttps_id],[ys1_id],[ys2_id]
	                        ,[ys3_id],[ys4_id],[ys5_id],[ys6_id],[total_score],[youth_notes],[assessor_name],[date_assessor_sign],[approver_name]
	                        ,[date_approver_sign],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id],3,[district_id]
                            FROM deleted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_youth_training_completion
            #endregion Triggers
            #endregion SQL
        }

        private static void Createlst_youth_assessment_scoring_parameters(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_youth_assessment_scoring_parameters')
                       CREATE TABLE [dbo].[lst_youth_assessment_scoring_parameters](
	                    [ya_score_id] [varchar](50) NOT NULL,
	                    [ya_score_name] [nvarchar](100) NOT NULL,
	                    [ya_score_order] [int] NOT NULL,
	                    [ya_score_value] [int] NOT NULL,
	                    [ya_score_active] [bit] NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #endregion SQL
        }


        private static void Createben_youth_tracer(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_tracer')
                       CREATE TABLE [dbo].[ben_youth_tracer](
	                    [ytr_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [fo_name] [varchar](100) NOT NULL,
	                    [ttp_received] [varchar](50) NOT NULL,
	                    [ttp_other] [varchar](50) NOT NULL,
	                    [employment_status] [varchar](50) NOT NULL,
	                    [yn_using_acquired_skills] [varchar](50) NOT NULL,
	                    [yn_using_acquired_skills_no_reason] [varchar](50) NOT NULL,
	                    [yn_market_available] [varchar](50) NOT NULL,
	                    [average_income] [varchar](50) NOT NULL,
	                    [formal_bussiness_sector] [varchar](50) NOT NULL,
	                    [formal_employment_search_period] [varchar](50) NOT NULL,
	                    [formal_current_job_challenges] [varchar](1000) NOT NULL,
	                    [self_bussiness_sector] [varchar](50) NOT NULL,
	                    [self_source_of_startup_capital] [varchar](300) NOT NULL,
	                    [sponsor_name] [varchar](100) NOT NULL,
	                    [startup_amt] [varchar](50) NOT NULL,
	                    [bussiness_setup_help_source] [varchar](50) NOT NULL,
	                    [bussiness_startup_duration] [varchar](50) NOT NULL,
	                    [occupation_before_business_startup] [varchar](50) NOT NULL,
	                    [bussiness_problems_faced] [varchar](1000) NOT NULL,
	                    [unemployed_reason] [varchar](100) NOT NULL,
	                    [unemployed_reason_other] [varchar](100) NOT NULL,
	                    [unemployment_action] [varchar](1000) NOT NULL,
	                    [yn_recommend_programme] [varchar](50) NOT NULL,
	                    [hhm_comments] [varchar](1000) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL,
                     CONSTRAINT [PK_ben_youth_tracer] PRIMARY KEY CLUSTERED 
                    (
	                    [ytr_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ben_youth_tracer_upload')
                        CREATE TABLE [dbo].[ben_youth_tracer_upload](
	                    [ytr_id] [varchar](50) NOT NULL,
	                    [prt_id] [varchar](50) NOT NULL,
	                    [cso_id] [varchar](50) NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [date] [date] NOT NULL,
	                    [hhm_id] [varchar](50) NOT NULL,
	                    [fo_name] [varchar](100) NOT NULL,
	                    [ttp_received] [varchar](50) NOT NULL,
	                    [ttp_other] [varchar](50) NOT NULL,
	                    [employment_status] [varchar](50) NOT NULL,
	                    [yn_using_acquired_skills] [varchar](50) NOT NULL,
	                    [yn_using_acquired_skills_no_reason] [varchar](50) NOT NULL,
	                    [yn_market_available] [varchar](50) NOT NULL,
	                    [average_income] [varchar](50) NOT NULL,
	                    [formal_bussiness_sector] [varchar](50) NOT NULL,
	                    [formal_employment_search_period] [varchar](50) NOT NULL,
	                    [formal_current_job_challenges] [varchar](1000) NOT NULL,
	                    [self_bussiness_sector] [varchar](50) NOT NULL,
	                    [self_source_of_startup_capital] [varchar](300) NOT NULL,
	                    [sponsor_name] [varchar](100) NOT NULL,
	                    [startup_amt] [varchar](50) NOT NULL,
	                    [bussiness_setup_help_source] [varchar](50) NOT NULL,
	                    [bussiness_startup_duration] [varchar](50) NOT NULL,
	                    [occupation_before_business_startup] [varchar](50) NOT NULL,
	                    [bussiness_problems_faced] [varchar](1000) NOT NULL,
	                    [unemployed_reason] [varchar](100) NOT NULL,
	                    [unemployed_reason_other] [varchar](100) NOT NULL,
	                    [unemployment_action] [varchar](1000) NOT NULL,
	                    [yn_recommend_programme] [varchar](50) NOT NULL,
	                    [hhm_comments] [varchar](1000) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
	                    [district_id] [nvarchar](50) NOT NULL
                    ) ON [PRIMARY]";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers

            #region ben_youth_training_completion
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_tracer_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_tracer_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_tracer_insert] ON [dbo].[ben_youth_tracer] FOR INSERT
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_tracer_upload]
                               ([ytr_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fo_name],[ttp_received],[ttp_other],[employment_status],[yn_using_acquired_skills]
                               ,[yn_using_acquired_skills_no_reason],[yn_market_available],[average_income],[formal_bussiness_sector],[formal_employment_search_period],[formal_current_job_challenges]
                               ,[self_bussiness_sector],[self_source_of_startup_capital],[sponsor_name],[startup_amt],[bussiness_setup_help_source],[bussiness_startup_duration],[occupation_before_business_startup]
                               ,[bussiness_problems_faced],[unemployed_reason],[unemployed_reason_other],[unemployment_action],[yn_recommend_programme] ,[hhm_comments],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
                               ,[trg_action],[district_id])
	                        SELECT [ytr_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fo_name],[ttp_received],[ttp_other],[employment_status],[yn_using_acquired_skills]
                               ,[yn_using_acquired_skills_no_reason],[yn_market_available],[average_income],[formal_bussiness_sector],[formal_employment_search_period],[formal_current_job_challenges]
                               ,[self_bussiness_sector],[self_source_of_startup_capital],[sponsor_name],[startup_amt],[bussiness_setup_help_source],[bussiness_startup_duration],[occupation_before_business_startup]
                               ,[bussiness_problems_faced],[unemployed_reason],[unemployed_reason_other],[unemployment_action],[yn_recommend_programme] ,[hhm_comments],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
                               ,1,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_tracer_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_tracer_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_tracer_update] ON [dbo].[ben_youth_tracer] FOR UPDATE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_tracer_upload]
                               ([ytr_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fo_name],[ttp_received],[ttp_other],[employment_status],[yn_using_acquired_skills]
                               ,[yn_using_acquired_skills_no_reason],[yn_market_available],[average_income],[formal_bussiness_sector],[formal_employment_search_period],[formal_current_job_challenges]
                               ,[self_bussiness_sector],[self_source_of_startup_capital],[sponsor_name],[startup_amt],[bussiness_setup_help_source],[bussiness_startup_duration],[occupation_before_business_startup]
                               ,[bussiness_problems_faced],[unemployed_reason],[unemployed_reason_other],[unemployment_action],[yn_recommend_programme] ,[hhm_comments],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
                               ,[trg_action],[district_id])
	                        SELECT [ytr_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fo_name],[ttp_received],[ttp_other],[employment_status],[yn_using_acquired_skills]
                               ,[yn_using_acquired_skills_no_reason],[yn_market_available],[average_income],[formal_bussiness_sector],[formal_employment_search_period],[formal_current_job_challenges]
                               ,[self_bussiness_sector],[self_source_of_startup_capital],[sponsor_name],[startup_amt],[bussiness_setup_help_source],[bussiness_startup_duration],[occupation_before_business_startup]
                               ,[bussiness_problems_faced],[unemployed_reason],[unemployed_reason_other],[unemployment_action],[yn_recommend_programme] ,[hhm_comments],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
                               ,2,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youth_tracer_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youth_tracer_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youth_tracer_delete] ON [dbo].[ben_youth_tracer] FOR DELETE
                        AS
                        BEGIN
	                        INSERT INTO [dbo].[ben_youth_tracer_upload]
                               ([ytr_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fo_name],[ttp_received],[ttp_other],[employment_status],[yn_using_acquired_skills]
                               ,[yn_using_acquired_skills_no_reason],[yn_market_available],[average_income],[formal_bussiness_sector],[formal_employment_search_period],[formal_current_job_challenges]
                               ,[self_bussiness_sector],[self_source_of_startup_capital],[sponsor_name],[startup_amt],[bussiness_setup_help_source],[bussiness_startup_duration],[occupation_before_business_startup]
                               ,[bussiness_problems_faced],[unemployed_reason],[unemployed_reason_other],[unemployment_action],[yn_recommend_programme] ,[hhm_comments],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
                               ,[trg_action],[district_id])
	                        SELECT [ytr_id],[prt_id],[cso_id],[wrd_id],[date],[hhm_id],[fo_name],[ttp_received],[ttp_other],[employment_status],[yn_using_acquired_skills]
                               ,[yn_using_acquired_skills_no_reason],[yn_market_available],[average_income],[formal_bussiness_sector],[formal_employment_search_period],[formal_current_job_challenges]
                               ,[self_bussiness_sector],[self_source_of_startup_capital],[sponsor_name],[startup_amt],[bussiness_setup_help_source],[bussiness_startup_duration],[occupation_before_business_startup]
                               ,[bussiness_problems_faced],[unemployed_reason],[unemployed_reason_other],[unemployment_action],[yn_recommend_programme] ,[hhm_comments],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update],[ofc_id]
                               ,3,[district_id]
                            FROM inserted
                        END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_youth_training_completion
            #endregion Triggers
            #endregion SQL
        }

        #endregion Create Tables

        #region Insert Data
        private static void InsertLstApprenticeshipPartner(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'Abaho  Peter', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'Abaho Comfort', 2, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3', N'Abubakare Mwebembezi ', 3, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4', N'Agaaba. J.Memorial Skills Training Centre', 4, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5', N'AGABA ALEX', 5, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6', N'Agaba Kenneth', 6, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7', N'Agasha Moreen', 7, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8', N'Ahebwe Aggrey', 8, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9', N'Aheebwa James', 9, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'10', N'Ahimbisibwe Deus', 10, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'11', N'Ahimbisibwe Edward', 11, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'12', N'AINE BIDSON', 12, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'13', N'Ainebyona Brian', 13, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'14', N'Ainebyona Elias', 14, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'15', N'Ainebyona Mercey', 15, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'16', N'Ainebyono Disan', 16, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'17', N'Akaijuka Benson', 17, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'18', N'Akampurira Prize ', 18, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'19', N'Akandwanaho Peace', 19, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'20', N'Akankwatsa Jaspa', 20, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'21', N'Akankwatsa Scovia ', 21, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'22', N'Akantusinguza Betty', 22, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'23', N'Akanyijuka Gad', 23, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'24', N'Akugizibwe Ronie', 24, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'25', N'Aliganyira Annet', 25, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'26', N'ALIMPA VERONIKA', 26, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'27', N'Alituha Adolf', 27, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'28', N'Amutuheire Ambrose ', 28, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'29', N'Angonza mathew', 29, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'30', N'ANTIE WINNIE', 30, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'31', N'ANYANGO DONANTO', 31, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'32', N'Arinaitwe Abdul', 32, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'33', N'Arinamukama Victor', 33, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'34', N'Aryanjuna Nicholas', 34, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'35', N'Asiimwe Daudi', 35, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'36', N'ASIIMWE PATRICK', 36, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'37', N'ASIO JOYCE', 37, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'38', N'Atashobya Dinnah', 38, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'39', N'ATUHAIRE KELLEN', 39, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'40', N'Atuhaire Moses', 40, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'41', N'Atuhairwe Yuster', 41, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'42', N'Atuheire Patricia', 42, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'43', N'ATUHEIRE SARAH', 43, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'44', N'Atukunzire Moreen ', 44, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'45', N'Atukwatse Ritah', 45, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'46', N'Atwebembeire Carolyne ', 46, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'47', N'Atwebembeire Vicent', 47, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'48', N'Ayebare Olivia', 48, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'49', N'BABURA JULIUSK APIMPI', 49, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'50', N'BAGUMA YAHAYA', 50, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'51', N'Baingana Mereth ', 51, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'52', N'BAINOMUGISHA MEDIUS', 52, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'53', N'BAKA VICENT BAGARUKAYO', 53, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'54', N'BALUKU AMON K', 54, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'55', N'BALUKU KYALIGONZA', 55, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'56', N'BALUKU SIMEON KALEGHIRE', 56, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'57', N'Bamwine Brian', 57, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'58', N'Barigye Lawrence ', 58, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'59', N'Barigye Peter', 59, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'60', N'Barisigara Vereriano', 60, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'61', N'Baryamwitsaki Issa', 61, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'62', N'Bashabirana Winnie', 62, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'63', N'BASIBARA SADICK', 63, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'64', N'Batamuriiza Agnes', 64, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'65', N'Batungwake Atanansi', 65, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'66', N'BBIRA HELLEN JAPAN', 66, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'67', N'Behangana Iddi ', 67, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'68', N'Bengyengyeta Mary', 68, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'69', N'Benson Bakashaba ', 69, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'70', N'BESIGOMWE PATRICK', 70, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'71', N'BIIRA AILOCE', 71, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'72', N'BIIRA BETTY M', 72, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'73', N'BIIRA EVANISA', 73, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'74', N'BIIRA HARIET', 74, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'75', N'BIIRA JACKLINE', 75, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'76', N'BIIRA MIRRIAM', 76, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'77', N'BIIRA TUSIIME ADRINE', 77, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'78', N'BITSWAMBA MUHINDO OBED', 78, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'79', N'Bitungwa Edson', 79, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'80', N'Bright William', 80, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'81', N'BULIMU GIDEON', 81, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'82', N'BWAMBALE BAMWITAYE', 82, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'83', N'BWAMBALE COSTANTINE', 83, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'84', N'BWERA AUTO MECHANICS', 84, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'85', N'Bwindi Vocational College', 85, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'86', N'Byabaganda Geofrey', 86, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'87', N'Byabashaija Ben ', 87, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'88', N'BYABASHIJA AUGUSTINE', 88, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'89', N'Byamugisha Innocent', 89, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'90', N'Byaruhanga Godfrey', 90, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'91', N'Byaruhanga Richard', 91, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'92', N'Chrismary Nyangoma', 92, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'93', N'COMMUNITY EMPOWERMENT AGENCY-KAMWENGE', 93, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'94', N'Denis Kanyonto ', 94, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'95', N'GRACE MUHEBWA', 95, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'96', N'Gumisiriza Benjamin', 96, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'97', N'Gumoshabe Dorcus', 97, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'98', N'Gumusiriza Julius', 98, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'99', N'Happy mohamood', 99, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'100', N'Hope Multi-purpose Inc.', 100, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'101', N'Ibaare Sub County ', 101, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'102', N'Igga Hamuza', 102, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'103', N'ITHUNGU AGNESS', 103, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'104', N'ITHUNGU IDA', 104, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'105', N'ITHUNGU OLIVA', 105, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'106', N'JEUDI MARGRET', 106, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'107', N'Kabagambe Michael', 107, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'108', N'Kabagambe Samuel', 108, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'109', N'Kabagira Alex', 109, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'110', N'Kabahweza Rosemary Karugaba', 110, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'111', N'KABARISA ANNET', 111, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'112', N'Kabatooro Allen', 112, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'113', N'Kabazoora Martha', 113, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'114', N'Kaberebere Steven', 114, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'115', N'Kabogo Jenipher', 115, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'116', N'KABUGHO ANITA', 116, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'117', N'KABUGHO ANTONET', 117, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'118', N'KABUGHO DOREEN', 118, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'119', N'KABUGHO ELLEN', 119, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'120', N'KABUGHO JAEL', 120, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'121', N'KABUGHO JOVIA', 121, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'122', N'KABUGHO ORIPA', 122, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'123', N'Kafuruka Jane', 123, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'124', N'KAGAMBO PATRICK', 124, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'125', N'kahindo denize', 125, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'126', N'Kahuma Margret', 126, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'127', N'Kaigo Hasifa', 127, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'128', N'Kajura Wellen', 128, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'129', N'Kakemutsya Jonan', 129, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'130', N'Kakuru Peter', 130, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'131', N'Kamakune Teddy', 131, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'132', N'KAMASANYU FRORENCE', 132, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'133', N'Kamugisha Apurinali', 133, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'134', N'Kamugisha Florence', 134, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'135', N'KAMUGISHA JOHN', 135, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'136', N'Kamuhanda Geofrey ', 136, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'137', N'KANGALHUMA AUGUSTINE', 137, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'138', N'Kanjumba Violet ', 138, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'139', N'KANSIIME JANE', 139, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'140', N'Kansiime M Harriet', 140, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'141', N'Kansime Esther', 141, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'142', N'KANYANTUYO SABINA', 142, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'143', N'Kanyesigye Joseline', 143, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'144', N'KANYONYOZI CRISTINE', 144, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'145', N'Kanyunyuzi Kevin', 145, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'146', N'Karegyeya Denis', 146, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'147', N'Karema Richard', 147, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'148', N'Kasande Agnes', 148, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'149', N'Kasande Margret', 149, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'150', N'Katabazi Sowedi', 150, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'151', N'Kato Moses', 151, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'152', N'Katoto James', 152, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'153', N'KATUBIRO WILSON', 153, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'154', N'Katuramu Grace', 154, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'155', N'KATURORE JOAN', 155, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'156', N'Katushabe Isa', 156, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'157', N'Katushabe Judith', 157, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'158', N'Katushabe Lilian', 158, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'159', N'Katusiime Devamary ', 159, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'160', N'Katusime Angeline', 160, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'161', N'Katusime Dick', 161, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'162', N'Kayiwa Moses', 162, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'163', N'KEMANZI JONAVIA', 163, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'164', N'Kemigisha Lesther ', 164, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'165', N'KEMIREMBE SCOVIA', 165, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'166', N'KEMPIHA JACKLINE', 166, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'167', N'Kiconco Emilly', 167, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'168', N'Kiconco Evalyne', 168, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'169', N'Kiconco Jovan', 169, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'170', N'Kintu Umar', 170, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'171', N'KINYAMBILA MOSES', 171, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'172', N'Kirabo Sharon', 172, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'173', N'Kirungi Robert', 173, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'174', N'KISEMBO ALONE', 174, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'175', N'KITALIBARA SUMAIRI', 175, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'176', N'KIYAGA ROBERT', 176, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'177', N'Kiyakunzire Hildah', 177, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'178', N'Kobusinge Lilian', 178, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'179', N'Kobusingye Usita', 179, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'180', N'Kobuzare Cleophas', 180, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'181', N'Komugisha Caroline', 181, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'182', N'Komuhangi Alice', 182, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'183', N'Komuhendo Gorret', 183, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'184', N'Komukama Beatrace', 184, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'185', N'Koshaba Scovia', 185, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'186', N'KULE HASSAN', 186, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'187', N'KULE KIZITO ', 187, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'188', N'KULE PETER', 188, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'189', N'Kusemererwa Alinda', 189, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'190', N'Kusemererwa Jackson Bashilu', 190, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'191', N'Kushemererwa Gladys', 191, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'192', N'Kyakimwa Naume', 192, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'193', N'KYAKIMWE ALLEN LHUME', 193, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'194', N'KYARISIIMA SOPHIA', 194, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'195', N'Kyohangirwe Mary', 195, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'196', N'Kyompaire Monic', 196, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'197', N'KYOMUGISHA VIOLA', 197, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'198', N'Kyomuhangi Christine', 198, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'199', N'Kyomuhangi Fransmary', 199, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'200', N'KYOMUHANGI PRASIDIA', 200, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'201', N'Kyomuhendo Charity', 201, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'202', N'KYOMUHENDO PATIENCE', 202, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'203', N'Kyomukama Agnes', 203, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'204', N'Kyoshabire Esther ', 204, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'205', N'MABIIRASAWADI', 205, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'206', N'MADVAN AMON', 206, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'207', N'Magambo Anthony', 207, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'208', N'MAGEZI STANELY', 208, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'209', N'MAGEZI TOPISTA', 209, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'210', N'Mahano John', 210, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'211', N'Margret Kahuma', 211, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'212', N'MASEREKA AMON', 212, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'213', N'MASEREKA CHARLES. M', 213, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'214', N'MASEREKA JOHN', 214, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'215', N'MASEREKA UZIAH', 215, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'216', N'MASEREKA YESE', 216, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'217', N'Masika Agness', 217, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'218', N'MASIKA ALICE', 218, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'219', N'MASIKA EVAJOAN', 219, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'220', N'MASIKA JOY', 220, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'221', N'MASIKA MARY', 221, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'222', N'MASIKA ZANI', 222, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'223', N'Matsiko Brian', 223, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'224', N'Mbaju Prutazio', 224, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'225', N'MBAJU SELEVEST', 225, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'226', N'MBAMBU LEVINA KIPURA', 226, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'227', N'MBAMBU PULIKERIA', 227, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'228', N'MBEETA JOHN', 228, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'229', N'MBUSA JOHN BIKOLHU', 229, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'230', N'MBUSA MUHAMMED', 230, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'231', N'Mpirirwe Joan Winfred', 231, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'232', N'Mpora Ronard', 232, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'233', N'Mubangizi Asuman', 233, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'234', N'MUGABE ALEX', 234, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'235', N'MUGABE ROBERT', 235, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'236', N'Mugabe Rosette', 236, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'237', N'mugara jovat', 237, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'238', N'MUGUME EPHRAIM MALIWAL', 238, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'239', N'Mugyenyi Mary', 239, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'240', N'Muhangi Gauston ', 240, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'241', N'Muhangi Moses', 241, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'242', N'MUHANGUZI EDISON', 242, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'243', N'MUHENDA SOLOMON', 243, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'244', N'Muhereza Kam', 244, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'245', N'Muhimbise Michael', 245, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'246', N'MUHINDO ALLEN', 246, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'247', N'MUHINDO GODFREY', 247, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'248', N'muhindo isaac', 248, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'249', N'MUHINDO JAMES', 249, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'250', N'MUHINDO NASON', 250, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'251', N'Muhoozi Naboth', 251, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'252', N'Muhumuza Bernard', 252, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'253', N'Muhwezi Andrew', 253, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'254', N'Mujuni Patrick ', 254, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'255', N'Mukama George', 255, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'256', N'MUKANIRWA JUMA', 256, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'257', N'Muko Abasi Bukenya', 257, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'258', N'MULINZI SCOVIA', 258, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'259', N'MUNAWALI ERIUS', 259, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'260', N'Munene Julius', 260, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'261', N'MUPIKA SADAYO ', 261, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'262', N'MURUNGI RONALD', 262, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'263', N'MUSIIMENTA JASTINA', 263, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'264', N'Musimenta Enock', 264, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'265', N'Musinguzi Bernard', 265, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'266', N'MUSINGUZI MOSES', 266, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'267', N'Musoke Kuzaifa', 267, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'268', N'MUSOKI EDDY', 268, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'269', N'MUSOKI ESTERI', 269, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'270', N'MUSOKI GENERIOUS', 270, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'271', N'MUSOKI JOVIA', 271, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'272', N'Mutabazi Justus ', 272, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'273', N'Mutambuzi Robinson', 273, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'274', N'Mutungi Jonas', 274, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'275', N'Mwebaze Gerald', 275, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'276', N'MWEBESA STEVEN', 276, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'277', N'MWESIGWA EDISON', 277, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'278', N'Mwesigwa Pison', 278, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'279', N'MWESIGYE GODWINE', 279, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'280', N'MWESIGYE VEIN', 280, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'281', N'Nabashambo Justine', 281, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'282', N'Najuwa Hanifa', 282, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'283', N'Nakalanzi Sarah', 283, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'284', N'NAKATE ANNAH', 284, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'285', N'Nakimmli Rose', 285, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'286', N'Nalongo Sanyu', 286, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'287', N'NALUKWAGO SHAKIRAH', 287, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'288', N'Namatovu Gloria', 288, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'289', N'Namuli Beatrace', 289, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'290', N'NANKYA MARY', 290, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'291', N'Nareeba Emmy', 291, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'292', N'Nasasira Chrispus', 292, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'293', N'Natukunda Allan', 293, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'294', N'NATUKUNDA IRENE', 294, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'295', N'Natukunda Ketra', 295, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'296', N'Natukunda Monica', 296, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'297', N'Natukunda Partrick', 297, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'298', N'Natukunda Rossettee', 298, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'299', N'Naturinda Osbert', 299, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'300', N'Naume Tushemerirwe ', 300, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'301', N'NDYAMUBA BANABAS', 301, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'302', N'Ngabirano Uditah', 302, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'303', N'NGOBYA NUHU', 303, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'304', N'Ninsiima Mercy', 304, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'305', N'NIWAGABA ALEX', 305, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'306', N'Niwagaba Daniel', 306, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'307', N'Niwagaba frank', 307, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'308', N'NIWAGABA FRED', 308, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'309', N'Niwagaba Robert ', 309, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'310', N'Niwamanya Brian', 310, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'311', N'NIWAMANYA WINNIE', 311, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'312', N'Niwugena Mary Clare', 312, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'313', N'NKONDO DEMIANO', 313, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'314', N'NSIMIRE  ONAN', 314, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'315', N'NTORINWE HARNINGTON', 315, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'316', N'Nuwagasha Zadock', 316, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'317', N'Nuwagira Merian', 317, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'318', N'Nuwagira Sezi', 318, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'319', N'NYAKATO JOY', 319, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'320', N'NYAKISHIKI BONY', 320, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'321', N'Nyakojo Laban', 321, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'322', N'NYAKUBAHO EVARISTO', 322, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'323', N'NYIRANSBA OLIVER', 323, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'324', N'Orishaba Doreen', 324, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'325', N'ORISHABA SHIAMAH', 325, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'326', N'PELUSI NANTONGO', 326, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'327', N'RUGAMBA SILAS', 327, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'328', N'Rujumba Isaya', 328, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'329', N'Rukund Ambrose', 329, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'330', N'Rukundo Monica', 330, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'331', N'Rumanyika Joshua', 331, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'332', N'Sabiti Peter', 332, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'333', N'SANANSIO SABITI', 333, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'334', N'Saturday Alex', 334, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'335', N'Sebigo Charles', 335, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'336', N'SEKAMATE EMMA', 336, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'337', N'SHADRACK SOI', 337, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'338', N'Sililo Fahad Oswald', 338, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'339', N'SINGELI ENOCK ', 339, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'340', N'Ssali Peterson Atukwatse', 340, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'341', N'Ssenkanji Yasin ', 341, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'342', N'Sseruwooza Richard', 342, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'343', N'THEMBO ABEL MAYOMBO', 343, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'344', N'Tomusange Vicent', 344, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'345', N'Tugume Afisah Mpagi', 345, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'346', N'Tugume Mugisa Robert', 346, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'347', N'Tugume Sam', 347, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'348', N'Tuhirwe Enid', 348, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'349', N'Tukahirwa Jackson', 349, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'350', N'Tukahirwa Nyansio', 350, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'351', N'TUKAMUREBA WILBROAD', 351, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'352', N'Tukamushaba Agnes', 352, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'353', N'TUKUNDANE PETER', 353, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'354', N'Tukwasibwe Ruth', 354, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'355', N'Tumuhamireho Ruth', 355, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'356', N'Tumuhamye Francis', 356, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'357', N'Tumuheirwe Ben ', 357, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'358', N'Tumuheirwe Rosette', 358, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'359', N'Tumuheise Justin', 359, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'360', N'Tumuhereze Keneth', 360, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'361', N'Tumuhimbise Fabiano', 361, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'362', N'Tumuhimbise Patience', 362, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'363', N'Tumuramye Fabith', 363, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'364', N'Tumuranye Catherine', 364, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'365', N'Tumushabe Aisha', 365, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'366', N'Tumusiime David', 366, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'367', N'Tumusiime Naoume', 367, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'368', N'TUMUSIME EDSON', 368, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'369', N'Tumwesigye Umaru', 369, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'370', N'Tumwijukye Caleb', 370, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'371', N'TUMWIJUKYE DONAS', 371, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'372', N'Turyaguma George', 372, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'373', N'Turyahabwe Amos', 373, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'374', N'Turyahabwe Chrias', 374, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'375', N'Turyasiima Beatrice', 375, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'376', N'Turyasingura Fidelis', 376, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'377', N'Turyhebwa Stellah', 377, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'378', N'Tushabe Edvinah', 378, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'379', N'Tushemerirwe Dorothy', 379, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'380', N'Tusiime Monica', 380, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'381', N'Tusingwire Agatha', 381, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'382', N'TUSINGWIRE BONEKONSIRA', 382, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'383', N'Tusingwire Jacenta', 383, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'384', N'Tuwmine Winnie', 384, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'385', N'TWESIGYE JOSEPH', 385, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'386', N'TWESIGYE PAUL', 386, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'387', N'Twinamatsiko Godwin', 387, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'388', N'Twinomugisha Gerald', 388, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'389', N'Twinomugisha Joab ', 389, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'390', N'Vumiriya Elizabeth Susan ', 390, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'391', N'WALUSIMBI SHABAN', 391, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'392', N'YAFESI KATONO', 392, 1, N'1', N'1', GETDATE(), GETDATE()) 

                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'394',N'Zawedde Salimah',394,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'395',N'Musiige Abdul',395,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'396',N'Agnes Nabisubi',396,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'397',N'Oliver Alibayogeire',397,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'398',N'Mariam Babirye',398,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'399',N'Betty Nakasi',399,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'400',N'Faith Bukirwa',400,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'401',N'Dello Motors Ltd',401,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'402',N'Nabaterega Juliet',402,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'403',N'Kiyingi Kenneth',403,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'404',N'Francis Kisomose',404,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'405',N'Mpaata Simon',405,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'406',N'Micheal Mubiru',406,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'407',N'Mukalu Yunusu',407,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'408',N'Cissy Nabbuto',408,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'409',N'Prossy Nakanjako',409,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'410',N'Syvia Nakibinge',410,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'411',N'Umar Nsubuga',411,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'412',N'Milly Okongo',412,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'413',N'Abdul Ssenyonga',413,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'414',N'Ajilo Rosemary',414,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'415',N'Akirapa Juliet',415,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'416',N'Akugisibwe Irene',416,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'417',N'Isiko Robert',417,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'418',N'Kibaale Phidous',418,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'419',N'Kyasa John',419,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'420',N'Lubega Steven',420,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'421',N'Mukiibi Dirisa',421,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'422',N'Nabbaka Jamidah Yiga',422,1, N'1', N'1', GETDATE(),GETDATE())         
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'423',N'Nakayiza Florence',423,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'424',N'Nakazzi Ann',424,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'425',N'Nankanja Priscilah',425,1, N'1', N'1', GETDATE(),GETDATE())    
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'426',N'Nantale Bushrah',426,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'427',N'Nantubwe Shadia',427,1, N'1', N'1', GETDATE(),GETDATE())
                INSERT INTO[dbo].[lst_apprenticeship_partner]([apt_id],[apt_name],[apt_order],[apt_active],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES(N'428',N'Ochieng Florence',428,1, N'1', N'1', GETDATE(),GETDATE())";


            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstCSO(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO001', N'The AIDs Support Organisation TASO', N'TASO', 1, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO002', N'Intergrated community based inniative (ICOBI)', N'ICOBI', 2, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO003', N'Action for Behavioural Change', N'ABC', 3, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO004', N'Kibale District Civil Society Organisation (KDCS)', N'KDCS', 4, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO005', N'Friends of Christ Revival Ministry (FOCREVE)', N'FOCREVE', 5, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO006', N'Literacy Action and Development Agency', N'LADA', 6, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO007', N'Intergrated Development Options (IDO)', N'IDO', 7, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO008', N'Environmental Conversation and Agricultural Enhancemnet Uganda (ECO-AGRIC Uganda)', N'ECO-AGRIC', 8, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO009', N'Ankole Private Sector Promotion Center (APROCEL)', N'APROCEL', 9, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO010', N'Caritas Kasese', N'Caritas-K', 10, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO011', N'Reach the youth', N'RTY', 11, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO012', N'Send A Cow Uganda (SACU)', N'SACU', 12, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO013', N'South Eastern Private Promotion Entreprise', N'SEPSEL', 13, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO018', N'Community Volunteer Initiative for Development', N'COVOID', 14, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO019', N'Community Volunteer Initiative for Development', N'COVOID', 15, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO016', N'Agency for Coorperation and Research in Development', N'ACORD', 16, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO017', N'ROM', N'ROM', 17, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLst_linkages_coordinator(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('1','Muhoozi Wilsi',1,'772886852','wmuhoozi@gmail.com','CSO002',1,'1','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('2','Akol Florence',2,'772321608','florenceojokopio@gmail.com','CSO001',1,'2','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('3','Katungye Dennis',3,'772945977','katungyed@yahoo.com','CSO002',1,'4','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('4','Namanya Gift',4,'783909146','giftnamanya@gmail.com','CSO002',1,'5','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('5','Kembabazi Evelyn',5,'775703910','Ekembabazi.ke@gmail.com','CSO006',1,'7','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('6','Byamugisha Tanazio',6,'782294914','Byamugishat.kcson@gmail.com','CSO004',1,'9','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('7','Twinomujuni Aaron',7,'774113257','twinoaron@gmail.com','CSO002',1,'10','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('8','Maimuna Naluyima',8,'777059680','maimunanarwima@gmail.com','CSO004',1,'11','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('9','Akori Christine',9,'774210645','AkoriChristine@yahoo.com','CSO001',1,'13','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('10','Oshabahebwa Opherous',10,'787788963','opherousone@gmail.com','CSO001',1,'15','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('12','Mwongyera Varias',12,'783660718','Mwongyerav@gmail.com','CSO002',1,'16','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('13','Omony Emmanuel',13,'772359672','Lamobrf2016@gmail.com','CSO001',1,'17','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('14','Nyesigamukama Alex',14,'784020702','nyejigamulkamaalexa@gmail.com','CSO019',1,'14','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('15','Aryatuha Pula',15,'772622875','aryatuhapaula@gmail.com','CSO016',1,'19','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('16','Ronald Nuwahereza',16,'782541133','Ronaldnuwa256@gmail.com','CSO017',1,'12','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('17','Nakigudde Alice',17,'700233149','Alice2009@gmail.com','CSO018',1,'21','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('18','Kobushinge Annet',18,'89860951','kobzannet@yahoo.com','CSO018',1,'20','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('19','NATWIJUKA DIID',19,'774895026','natwijukadiidi@gmail.com','CSO004',1,'18','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('20','IGURU DANIEL',20,'782711572','','CSO004',1,'3','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('21','IGURU DANIEL',21,'782711572','','CSO004',1,'22','1','1','2018-07-19','2018-07-19')
            INSERT INTO [dbo].[lst_linkages_coordinator]([lc_id],[lc_name],[lc_order],[lc_phone],[lc_email],[cso_id],[lc_active],[dst_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update]) VALUES('22','Namanya Gift ',22,'702850352','','CSO002',1,'24','1','1','2018-07-19','2018-07-19')";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDisabilityType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_disability_type] ON 
                    INSERT [dbo].[lst_disability_type] ([dtp_sid], [dtp_id], [dtp_name], [dtp_order], [dtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'MD', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_disability_type] ([dtp_sid], [dtp_id], [dtp_name], [dtp_order], [dtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'PD', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_disability_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDistrict(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            strSQL = "DELETE FROM [dbo].[lst_district]";
            dbCon.ExecuteNonQuery(strSQL);

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_district] ON 
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'BUSHENYI', 1, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'GOMBA', 2, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'HOIMA', 3, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'ISINGIRO', 4, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'KABALE', 5, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'KAMWENGE', 6, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'KANUNGU', 7, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'KASESE', 8, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'KIBAALE', 9, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'KIRUHURA', 10, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'11', N'KYENJOJO', 11, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (12, N'12', N'LUWERO', 12, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (13, N'13', N'MITYANA', 13, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (14, N'14', N'NTUNGAMO', 14, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (15, N'15', N'RAKAI', 15, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (16, N'16', N'RUKUNGIRI', 16, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (17, N'17', N'WAKISO', 17, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (18, N'18', N'IBANDA', 18, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (19, N'19', N'MBARARA', 19, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (20, N'20', N'SHEEMA', 20, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (21, N'21', N'MITOOMA', 21, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (22, N'22', N'KIKUUBE', 22, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (23, N'23', N'KYOTERA', 23, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (24, N'24', N'RUKIGA', 24, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_district] ([dst_sid], [dst_id], [dst_name], [dst_order], [dst_active], [rgn_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (25, N'25', N'KAGADI', 25, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_district] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsPartnerType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_partner_type] ON 
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1-Husband', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2-Boyfriend', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3-Casual/Occasional friend', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'4-Client', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'5-Bodaboda man', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'6-Fisher folk', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'7-Cattle Farmer', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'Other', N'8-Other specify', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_dreams_partner_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsRecordType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_record_type] ON 
                    INSERT [dbo].[lst_dreams_record_type] ([drt_sid], [drt_id], [drt_name], [drt_order], [drt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'HTC Registration', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_record_type] ([drt_sid], [drt_id], [drt_name], [drt_order], [drt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Partner Tracking', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_record_type] ([drt_sid], [drt_id], [drt_name], [drt_order], [drt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'SINOVUYO Missed Sessions', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_record_type] ([drt_sid], [drt_id], [drt_name], [drt_order], [drt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Stepping Stones Missed Sessions', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_dreams_record_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_service] ON 																																																   
                    INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1. HCT', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2. VMMC', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3. Condoms', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'4. HIV care services', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_dreams_service] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsServiceOther(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_service_other] ON 	
	                INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1-Stepping stones', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2-SASA!', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3-SINOVUYO', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'4-Expanded and improved contraceptive mix', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'5-HTC', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'6-Post violence care', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'7-Cash transfers', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'8-Condom promotion and provision', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'9-Educational subsidies', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'10-Combined Socio-Economic Approaches', 10, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                SET IDENTITY_INSERT [dbo].[lst_dreams_service_other] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsSessionAction(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_session_action] ON 																																																   
	                INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1. Call Again', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2. Engage peer', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3. Agreed to come next time', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'4. Drop from program', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'Other', N'5. Other (specify)', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					SET IDENTITY_INSERT [dbo].[lst_dreams_session_action] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsSessionFollowup(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup] ON 																																																   
	                INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1. Away working', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2. Away in School', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3. Refused', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'4. Visiting', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'5. Out-migrated (left sub-county)', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'6. Dead', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'Other', N'7. Other (specify)', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
	                SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstDreamsSessionFollowupMethod(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup_method] ON 																																																   
	                INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1. Phone call', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
					INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2. Peer methods', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3. Home Visits', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'Other', N'4. Other specify', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
					SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup_method] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstEducationLevel(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_education_level] ON 
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Nursery', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Primary 1', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Primary 2', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Primary 3', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Primary 4', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Primary 5', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Primary 6', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Primary 7', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'Senior 1', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'Senior 2', 10, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'11', N'Senior 3', 11, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (12, N'12', N'Senior 4', 12, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (13, N'13', N'Senior 5', 13, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (14, N'14', N'Senior 6', 14, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (15, N'15', N'Tertiary', 15, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (16, N'16', N'Vocational', 16, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())                    
                    SET IDENTITY_INSERT [dbo].[lst_education_level] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstEducationStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_education_status] ON 
                    INSERT [dbo].[lst_education_status] ([est_sid], [est_id], [est_name], [est_order], [est_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'In School', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_education_status] ([est_sid], [est_id], [est_name], [est_order], [est_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Out of School', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_education_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstEntryType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_entry_type] ON 
                    INSERT [dbo].[lst_entry_type] ([etp_sid], [etp_id], [etp_name], [etp_order], [etp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Community', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_entry_type] ([etp_sid], [etp_id], [etp_name], [etp_order], [etp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Facility', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_entry_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstFacility(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_facility] ([flt_id], [flt_name], [flt_order], [flt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'flt001', N'Facility 01', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_facility] ([flt_id], [flt_name], [flt_order], [flt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'flt002', N'Facility 02', 2, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_facility] ([flt_id], [flt_name], [flt_order], [flt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'flt003', N'Facility 03', 3, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_facility] ([flt_id], [flt_name], [flt_order], [flt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'flt004', N'Facility 04', 4, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_facility] ([flt_id], [flt_name], [flt_order], [flt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'flt005', N'Facility 05', 5, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstFinancialSupportType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_financial_support_type] ON 
                    INSERT [dbo].[lst_financial_support_type] ([fst_sid], [fst_id], [fst_name], [fst_order], [fst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Financial support', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_financial_support_type] ([fst_sid], [fst_id], [fst_name], [fst_order], [fst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Material support', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_financial_support_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstFinancialYear(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_financial_year] ([fy_id], [fy_name], [fy_order], [fy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'2016 - 2017', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_financial_year] ([fy_id], [fy_name], [fy_order], [fy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'2015 - 2016', 2, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstGBVType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_gbv_type] ON 																																																   
	                INSERT [dbo].[lst_gbv_type] ([gbv_sid], [gbv_id], [gbv_name], [gbv_order], [gbv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1-Physical', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                INSERT [dbo].[lst_gbv_type] ([gbv_sid], [gbv_id], [gbv_name], [gbv_order], [gbv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2-Sexual', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                INSERT [dbo].[lst_gbv_type] ([gbv_sid], [gbv_id], [gbv_name], [gbv_order], [gbv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3-Psychological', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                SET IDENTITY_INSERT [dbo].[lst_gbv_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstGender(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_gender] ON 
                    INSERT [dbo].[lst_gender] ([gnd_sid], [gnd_id], [gnd_name], [gnd_order], [gnd_active], [lng_id], [UserId_create], [UserId_update], [User_date_create], [User_date_update]) VALUES (1, N'm26e435b-1478-4978-aad5-58c3677a1f70', N'Male', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_gender] ([gnd_sid], [gnd_id], [gnd_name], [gnd_order], [gnd_active], [lng_id], [UserId_create], [UserId_update], [User_date_create], [User_date_update]) VALUES (2, N'f05d3f3c-9aac-4f12-b0cd-1c4ae9294da3', N'Female', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_gender] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstHIVStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_hiv_status] ON 
                    INSERT [dbo].[lst_hiv_status] ([hst_sid], [hst_id], [hst_name], [hst_order], [hst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'+', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_hiv_status] ([hst_sid], [hst_id], [hst_name], [hst_order], [hst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'-', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_hiv_status] ([hst_sid], [hst_id], [hst_name], [hst_order], [hst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'?', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_hiv_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstHonorific(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_honorific] ON 
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'0', N'Dr. (Mr.)', 0, 1, N'EN', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'1', N'Mr.', 2, 1, N'EN', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'Mrs.', 3, 1, N'EN', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'3', N'Ms.', 4, 1, N'EN', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'4', N'Prof. (Mr.)', 5, 1, N'EN', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'347e6269-8689-4e9f-9b24-aa2c2f4c5d49', N'Dr. (Ms.)', 1, 1, N'EN', N'5f5db4d1-f1ce-4233-8f6b-453685a5de3b', N'5f5db4d1-f1ce-4233-8f6b-453685a5de3b', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_honorific] ([hnr_sid], [hnr_id], [hnr_name], [hnr_order], [hnr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'd006ea5a-e453-4799-abe9-a4a73ae4bfe2', N'Prof. (Ms.)', 6, 1, N'EN', N'5f5db4d1-f1ce-4233-8f6b-453685a5de3b', N'5f5db4d1-f1ce-4233-8f6b-453685a5de3b', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_honorific] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstHouseholdStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_household_status] ON 
                    INSERT [dbo].[lst_household_status] ([hhs_sid], [hhs_id], [hhs_name], [hhs_order], [hhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Active', 1, 1, N'EN', N'1', N'1', CAST(N'2017-03-13T13:25:30.473' AS DateTime), CAST(N'2017-03-13T13:25:30.473' AS DateTime))
                    INSERT [dbo].[lst_household_status] ([hhs_sid], [hhs_id], [hhs_name], [hhs_order], [hhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'0', N'InActive', 2, 1, N'EN', N'1', N'1', CAST(N'2017-03-13T13:25:30.473' AS DateTime), CAST(N'2017-03-13T13:25:30.473' AS DateTime))
                    INSERT [dbo].[lst_household_status] ([hhs_sid], [hhs_id], [hhs_name], [hhs_order], [hhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'Graduated', 3, 1, N'EN', N'1', N'1', CAST(N'2018-06-25T13:40:35.340' AS DateTime), CAST(N'2018-06-25T13:40:35.340' AS DateTime))
                    INSERT [dbo].[lst_household_status] ([hhs_sid], [hhs_id], [hhs_name], [hhs_order], [hhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'3', N'Transferred to another location', 4, 1, N'EN', N'1', N'1', CAST(N'2018-06-25T13:40:35.343' AS DateTime), CAST(N'2018-06-25T13:40:35.343' AS DateTime))
                    INSERT [dbo].[lst_household_status] ([hhs_sid], [hhs_id], [hhs_name], [hhs_order], [hhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'4', N'Exited at will', 5, 1, N'EN', N'1', N'1', CAST(N'2018-06-25T13:40:35.347' AS DateTime), CAST(N'2018-06-25T13:40:35.347' AS DateTime))
                    INSERT [dbo].[lst_household_status] ([hhs_sid], [hhs_id], [hhs_name], [hhs_order], [hhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'5', N'Lost to follow up', 6, 1, N'EN', N'1', N'1', CAST(N'2018-06-25T13:40:35.350' AS DateTime), CAST(N'2018-06-25T13:40:35.350' AS DateTime))
                    SET IDENTITY_INSERT [dbo].[lst_household_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstHouseholdStatusReason(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_household_status_reason] ON 
                    INSERT [dbo].[lst_household_status_reason] ([hhsr_sid], [hhsr_id], [hhsr_name], [hhsr_order], [hhsr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Graduated', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_household_status_reason] ([hhsr_sid], [hhsr_id], [hhsr_name], [hhsr_order], [hhsr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Lost to follow up', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_household_status_reason] ([hhsr_sid], [hhsr_id], [hhsr_name], [hhsr_order], [hhsr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Shifted outside  coverage area', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_household_status_reason] ([hhsr_sid], [hhsr_id], [hhsr_name], [hhsr_order], [hhsr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'Other', N'Other', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_household_status_reason] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstIncomeContributor(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_income_contributor] ON 
                    INSERT [dbo].[lst_income_contributor] ([icc_sid], [icc_id], [icc_name], [icc_order], [icc_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Child', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_income_contributor] ([icc_sid], [icc_id], [icc_name], [icc_order], [icc_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Parent', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_income_contributor] ([icc_sid], [icc_id], [icc_name], [icc_order], [icc_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Grand Parent', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_income_contributor] ([icc_sid], [icc_id], [icc_name], [icc_order], [icc_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Relatives/others', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_income_contributor] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstIncomeSource(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_income_source] ON 
                    INSERT [dbo].[lst_income_source] ([ics_sid], [ics_id], [ics_name], [ics_order], [ics_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Casual Labour', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_income_source] ([ics_sid], [ics_id], [ics_name], [ics_order], [ics_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Formal Job/Business', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_income_source] ([ics_sid], [ics_id], [ics_name], [ics_order], [ics_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Informal Job', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_income_source] ([ics_sid], [ics_id], [ics_name], [ics_order], [ics_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Remittance/ others', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_income_source] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstInstitution(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'Abaana ministries Uganda', 1, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'10', N'Amahoro children''s Centre', 10, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'100', N'KOFS', 100, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'101', N'KOINONIA MINISTRIES', 101, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'102', N'KOTONY', 102, 1, N'10', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'103', N'Kwagala Kwakatonda', 103, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'104', N'Kyasira Home of Hope', 104, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'105', N'Lake Victoria Community Based Care', 105, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'106', N'Life child initiatives (LICHI)', 106, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'107', N'Lindiner Foundation Uganda', 107, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'108', N'Live it up Uganda (Jjajja Nakijoba)', 108, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'109', N'Loving  one by one Ministries (new creation family Home)', 109, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'11', N'Ambassador of Hope-SCHOOL', 11, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'110', N'Loving Hands Orphanage', 110, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'111', N'L''sperance children''s Village', 111, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'112', N'Lugo Orphanage', 112, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'113', N'Maama Catherine Children''s Home', 113, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'114', N'Malayaka House Orphanage', 114, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'115', N'Mengo Youth development Link', 115, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'116', N'Mercy Children Care Ministry', 116, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'117', N'Mercy Children Missionaries', 117, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'118', N'Mercy Home of Children', 118, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'119', N'Milly nabanja Children''s home', 119, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'12', N'Another Hope Children''s Ministry', 12, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'120', N'Mirembe church children''s home', 120, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'121', N'Mityana Joy Child Development Centre', 121, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'122', N'Mityana Orphanage Primary and Vocational School', 122, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'123', N'Miyana Child Development Centre', 123, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'124', N'Musica para salvar vidas - Music to save lives', 124, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'125', N'Mustard Seed Children Home', 125, 1, N'3', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'126', N'Muzinda orphanage / positive clients', 126, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'127', N'Namutamba Rehabilitation Centre', 127, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'128', N'New Hope Child Care Ministries', 128, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'129', N'New Life Children Centre', 129, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'13', N'Another Life Internationa', 13, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'130', N'New life Hope Aids orphans child care ministry', 130, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'131', N'Nikibasika  Development Programme', 131, 1, N'8', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'132', N'Nkumba Children''s Home / Uganda  Orphanage relief Fund', 132, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'133', N'Nzirambi Children Orphanage', 133, 1, N'8', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'134', N'Oasis Children''s Home', 134, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'135', N'Oasis of Children''s Home / God''s temple', 135, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'136', N'Orphans Deliverance Consult', 136, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'137', N'Our laday of peace children''s ark', 137, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'138', N'Peace Transition Centre', 138, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'139', N'Purpose Uganda Babies Home', 139, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'14', N'BBIRA Childern''s village (Watoto child care Ministries)', 14, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'140', N'Queen Esther Palace Children''s Transition Centre(AFC)(Closed)', 140, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'141', N'Rafiki African Ministries', 141, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'142', N'Ranch on jesus orphanage', 142, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'143', N'Rising up Hope', 143, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'144', N'Salem Missions', 144, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'145', N'Share the love children''s Home', 145, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'146', N'SHEPHERD CENTRE', 146, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'147', N'Sos children''s village - kakira', 147, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'148', N'Sozo  children''s  intrenational (house1)', 148, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'149', N'sozo  children''s  intrenational (house11)', 149, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'15', N'Bethany Babies Home / feed his lamds', 15, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'150', N'St mary''s Kevin  orphanage centre', 150, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'151', N'St. Kizito Nandere', 151, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'152', N'St. Noah''s Family', 152, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'153', N'Stand Tall Centre', 153, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'154', N'Stephen Jota Children Centre', 154, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'155', N'Sun rise village', 155, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'156', N'Suubi Africa', 156, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'157', N'Suubi Children''s Home', 157, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'158', N'Suubi Project', 158, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'159', N'T-cariad - victory chid care project', 159, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'16', N'Bethel Orphange', 16, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'160', N'Telemwa amazing garce and orphanage', 160, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'161', N'The  Rafiki Foundation', 161, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'162', N'The ford house', 162, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'163', N'THE JAMES DUNN HOUSE OF HOPE', 163, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'164', N'THE KASA PROGRAMME', 164, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'165', N'THE PEACE CENTRE', 165, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'166', N'Tuddabujja Half way home  Retruck uganda', 166, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'167', N'TWINOMUJUNI ORPHANAGE', 167, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'168', N'Uganda Home of hope foundation', 168, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'169', N'Uncle Ben''s Home', 169, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'17', N'Bethel House Orphange', 17, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'170', N'Universal blessed hope', 170, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'171', N'UWESO - Masuliita Children''s village', 171, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'172', N'Wamikisa Youth Centre', 172, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'173', N'Watoto child care Ministries - Bbira Children''s Village (Watoto) Homes', 173, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'174', N'Will''s orphans and disabled Uganda', 174, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'18', N'Birungi Children''s Home', 18, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'19', N'BLUE HOUSE', 19, 1, N'10', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'ABBA House children Home', 2, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'20', N'BREAD OF LIFE', 20, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'21', N'Bridge FOR PEACE CHILDREN Childrens Home', 21, 1, N'8', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'22', N'BRIDGE HOPE', 22, 1, N'16', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'23', N'Bright Futures children''s Home', 23, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'24', N'Bright Kids Uganda (Formally Sun rise Uganda)', 24, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'25', N'Bringing Hope to the Family', 25, 1, N'11', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'26', N'BUCENCE', 26, 1, N'16', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'27', N'Bulamu children''s villages', 27, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'28', N'Burden Bearers Orphans Care', 28, 1, N'11', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'29', N'Busunju Child Development Centre', 29, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3', N'Abdul Kadiri', 3, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'30', N'Butundu Orphange', 30, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'31', N'Bweya children''s Home  lnte(BCHI)', 31, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'32', N'Canana children''s Home', 32, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'33', N'Chat House', 33, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'34', N'Cherish Uganda', 34, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'35', N'Child and life Mission (CALM)', 35, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'36', N'Child and life mission / Good samaritan children''s Home', 36, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'37', N'Child Mission Uganda', 37, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'38', N'Childline Uganda (CBO)', 38, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'39', N'Children of Grace', 39, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4', N'Abetavu Child Devleopment Organisation', 4, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'40', N'Children of Grace Orphanage Centre', 40, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'41', N'CHRISTALIS IN', 41, 1, N'8', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'42', N'Christian Foundation for Children and Aging', 42, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'43', N'Cog Wheel trust Uganda', 43, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'44', N'Devine  Grace Orphanage', 44, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'45', N'Distance adaption Uganda', 45, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'46', N'Dove chidren''s home', 46, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'47', N'Dream scheme Uganda', 47, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'48', N'Dwelling places', 48, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'49', N'Ehohim Church', 49, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5', N'Acacia Babies home / Zemba children''s home', 5, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'50', N'Elohim Development Association', 50, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'51', N'EMMA & THERESA CHILDREN''S PROJECT', 51, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'52', N'Faith Children''s Care', 52, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'53', N'FATHERS'' HOUSE RUGARAMA', 53, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'54', N'FATHERS'' HOUSE RUKORE', 54, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'55', N'Feed His Lamb (Bethany children''s Home)', 55, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'56', N'Food step Uganda', 56, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'57', N'Fountain of Peace Children''s Foundation Bethel (Bethel Babies Home)', 57, 1, N'11', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'58', N'Fruits of Charity Foundation', 58, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'59', N'Ganda Bethel Reach out Ministries', 59, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6', N'Africa love', 6, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'60', N'Gideon Foundation', 60, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'61', N'Giving Children Hope', 61, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'62', N'Gods Care Ministries Palace of Treasurers.', 62, 1, N'11', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'63', N'God''s power reveival church', 63, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'64', N'Good samaritan Children''s Home Uganda', 64, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'65', N'Good samaritan Orphanage', 65, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'66', N'Goshen ministries', 66, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'67', N'Grace children home', 67, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'68', N'Grace reach out Ministries international', 68, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'69', N'GRACE VILLA', 69, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7', N'African Hearts Children''s Home', 7, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'70', N'Green Land Orphanage', 70, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'71', N'Guluddene Unit For Deaf', 71, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'72', N'Hands of love children''s Home', 72, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'73', N'Happy times child care initiatives', 73, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'74', N'He intends Victory', 74, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'75', N'Helping orphan and prodigals to Eternity (HOPE)', 75, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'76', N'Heven Ministries', 76, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'77', N'Home of homes and dreams', 77, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'78', N'Home of the Disadvantanged Kireka', 78, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'79', N'Home of the hope collective', 79, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8', N'Aggie Babies Home', 8, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'80', N'Hope Centre', 80, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'81', N'Hope for new life orphans Uganda', 81, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'82', N'Hope Kids', 82, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'83', N'Hope of children and women victims of violence', 83, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'84', N'Hope Orphanage Centre', 84, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'85', N'Hope Sharing Family Charitable', 85, 1, N'13', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'86', N'Horeb Hope Care', 86, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'87', N'House of hope friends orphanage', 87, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'88', N'Intense Victory', 88, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'89', N'International lsamic Charitable organisation', 89, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9', N'AKANYIJUKA CHILDREN''S HOME', 9, 1, N'5', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'90', N'Kampala Children''s Centre', 90, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'91', N'KATWE – RE', 91, 1, N'8', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'92', N'Kazo exprostitutes women with AIDS and children', 92, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'93', N'Kerechue Missionary LEE green pasture Nanziga', 93, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'94', N'Kids in need', 94, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'95', N'Kids of Africa - Swiss African Children''s Village', 95, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'96', N'Kiribedda Orphanage Centre', 96, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'97', N'Kiryanyoza P/S and Seconday School', 97, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'98', N'Kiwologoma orphanage centre / canary organization', 98, 1, N'17', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'99', N'Kiwumulo Orphanage and Vocational Centre', 99, 1, N'13', N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'175', N'Iris Ministries', 175, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'176', N'Ewaffe project', 176, 1, N'12', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_institution] ([ins_id], [ins_name], [ins_order], [ins_active], [dst_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'177', N'Peace Transitional Home', 177, 1, N'12', N'1', N'1', GETDATE(), GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstMaritalStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_marital_status] ON 
                    INSERT [dbo].[lst_marital_status] ([mst_sid], [mst_id], [mst_name], [mst_order], [mst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'M', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_marital_status] ([mst_sid], [mst_id], [mst_name], [mst_order], [mst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'S', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_marital_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstMemberType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_member_type] ON 
                    INSERT [dbo].[lst_member_type] ([mtp_sid], [mtp_id], [mtp_name], [mtp_order], [mtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Household', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_member_type] ([mtp_sid], [mtp_id], [mtp_name], [mtp_order], [mtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'External', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_member_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstOfficeStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_office_status] ([ost_id], [ost_name], [ost_order], [ost_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'Waiting Validation', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_office_status] ([ost_id], [ost_name], [ost_order], [ost_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0', N'Rejected', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_office_status] ([ost_id], [ost_name], [ost_order], [ost_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'Validated', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstOfficeType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_office_type] ([otp_id], [otp_name], [otp_order], [otp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'CSO', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_office_type] ([otp_id], [otp_name], [otp_order], [otp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'IP', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstOftenSometimesNever(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_often_sometimes_never] ON 
                    INSERT [dbo].[lst_often_sometimes_never] ([osn_sid], [osn_id], [osn_name], [osn_order], [osn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'0', N'Never', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_often_sometimes_never] ([osn_sid], [osn_id], [osn_name], [osn_order], [osn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'1', N'Very Often', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_often_sometimes_never] ([osn_sid], [osn_id], [osn_name], [osn_order], [osn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'Sometimes', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_often_sometimes_never] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstOnlineStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_online_status] ([ols_id], [ols_name], [ols_order], [ols_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'Online', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_online_status] ([ols_id], [ols_name], [ols_order], [ols_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0', N'Offline', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstParentalStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_parental_status] ON 
                    INSERT [dbo].[lst_parental_status] ([pst_sid], [pst_id], [pst_name], [pst_order], [pst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Both Alive', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_parental_status] ([pst_sid], [pst_id], [pst_name], [pst_order], [pst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Both Dead', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_parental_status] ([pst_sid], [pst_id], [pst_name], [pst_order], [pst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Father Alive', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_parental_status] ([pst_sid], [pst_id], [pst_name], [pst_order], [pst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Mother Alive', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_parental_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstPartner(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_partner] ([prt_id], [prt_name], [prt_other], [prt_order], [prt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'PRT001', N'Action for Community Development', 'AC', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_partner] ([prt_id], [prt_name], [prt_other], [prt_order], [prt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'PRT002', N'African Network for Prevention and Protection against Child Abuse and Neglect', 'AN', 2, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_partner] ([prt_id], [prt_name], [prt_other], [prt_order], [prt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'PRT003', N'TPO UGANDA', 'TP', 3, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstPCAType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_pca_type] ON 
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1 = Only Child Attended', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'2 = Only Parent Attended', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'3 = Both Attended', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'X = Both Didn''t Attend', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_pca_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstProfession(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_profession] ON 
                    INSERT [dbo].[lst_profession] ([prf_sid], [prf_id], [prf_name], [prf_order], [prf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'S', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_profession] ([prf_sid], [prf_id], [prf_name], [prf_order], [prf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'W', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_profession] ([prf_sid], [prf_id], [prf_name], [prf_order], [prf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'UE', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_profession] ([prf_sid], [prf_id], [prf_name], [prf_order], [prf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'NA', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_profession] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstProtection(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_protection] ON 
                    INSERT [dbo].[lst_protection] ([prt_sid], [prt_id], [prt_name], [prt_order], [prt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'PA', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_protection] ([prt_sid], [prt_id], [prt_name], [prt_order], [prt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'EP', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_protection] ([prt_sid], [prt_id], [prt_name], [prt_order], [prt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'EM', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_protection] ([prt_sid], [prt_id], [prt_name], [prt_order], [prt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'SA', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_protection] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstPVCService(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_pvc_service] ON 																																																   
	                INSERT [dbo].[lst_pvc_service] ([pvcs_sid], [pvcs_id], [pvcs_name], [pvcs_order], [pvcs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'PEP', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                INSERT [dbo].[lst_pvc_service] ([pvcs_sid], [pvcs_id], [pvcs_name], [pvcs_order], [pvcs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Linked to Police', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                INSERT [dbo].[lst_pvc_service] ([pvcs_sid], [pvcs_id], [pvcs_name], [pvcs_order], [pvcs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Psychosocial Counselling', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
	                SET IDENTITY_INSERT [dbo].[lst_pvc_service] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstQuarterYear(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_quarter_year] ([qy_id], [qy_name], [qy_begin], [qy_end], [qy_order], [qy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'Oct-Dec', 10, 12, 1, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_quarter_year] ([qy_id], [qy_name], [qy_begin], [qy_end], [qy_order], [qy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'Jan-Mar', 1, 3, 2, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_quarter_year] ([qy_id], [qy_name], [qy_begin], [qy_end], [qy_order], [qy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3', N'Apr-June', 4, 6, 3, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_quarter_year] ([qy_id], [qy_name], [qy_begin], [qy_end], [qy_order], [qy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4', N'Jul-Sept', 7, 9, 4, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstRecordType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_record_type] ON 
                    INSERT [dbo].[lst_record_type] ([rtp_sid], [rtp_id], [rtp_name], [rtp_order], [rtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Household Assessment', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_record_type] ([rtp_sid], [rtp_id], [rtp_name], [rtp_order], [rtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Home Visit', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_record_type] ([rtp_sid], [rtp_id], [rtp_name], [rtp_order], [rtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Referral', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_record_type] ([rtp_sid], [rtp_id], [rtp_name], [rtp_order], [rtp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'OVC Identification and Prioritization', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_record_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstRegion(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_region] ON 
                    INSERT [dbo].[lst_region] ([rgn_sid], [rgn_id], [rgn_name], [rgn_order], [rgn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'CENTRAL', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_region] ([rgn_sid], [rgn_id], [rgn_name], [rgn_order], [rgn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'SOUTH WESTERN', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_region] ([rgn_sid], [rgn_id], [rgn_name], [rgn_order], [rgn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'WESTERN', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_region] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSegment(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_segment] ON 
                    INSERT [dbo].[lst_segment] ([sgm_sid], [sgm_id], [sgm_name], [sgm_order], [sgm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'In School', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_segment] ([sgm_sid], [sgm_id], [sgm_name], [sgm_order], [sgm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Married', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_segment] ([sgm_sid], [sgm_id], [sgm_name], [sgm_order], [sgm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Pregnant', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_segment] ([sgm_sid], [sgm_id], [sgm_name], [sgm_order], [sgm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Given Birth', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_segment] ([sgm_sid], [sgm_id], [sgm_name], [sgm_order], [sgm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'TS', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_segment] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSEROStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_sero_status] ON 
                    INSERT [dbo].[lst_sero_status] ([sst_sid], [sst_id], [sst_name], [sst_order], [sst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'TR', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sero_status] ([sst_sid], [sst_id], [sst_name], [sst_order], [sst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'TRR', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sero_status] ([sst_sid], [sst_id], [sst_name], [sst_order], [sst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'N/A', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_sero_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstServiceHomeVisit(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_service_home_visit] ON 
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'HCT referral', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'ART Referral', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Drug adherence counselling', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Follow up on Household Action Plans', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Physchosocial Support', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Birth Ceriticate Referral', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Nutrition counselling and food security', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Couselling on hygien and sanitation', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit] ([shv_sid], [shv_id], [shv_name], [shv_order], [shv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'Sensitisation on enrollment and retention in school', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_service_home_visit] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstServiceHomeVisitPrevious(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_service_home_visit_previous] ON 
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'HCT referral', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'ART Referral', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Drug adherence counselling', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Follow up on Household Action Plans', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Physchosocial Support', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Birth Ceriticate Referral', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Nutrition counselling and food security', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Couselling on hygien and sanitation', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'Sensitisation on enrollment and retention in school', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_service_home_visit_previous] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstServiceProvided(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_service_provided] ON 
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'HIV counselling', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Counselling on ART', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Counselling on ANC and Child health', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Counselling on Emtct', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Information on importance of birth registration', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Information on importance of good nutrtion', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_provided] ([svp_sid], [svp_id], [svp_name], [svp_order], [svp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Information on other services', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_service_provided] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstServiceReferred(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_service_referred] ON 
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'HCT', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Clinical Care - ART', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'MCH', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'eMTCT', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Birth registration', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Nutrtion support', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_referred] ([svr_sid], [svr_id], [svr_name], [svr_order], [svr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'Other', N'Others', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_service_referred] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSocialEconomic(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_social_economic] ON 
                    INSERT [dbo].[lst_social_economic] ([sec_sid], [sec_id], [sec_name], [sec_order], [sec_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Social Economic 01', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_social_economic] ([sec_sid], [sec_id], [sec_name], [sec_order], [sec_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Social Economic 02', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_social_economic] ([sec_sid], [sec_id], [sec_name], [sec_order], [sec_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'Other', N'Other', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_social_economic] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSocialWorkerStatus(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_social_worker_status] ON 
                    INSERT [dbo].[lst_social_worker_status] ([sws_sid], [sws_id], [sws_name], [sws_order], [sws_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Active', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_social_worker_status] ([sws_sid], [sws_id], [sws_name], [sws_order], [sws_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'0', N'InActive', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_social_worker_status] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSocialWorkerType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_social_worker_type] ON 
                    INSERT [dbo].[lst_social_worker_type] ([swt_sid], [swt_id], [swt_name], [swt_order], [swt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Social Worker', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_social_worker_type] ([swt_sid], [swt_id], [swt_name], [swt_order], [swt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Para Social Worker', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_social_worker_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstStaffStructure(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_staff_structure] ON 
                    INSERT [dbo].[lst_staff_structure] ([ss_sid], [ss_id], [ss_name], [ss_order], [ss_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'DCDO', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_staff_structure] ([ss_sid], [ss_id], [ss_name], [ss_order], [ss_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'SPSWO', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_staff_structure] ([ss_sid], [ss_id], [ss_name], [ss_order], [ss_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'CDO', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_staff_structure] ([ss_sid], [ss_id], [ss_name], [ss_order], [ss_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'ACDO', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_staff_structure] ([ss_sid], [ss_id], [ss_name], [ss_order], [ss_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'ACDO', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_staff_structure] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSubCounty(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            strSQL = "DELETE FROM [dbo].[lst_sub_county]";
            dbCon.ExecuteNonQuery(strSQL);

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_sub_county] ON 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'BAMUNANIKA', 1, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'BIGULI (Curved out of Bwizi)', 2, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'BIRERE', 3, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Bitooma [New – from Kyamuhunga]', 4, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'BOMBO TOWN COUNCIL', 5, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'BUBARE', 6, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'BUFUNDI', 7, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'BUFUNJO', 8, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'BUGAAKI', 9, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'BUGAMBE', 10, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'11', N'BUGANGARI', 11, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (12, N'12', N'BUGOYE', 12, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (13, N'13', N'BUHANDA (Curved out of Kicheche)', 13, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (14, N'14', N'BUHANIKA', 14, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (15, N'15', N'BUHARA', 15, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (16, N'16', N'BUHIMBA', 16, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (17, N'17', N'BUHUNGA', 17, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (18, N'18', N'BUJUMBURA Division (curved Busisi & Kitoba S/Cs & Hoima T/C)', 18, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (19, N'19', N'BUKINDA', 19, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (20, N'20', N'BULEMBIA DIVISION (curved from Kilembe S/C & Rukoiki S/C)', 20, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (21, N'21', N'BULERA', 21, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (22, N'22', N'Bumbaire', 22, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (23, N'23', N'BUREMBA', 23, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (24, N'24', N'BURUNGA', 24, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (25, N'25', N'BUSERUKA', 25, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (26, N'26', N'BUSIISI Division (Curved from Busisi & Bugambe S/C)', 26, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (27, N'27', N'BUSIMBI', 27, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (28, N'28', N'BUSIRIBA (Curved out of Kahunge)', 28, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (29, N'29', N'BUSUKUMA', 29, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (30, N'30', N'BUTANDA', 30, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (31, N'31', N'BUTAYUNJA', 31, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (32, N'32', N'BUTIITI SUB COUNTY', 32, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (33, N'33', N'BUTUNDUUZI SUB COUNTY', 33, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (34, N'34', N'BUTUNTUMULA', 34, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (35, N'35', N'BUYANJA', 35, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (36, N'36', N'BWAMBARA', 36, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (37, N'37', N'Bwamiramira', 37, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (38, N'38', N'Bwanswa', 38, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (39, N'39', N'BWERA', 39, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (40, N'40', N'BWESUMBU (New, Curved out of Kyabarungira)', 40, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (41, N'41', N'Bwikara', 41, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (42, N'42', N'BWIZI', 42, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (43, N'43', N'BWONGYERA', 43, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (44, N'44', N'Byakabanda', 44, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (45, N'45', N'Central Division (Curved from Bushenyi - Ishaka T/C, Bumbaire & Kakanju S/Cs)', 45, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (46, N'46', N'CENTRAL DIVISION (Curved out of  Ntungamo T/C)', 46, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (47, N'47', N'Ddwaniro', 47, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (48, N'48', N'EASTERN DIVISION (Curved out of  Ntungamo T/C)', 48, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (49, N'49', N'EASTERN DIVISION (Curved out of Kagunga S/C)', 49, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (50, N'50', N'EASTERN DIVISION (Curved out of Rukungiri T/C)', 50, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (51, N'51', N'EASTERN DIVISION or WESTERN DIVISION (to be confirmed)', 51, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (52, N'52', N'ENDINZI', 52, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (53, N'53', N'ENTEBBE DIVISION A', 53, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (54, N'54', N'ENTEBBE DIVISION B', 54, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (55, N'55', N'GOMBE', 55, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (56, N'56', N'HAMURWA', 56, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (57, N'57', N'Hamurwa Town Council (Curved out of Hamurwa & Bubare S/Cs)', 57, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (58, N'58', N'HIMA TOWN COUNCIL (New, Curved out of Kitswamba)', 58, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (59, N'59', N'Ibaare [New from Bumbaire Subcounty]', 59, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (60, N'60', N'IHANDIRO', 60, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (61, N'61', N'IHUNGA Subcounty', 61, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (62, N'62', N'IKUMBA', 62, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (63, N'63', N'Ishaka Division (Curved from Bushenyi - Ishaka T/C & Nyabubare S/C)', 63, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (64, N'64', N'ISINGIRO Town Council (New, curved out of Kabingo)', 64, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (65, N'65', N'ITOJO Subcounty', 65, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (66, N'66', N'KABALE CENTRAL DIVISION', 66, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (67, N'67', N'KABALE NORTHERN DIVISION', 67, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (68, N'68', N'KABALE SOUTHERN DIVISION', 68, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (69, N'69', N'KABAMBIRO (New, Curved out of Kamwenge)', 69, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (70, N'70', N'KABEREBERE TOWN COUNCIL (curved out of Birere)', 70, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (71, N'71', N'KABINGO', 71, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (72, N'72', N'Kabira', 72, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (73, N'73', N'KABULASOKE', 73, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (74, N'74', N'KABUYANDA Subcounty', 74, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (75, N'75', N'KABUYANDA Town Council ( curved out of Kabuyanda subcounty)', 75, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (76, N'76', N'KABWOYA', 76, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (77, N'77', N'KACHEERA', 77, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (78, N'78', N'Kagadi Subcounty', 78, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (79, N'79', N'KAGADI Town Council (New, Curved out of Kagadi)', 79, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (80, N'80', N'KAGAMBA (BUYAMBA)', 80, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (81, N'81', N'KAHARO', 81, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (82, N'82', N'KAHOORA Division (curved from Hoima T/C & Kitoba S/C)', 82, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (83, N'83', N'KAHUNGE', 83, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (84, N'84', N'Kakanju', 84, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (85, N'85', N'Kakindo', 85, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (86, N'86', N'KAKINDU', 86, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (87, N'87', N'KAKIRI Subcounty', 87, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (88, N'88', N'KAKIRI Town Council (New Curved out of Kakiri)', 88, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (89, N'89', N'KAKUUTO', 89, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (90, N'90', N'KALAGALA', 90, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (91, N'91', N'Kalisizo Rural', 91, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (92, N'92', N'KALISIZO Town Council', 92, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (93, N'93', N'KAMBUGA', 93, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (94, N'94', N'KAMIRA', 94, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (95, N'95', N'KAMUGANGUZI', 95, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (96, N'96', N'KAMWENGE SUBCOUNTY', 96, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (97, N'97', N'KAMWENGE TOWN COUNCIL', 97, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (98, N'98', N'KAMWEZI', 98, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (99, N'99', N'KANARA (Curved out of Nyabbani)', 99, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (100, N'100', N'KANONI', 100, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (101, N'101', N'KANONI Town Council (Curved from Kyegonza S/C)', 101, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (102, N'102', N'KANUNGU TOWN COUNCIL', 102, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (103, N'103', N'KANYANTOROGO', 103, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (104, N'104', N'KANYARYERU', 104, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (105, N'105', N'KARAMBI', 105, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (106, N'106', N'KARUSANDARA', 106, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (107, N'107', N'Kasaali', 107, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (108, N'108', N'Kasambya', 108, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (109, N'109', N'KASANJE', 109, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (110, N'110', N'KASASA', 110, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (111, N'111', N'KASESE CENTRAL DIVISION (curved from Kasese T/C & Muhokya S/C)', 111, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (112, N'112', N'KASHAMBYA', 112, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (113, N'113', N'KASHONGI', 113, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (114, N'114', N'KASHUMBA', 114, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (115, N'115', N'KATABI', 115, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (116, N'116', N'KATIKAMU', 116, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (117, N'117', N'KATOOKE SUBCOUNTY', 117, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (118, N'118', N'KATOOKE TOWN COUNCIL (Curved out of Katooke S/C)', 118, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (119, N'119', N'KATOOKE TOWN COUNCIL (Curved out of Katooke)', 119, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (120, N'120', N'KATWE KABATORO TOWN COUNCIL', 120, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (121, N'121', N'KAYONZA', 121, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (122, N'122', N'KAYONZA Subcounty', 122, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (123, N'123', N'KAZO', 123, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (124, N'124', N'KEBISONI', 124, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (125, N'125', N'KENSHUNGA', 125, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (126, N'126', N'Kibaale Town Council', 126, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (127, N'127', N'KIBANDA', 127, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (128, N'128', N'KIBATSI Subcounty.', 128, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (129, N'129', N'KICHECHE', 129, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (130, N'130', N'KIFAMBA', 130, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (131, N'131', N'KIGARAALE (New Curved out of Nyantungo S/C)', 131, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (132, N'132', N'KIGOROBYA', 132, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (133, N'133', N'KIGOROBYA Town Council', 133, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (134, N'134', N'KIHIIHI SUBCOUNTY', 134, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (135, N'135', N'KIHIIHI TOWN COUNCIL.(New, Curved out of Kihiihi)', 135, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (136, N'136', N'KIHUURA', 136, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (137, N'137', N'KIKAGATI', 137, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (138, N'138', N'KIKANDWA', 138, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (139, N'139', N'KIKATSI', 139, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (140, N'140', N'KIKYUSA', 140, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (141, N'141', N'KILEMBE', 141, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (142, N'142', N'KINONI', 142, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (143, N'143', N'KIRA TOWN COUNCIL', 143, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (144, N'144', N'KIRIMA', 144, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (145, N'145', N'KIRUHURA TOWN COUNCIL (New, Curved out of Kenshunga)', 145, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (146, N'146', N'Kirumba', 146, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (147, N'147', N'Kiryanga', 147, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (148, N'148', N'Kisiita', 148, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (149, N'149', N'KISINGA', 149, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (150, N'150', N'KISOJJO (New Curved out of Kihuura S/C)', 150, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (151, N'151', N'KITHOLHU', 151, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (152, N'152', N'KITOBA', 152, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (153, N'153', N'KITSWAMBA', 153, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (154, N'154', N'KITUMBA', 154, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (155, N'155', N'KIZIBA (curved out of Kyalulangira)', 155, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (156, N'156', N'KIZIRANFUMBI', 156, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (157, N'157', N'KYABARUNGIRA', 157, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (158, N'158', N'KYABIGAMBIRE', 158, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (159, N'159', N'Kyabugimbi', 159, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (160, N'160', N'Kyalulangira', 160, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (161, N'161', N'Kyamuhunga', 161, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (162, N'162', N'Kyanaisoke', 162, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (163, N'163', N'KYANAMIRA', 163, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (164, N'164', N'KYANGWALI', 164, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (165, N'165', N'KYARUMBA', 165, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (166, N'166', N'KYARUSOZI SUB COUNTY', 166, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (167, N'167', N'KYARUSOZI TOWN COUNCIL', 167, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (168, N'168', N'Kyebando', 168, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (169, N'169', N'KYEBE', 169, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (170, N'170', N'KYEGONZA', 170, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (171, N'171', N'Kyeizooba', 171, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (172, N'172', N'KYENJOJO TOWN COUNCIL', 172, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (173, N'173', N'KYONDO', 173, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (174, N'174', N'KYOTERA Town Council', 174, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (175, N'175', N'LAKE KATWE', 175, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (176, N'176', N'LUWEERO SUBCOUNTY', 176, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (177, N'177', N'LUWERO TOWN COUNCIL', 177, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (178, N'178', N'Lwamaggwa', 178, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (179, N'179', N'Lwanda', 179, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (180, N'180', N'Lwankoni', 180, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (181, N'181', N'MAANYI', 181, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (182, N'182', N'Mabaale', 182, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (183, N'183', N'MADDU', 183, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (184, N'184', N'MAHANGO', 184, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (185, N'185', N'MAHYORO', 185, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (186, N'186', N'MAKULUBITA', 186, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (187, N'187', N'MALANGALA', 187, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (188, N'188', N'MALIBA', 188, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (189, N'189', N'MASHA', 189, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (190, N'190', N'MASULITA', 190, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (191, N'191', N'Matale', 191, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (192, N'192', N'MAZIBA', 192, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (193, N'193', N'MBAARE (New, curved out of Endizi, Kashumba & Rugaaga)', 193, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (194, N'194', N'MITYANA TOWN COUNCIL', 194, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (195, N'195', N'MPARO Division (curverd from Buhanika, Kigorobya & Buhimba S/Cs & Hoima T/C)', 195, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (196, N'196', N'Mpeefu', 196, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (197, N'197', N'MPENJA', 197, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (198, N'198', N'MPONDWE - RUBIRIHA T.C. (New, Curved out of Bwera)', 198, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (199, N'199', N'MPUNGU', 199, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (200, N'200', N'Mugarama', 200, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (201, N'201', N'MUHOKYA', 201, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (202, N'202', N'Muhorro', 202, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (203, N'203', N'MUKO', 203, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (204, N'204', N'MUNKUNYU', 204, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (205, N'205', N'Nabigasa', 205, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (206, N'206', N'NABWERU', 206, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (207, N'207', N'Nalweyo', 207, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (208, N'208', N'NAMAYUMBA', 208, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (209, N'209', N'NANGABO', 209, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (210, N'210', N'NANSANA TOWN COUNCIL (New Curved out of Nabwerui)', 210, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (211, N'211', N'NGARAMA', 211, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (212, N'212', N'NGOMA Subcounty', 212, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (213, N'213', N'NKOMA', 213, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (214, N'214', N'Nkooko', 214, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (215, N'215', N'NSANGI', 215, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (216, N'216', N'NTARA', 216, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (217, N'217', N'NTUNGAMO Subcounty', 217, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (218, N'218', N'NYABBANI', 218, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (219, N'219', N'NYABIHOKO', 219, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (220, N'220', N'Nyabubare', 220, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (221, N'221', N'NYABUHARWA (New Curved out of Butiiti S/C)', 221, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (222, N'222', N'NYABUHARWA Subcounty (New from Butiiti S/C)', 222, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (223, N'223', N'Nyakabirizi Division (Curved from Bushenyi - Ishaka T/C, Bumbaire & Kyabugimbi S/Cs)', 223, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (224, N'224', N'NYAKAGYEME', 224, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (225, N'225', N'NYAKASHASHARA', 225, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (226, N'226', N'NYAKISHENYI', 226, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (227, N'227', N'NYAKITUNDA', 227, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (228, N'228', N'NYAKIYUMBU', 228, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (229, N'229', N'NYAKYERA Subcounty', 229, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (230, N'230', N'NYAMIRAMA', 230, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (231, N'231', N'NYAMUYANJA (New, curved out of Birere)', 231, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (232, N'232', N'NYAMWAMBA DIVISION (curved from Kasese T/C, Bugoye & Rukoki S/C )', 232, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (233, N'233', N'NYAMWERU (New, curved form Bubare subcounty)', 233, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (234, N'234', N'Nyankwanzi', 234, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (235, N'235', N'NYANKWAZI SUBCOUNTY', 235, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (236, N'236', N'NYANTUNGO', 236, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (237, N'237', N'NYARUSHANJE', 237, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (238, N'238', N'NYIMBWA', 238, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (239, N'239', N'RAKAI Town Council', 239, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (240, N'240', N'RUBAARE Subcounty', 240, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (241, N'241', N'RUBAYA', 241, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (242, N'242', N'RUBOROGOTA (New, curved out of Kabuyanda)', 242, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (243, N'243', N'RUGAAGA', 243, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (244, N'244', N'RUGARAMA Subcounty', 244, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (245, N'245', N'Rugashaari', 245, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (246, N'246', N'RUGYEYO', 246, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (247, N'247', N'RUHAAMA Subcounty', 247, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (248, N'248', N'RUHIJA (New, curved form Ikumba subcounty)', 248, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (249, N'249', N'RUHINDA', 249, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (250, N'250', N'Ruhumuro [New from Kyabugimbi subcounty]', 250, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (251, N'251', N'RUKOKI', 251, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (252, N'252', N'RUKONI  EAST Subcounty', 252, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (253, N'253', N'RUKONI WEST Subcounty', 253, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (254, N'254', N'RUSHASHA (New, curved out of Rugaaga)', 254, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (255, N'255', N'RUTENGA', 255, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (256, N'256', N'RWAMUCUCU', 256, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (257, N'257', N'RWEIKINIRO Subcounty', 257, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (258, N'258', N'RWEMIKOMA', 258, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (259, N'259', N'SANGA', 259, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (260, N'260', N'SOUTHERN DIVISION (Curved out of Kagunga S/C)', 260, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (261, N'261', N'SOUTHERN DIVISION (Curved out of Nyakageme S/C)', 261, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (262, N'262', N'SOUTHERN DIVISION (Curved out of Rukungiri T/C)', 262, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (263, N'263', N'SSABAGABO-MAKINDYE', 263, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (264, N'264', N'SSEKANYONYI', 264, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (265, N'265', N'SSISA', 265, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (266, N'266', N'WAKISO', 266, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (267, N'267', N'WAKISO TOWN COUNCIL', 267, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (268, N'268', N'WESTERN DIVISION (Curved out of  Ntungamo T/C)', 268, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (269, N'269', N'WESTERN DIVISION (Curved out of Kagunga S/C)', 269, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (270, N'270', N'WESTERN DIVISION (Curved out of Nyakageme S/C)', 270, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (271, N'271', N'WESTERN DIVISION (Curved out of Rukungiri T/C)', 271, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (272, N'272', N'WOBULENZI  TOWN COUNCIL', 272, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (273, N'273', N'ZIROBWE', 273, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (274, N'274', N'Bubango', 274, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (275, N'275', N'Engari', 275, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (276, N'276', N'Kakumiro Town Council', 276, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (277, N'277', N'Kalangaalo', 277, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (278, N'278', N'Kyaterekera ', 278, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (279, N'279', N'Ndaiga ', 279, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (280, N'280', N'Nyamarebe', 280, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (281, N'281', N'Kicuzi', 281, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (282, N'282', N'Rukiri ', 282, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (283, N'283', N'Ishongororo', 283, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (284, N'284', N'Kijogo ', 284, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (285, N'285', N'Kikyenkye', 285, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (286, N'286', N'Keihangara', 286, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (287, N'287', N'Bisheshe', 287, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (288, N'288', N'Kakindo Town Council', 288, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (289, N'289', N'Kyangyenyi', 289, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (290, N'290', N'Kigarama', 290, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (291, N'291', N'Masheruka', 291, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (292, N'292', N'Masheruka Town Council', 292, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (293, N'293', N'Bugongi Town Council', 293, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (294, N'294', N' Kitagata Town Council', 294, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (295, N'295', N'Kitagata Sub county', 295, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (296, N'296', N'Kasaana', 296, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (297, N'297', N'Rugarama', 297, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (298, N'298', N'Shuuku Town Council', 298, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (299, N'299', N'Kabwohe Division', 299, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (300, N'300', N'Kagango Division', 300, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (301, N'301', N'Kashozi Division', 301, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (302, N'302', N'Sheema Central Division', 302, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (303, N'303', N'NYAMITANGA Division', 303, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (304, N'304', N'KAKOBA DIVISION', 304, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (305, N'305', N'KAMUKUZI DIVISION', 305, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (306, N'306', N'KAKIIKA DIVISION', 306, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (307, N'307', N'BIHARWE DIVISION', 307, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (308, N'308', N'NYAKAYOJO DIVISION', 308, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (309, N'309', N'RUBINDI', 309, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (310, N'310', N'BUKIRO', 310, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (311, N'311', N'KASHARE', 311, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (312, N'312', N'KAGONGI', 312, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (313, N'313', N'RUBAYA', 313, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (314, N'314', N'BUBAARE', 314, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (315, N'315', N'RWANYAMAAHEMBE', 315, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (316, N'316', N'NDEIJA', 316, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (317, N'317', N'MWIZI', 317, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (318, N'318', N'BUGAMBA', 318, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (319, N'319', N' RUGANDO', 319, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (320, N'320', N'Bitereko', 320, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (321, N'321', N'Kabira', 321, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (322, N'322', N'Kanyabwanga', 322, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (323, N'323', N'Kasheshero', 323, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (324, N'324', N'Kyanga', 324, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (325, N'325', N'Mitooma', 325, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (326, N'326', N'Mutara', 326, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (327, N'327', N'Katenga', 327, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (328, N'328', N'Mayanga', 328, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (329, N'329', N'Rurehe', 329, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (330, N'330', N'Kasheshero T/C', 330, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (331, N'331', N'Mitooma T/C', 331, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (332, N'332', N'NYAMARWA', 332, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (333, N'333', N'NYAMARUNDA', 333, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (334, N'334', N'KASIMBI', 334, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (335, N'335', N'Bussi SC', 335, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (336, N'336', N'Kyengera TC', 336, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (337, N'337', N'Kasangati TC', 337, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (338, N'338', N'BWEYOGERERE DIVISION', 338, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (339, N'339', N'MASAJJA DIVISION', 339, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (340, N'340', N'BUNAMWAYA DIVISION', 340, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (341, N'341', N'NAMUGONGO DIVISION', 341, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (342, N'342', N'NDEJJE', 342, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (343, N'343', N'Bufunda', 343, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (344, N'344', N'BUTUNDUUZI TOWN COUNCIL', 344, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (345, N'345', N'NAMUNGO', 345, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (346, N'346', N'MPARO TOWN COUNCIL', 346, 1, N'24', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (347, N'347', N'MUHANGA TOWN COUNCIL', 347, 1, N'24', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstSyncUpload(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'ben_activity_training_upload', N'at_sid', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'ben_activity_training_participant_upload', N'atp_sid', 2, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3', N'ben_apprenticeship_register_line_upload', N'aprl_sid', 3, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4', N'ben_girl_education_register_upload', N'ger_sid', 4, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5', N'ben_girl_education_register_child_upload', N'gerc_sid', 5, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6', N'ben_service_register_upload', N'svr_sid', 6, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7', N'ben_service_register_line_upload', N'svrl_sid', 7, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8', N'ben_service_register_line_social_economic_upload', N'svrlse_sid', 8, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9', N'ben_value_chain_register_upload', N'vcr_sid', 9, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'10', N'ben_value_chain_register_actor_upload', N'vcra_sid', 10, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'11', N'drm_enrollment_upload', N'de_sid', 11, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'12', N'drm_enrollment_member_upload', N'dem_sid', 12, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'13', N'drm_enrollment_member_segment_upload', N'dems_sid', 13, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'14', N'drm_enrollment_member_visit_upload', N'demv_sid', 14, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'15', N'drm_member_upload', N'dm_sid', 15, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'16', N'hh_home_visit_upload', N'hv_sid', 16, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'17', N'hh_home_visit_service_upload', N'hvs_sid', 17, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'18', N'hh_home_visit_service_previous_upload', N'hvsp_sid', 18, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'19', N'hh_household_upload', N'hh_sid', 19, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'20', N'hh_household_assessment_upload', N'hha_sid', 20, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'21', N'hh_household_assessment_member_upload', N'ham_sid', 21, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'22', N'hh_household_member_upload', N'hhm_sid', 22, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'23', N'hh_ovc_identification_prioritization_upload', N'oip_sid', 23, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'24', N'hh_referral_upload', N'rfr_sid', 24, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'25', N'hh_referral_service_provided_upload', N'rsp_sid', 25, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'26', N'hh_referral_service_referred_upload', N'rsr_sid', 26, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'27', N'prt_alternative_care_panel_upload', N'acp_sid', 27, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'28', N'prt_alternative_care_panel_district_upload', N'acpd_sid', 28, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'29', N'prt_cbsd_resource_allocation_upload', N'cra_sid', 29, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'30', N'prt_cbsd_resource_allocation_district_upload', N'crad_sid', 30, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'31', N'prt_cbsd_staff_appraisal_tracking_upload', N'csat_sid', 31, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'32', N'prt_cbsd_staff_appraisal_tracking_line_upload', N'csatl_sid', 32, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'33', N'prt_district_ovc_checklist_upload', N'doc_sid', 33, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'34', N'prt_institutional_care_summary_upload', N'ics_sid', 34, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'35', N'prt_institutional_care_summary_line_upload', N'icsl_sid', 35, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'36', N'silc_financial_register_upload', N'sfr_sid', 36, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'37', N'silc_financial_register_group_upload', N'sfrg_sid', 37, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'38', N'silc_group_upload', N'sg_sid', 38, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'39', N'silc_group_member_upload', N'sgm_sid', 39, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'40', N'silc_savings_register_upload', N'ssr_sid', 40, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'41', N'silc_savings_register_member_upload', N'ssrm_sid', 41, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'42', N'ss_error_upload', N'erru_sid', 42, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'43', N'swm_social_worker_upload', N'swk_sid', 43, 1, N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'44', N'um_user_upload', N'usr_sid', 44, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'45', N'drm_htc_register_upload', N'dhr_sid', 45, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'46', N'drm_partner_upload', N'dp_sid', 46, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'47', N'drm_partner_tracking_upload', N'dpt_sid', 47, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'48', N'drm_partner_tracking_service_upload', N'dpts_sid', 48, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'49', N'drm_post_violence_care_upload', N'dpvc_sid', 49, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'50', N'drm_post_violence_care_line_upload', N'dpvcl_sid', 50, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'51', N'drm_post_violence_care_line_dreams_service_upload', N'dpvclds_sid', 51, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'52', N'drm_post_violence_care_line_service_upload', N'dpvcls_sid', 52, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'53', N'drm_sinovuyo_missed_session_upload', N'dsms_sid', 53, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'54', N'drm_sinovuyo_register_upload', N'dsr_sid', 54, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'55', N'drm_sinovuyo_register_line_upload', N'dsrl_sid', 55, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'56', N'drm_stepping_stones_missed_session_upload', N'dssms_sid', 56, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'57', N'drm_stepping_stones_register_upload', N'dssr_sid', 57, 1, N'1', N'1', GETDATE(), GETDATE()) 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'58', N'drm_stepping_stones_register_line_upload', N'dssrl_sid', 58, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstTrainingType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_training_type] ON 
                    INSERT [dbo].[lst_training_type] ([ttp_sid], [ttp_id], [ttp_name], [ttp_other], [ttp_order], [ttp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Aflateen', '', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_training_type] ([ttp_sid], [ttp_id], [ttp_name], [ttp_other], [ttp_order], [ttp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Better parenting', '', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_training_type] ([ttp_sid], [ttp_id], [ttp_name], [ttp_other], [ttp_order], [ttp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Financial Literacy/ skills', '', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_training_type] ([ttp_sid], [ttp_id], [ttp_name], [ttp_other], [ttp_order], [ttp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Smart skills', '', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_training_type] ([ttp_sid], [ttp_id], [ttp_name], [ttp_other], [ttp_order], [ttp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'The Faithfull House Islamic Family Life (TFH-IFL)', '', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_training_type] ([ttp_sid], [ttp_id], [ttp_name], [ttp_other], [ttp_order], [ttp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Youth Entreprueship  Skills (YES)', '', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_training_type] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstVisit(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_visit] ON 
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Visit 01', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Visit 02', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Visit 03', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Visit 04', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Visit 05', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Visit 06', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Visit 07', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_visit] ([vst_sid], [vst_id], [vst_name], [vst_order], [vst_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Visit 08', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE()) 
                    SET IDENTITY_INSERT [dbo].[lst_visit] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstWard(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_ward] ON 
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'AKAKU', 1, 1, N'104', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'AKAYANJA', 2, 1, N'104', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'BAJJO', 3, 1, N'238', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'BAKKA', 4, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'BAMUGOLODDE', 5, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'BANDA', 6, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'BANDA (New S/C)', 7, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'BANDA (New S/C)', 8, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'BARAHIIJA', 9, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'BASE CAMP', 10, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'11', N'BATALIKA (NEW FROM BIGANDO)', 11, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (12, N'12', N'BBAALE', 12, 1, N'127', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (13, N'13', N'BBAALE-MUKWENDA', 13, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (14, N'14', N'BBAMBULA', 14, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (15, N'15', N'BBEMBE', 15, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (16, N'16', N'Bethlehem', 16, 1, N'205', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (17, N'17', N'BIGAAGA', 17, 1, N'30', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (18, N'18', N'BIGADA', 18, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (19, N'19', N'BIGANDO', 19, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (20, N'20', N'BIGODI', 20, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (21, N'21', N'BIGULI', 21, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (22, N'22', N'BIGUNGIRO', 22, 1, N'233', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (23, N'23', N'BIGUSYO', 23, 1, N'23', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (24, N'24', N'BIHANGA', 24, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (25, N'25', N'Bijengye', 25, 1, N'159', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (26, N'26', N'BIJUBWE', 26, 1, N'225', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (27, N'27', N'BIKONE', 27, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (28, N'28', N'BIKONGOZO', 28, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (29, N'29', N'BIKUNYA', 29, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (30, N'30', N'BIKURUNGU', 30, 1, N'36', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (31, N'31', N'BINUNDA WARD', 31, 1, N'167', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (32, N'32', N'BIRAMBO', 32, 1, N'192', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (33, N'33', N'BIRUNGU', 33, 1, N'152', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (34, N'34', N'Bisanje', 34, 1, N'72', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (35, N'35', N'BISHOZI', 35, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (36, N'36', N'BITABAGO', 36, 1, N'179', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (37, N'37', N'Bitooma', 37, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (38, N'38', N'BOMBO CENTRAL', 38, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (39, N'39', N'Bubango', 39, 1, N'37', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (40, N'40', N'BUBARE', 40, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (41, N'41', N'BUBOGO', 41, 1, N'76', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (42, N'42', N'BUBOTHYO', 42, 1, N'60', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (43, N'43', N'BUBUUBI', 43, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (44, N'44', N'BUCUNDURA', 44, 1, N'112', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (45, N'45', N'BUCUNI WARD', 45, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (46, N'46', N'BUDAKA', 46, 1, N'152', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (47, N'47', N'BUDDO', 47, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (48, N'48', N'Bugaara', 48, 1, N'250', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (49, N'49', N'BUGAMBE', 49, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (50, N'50', N'BUGANGARI', 50, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (51, N'51', N'BUGARAMA', 51, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (52, N'52', N'BUGARAMA', 52, 1, N'81', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (53, N'53', N'BUGARIHE', 53, 1, N'258', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (54, N'54', N'BUGHALITSA', 54, 1, N'251', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (55, N'55', N'BUGHENDERO', 55, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (56, N'56', N'Bugona', 56, 1, N'178', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (57, N'57', N'BUGONGI', 57, 1, N'93', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (58, N'58', N'BUGONGI', 58, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (59, N'59', N'BUGOYE', 59, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (60, N'60', N'BUGYERA', 60, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (61, N'61', N'Buhanama', 61, 1, N'65', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (62, N'62', N'BUHARA', 62, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (63, N'63', N'BUHATHIRO', 63, 1, N'60', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (64, N'64', N'BUHAZA WARD', 64, 1, N'167', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (65, N'65', N'Buhonda', 65, 1, N'148', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (66, N'66', N'BUHUHIRA', 66, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (67, N'67', N'BUHUKA', 67, 1, N'164', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (68, N'68', N'BUHUMURIRO', 68, 1, N'248', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (69, N'69', N'BUHUNA', 69, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (70, N'70', N'BUHUNGA', 70, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (71, N'71', N'BUHUNGA', 71, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (72, N'72', N'BUJENGWE', 72, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (73, N'73', N'BUJONGOBE', 73, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (74, N'74', N'BUJUMIRO', 74, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (75, N'75', N'BUKALANGO', 75, 1, N'88', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (76, N'76', N'BUKALASA', 76, 1, N'272', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (77, N'77', N'BUKAMBAGGA', 77, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (78, N'78', N'BUKANDULA', 78, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (79, N'79', N'BUKANGARA', 79, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (80, N'80', N'BUKASA', 80, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (81, N'81', N'BUKEEKA', 81, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (82, N'82', N'BUKIMU', 82, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (83, N'83', N'Bukonda', 83, 1, N'37', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (84, N'84', N'BUKONDO', 84, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (85, N'85', N'BUKORA', 85, 1, N'154', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (86, N'86', N'BUKUNDUGULU', 86, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (87, N'87', N'BUKURUNGU', 87, 1, N'185', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (88, N'88', N'BULAMU', 88, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (89, N'89', N'BULEMBA', 89, 1, N'199', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (90, N'90', N'BULERA', 90, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (91, N'91', N'BULIMYA', 91, 1, N'156', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (92, N'92', N'BULINDA WARD', 92, 1, N'92', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (93, N'93', N'BULINDI', 93, 1, N'158', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (94, N'94', N'BULOBA', 94, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (95, N'95', N'BULUMBU', 95, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (96, N'96', N'BULWADDA', 96, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (97, N'97', N'BULWANYI', 97, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (98, N'98', N'BULYANGO', 98, 1, N'152', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (99, N'99', N'BULYANKUYEGE', 99, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (100, N'100', N'Bumbaire', 100, 1, N'22', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (101, N'101', N'BUNAMWAYA', 101, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (102, N'102', N'BUNONO', 102, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (103, N'103', N'BUNYAMURWA', 103, 1, N'40', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (104, N'104', N'Bunyarigi [New from Ruharo Parish]', 104, 1, N'45', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (105, N'105', N'BUNYISWA', 105, 1, N'39', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (106, N'106', N'BURAMA', 106, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (107, N'107', N'BURAMBA', 107, 1, N'241', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (108, N'108', N'Buramba [New from Kigoma Parish, Nyabubare S/C)', 108, 1, N'63', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (109, N'109', N'Buramba [New from Kigoma Parish]', 109, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (110, N'110', N'BURAMBIRA', 110, 1, N'81', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (111, N'111', N'BURANGA', 111, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (112, N'112', N'BURARRO', 112, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (113, N'113', N'BURARU', 113, 1, N'158', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (114, N'114', N'BUREMA', 114, 1, N'103', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (115, N'115', N'BURIGI', 115, 1, N'193', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (116, N'116', N'BURIME', 116, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (117, N'117', N'BUROMBE', 117, 1, N'249', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (118, N'118', N'BURORA', 118, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (119, N'119', N'Burora', 119, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (120, N'120', N'BURUNGA', 120, 1, N'24', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (121, N'121', N'BURUNGAMO', 121, 1, N'211', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (122, N'122', N'Burungira [New from Ruhumuro Parish]', 122, 1, N'250', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (123, N'123', N'BUSABALA', 123, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (124, N'124', N'BUSHEKA', 124, 1, N'52', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (125, N'125', N'BUSHURA', 125, 1, N'144', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (126, N'126', N'BUSHURO', 126, 1, N'154', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (127, N'127', N'BUSIIKA', 127, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (128, N'128', N'BUSINGE', 128, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (129, N'129', N'BUSIRIBA', 129, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (130, N'130', N'BUSOKE', 130, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (131, N'131', N'BUSSI', 131, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (132, N'132', N'BUSUJJA', 132, 1, N'88', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (133, N'133', N'BUSUKUMA', 133, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (134, N'134', N'BUSULA-MUSAALE', 134, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (135, N'135', N'Busunjju Town Board', 135, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (136, N'136', N'BUSUNJU', 136, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (137, N'137', N'BUSUUBIZI', 137, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (138, N'138', N'BUTANDA', 138, 1, N'30', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (139, N'139', N'BUTANDA', 139, 1, N'61', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (140, N'140', N'BUTARA (NEW)', 140, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (141, N'141', N'BUTARE', 141, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (142, N'142', N'BUTARE', 142, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (143, N'143', N'BUTEBERE', 143, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (144, N'144', N'BUTEMA', 144, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (145, N'145', N'BUTIITI', 145, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (146, N'146', N'BUTITI', 146, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (147, N'147', N'Butiti', 147, 1, N'179', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (148, N'148', N'BUTOBERE', 148, 1, N'66', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (149, N'149', N'BUTOBOORE', 149, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (150, N'150', N'BUTOOLE', 150, 1, N'164', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (151, N'151', N'BUTUNDUZI', 151, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (152, N'152', N'BUVUMA', 152, 1, N'238', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (153, N'153', N'BUWAMBO', 153, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (154, N'154', N'BUWANUKA', 154, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (155, N'155', N'BUYAGHA', 155, 1, N'173', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (156, N'156', N'Buyamba', 156, 1, N'47', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (157, N'157', N'Buyanja', 157, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (158, N'158', N'BUYANJA TOWN BOARD', 158, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (159, N'159', N'Buyiisa', 159, 1, N'146', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (160, N'160', N'BUYUKI', 160, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (161, N'161', N'Buziranduulu', 161, 1, N'107', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (162, N'162', N'BWAMA ISLAND', 162, 1, N'154', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (163, N'163', N'BWAMBARA', 163, 1, N'36', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (164, N'164', N'Bwamijja', 164, 1, N'72', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (165, N'165', N'BWANDA', 165, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (166, N'166', N'BWANGA', 166, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (167, N'167', N'BWAYU', 167, 1, N'233', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (168, N'168', N'BWAZIBA', 168, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (169, N'169', N'BWERA', 169, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (170, N'170', N'Bwera', 170, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (171, N'171', N'BWERA', 171, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (172, N'172', N'BWESUMBU', 172, 1, N'40', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (173, N'173', N'BWEYA', 173, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (174, N'174', N'BWEYEYO', 174, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (175, N'175', N'BWEYOGERERE', 175, 1, N'143', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (176, N'176', N'BWIKYA', 176, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (177, N'177', N'BWIKYA WARD (curved from Bwikya Parish, Kigorobya S/C; Butebere Parish, Buhanika S/C & Northern Ward, Hoima TC)', 177, 1, N'195', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (178, N'178', N'BWINDI', 178, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (179, N'179', N'BWIZI', 179, 1, N'42', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (180, N'180', N'Byakabanda', 180, 1, N'44', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (181, N'181', N'BYANAMIRA', 181, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (182, N'182', N'Byerima', 182, 1, N'146', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (183, N'183', N'CENTRAL WARD', 183, 1, N'46', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (184, N'184', N'CENTRAL WARD', 184, 1, N'53', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (185, N'185', N'CENTRAL WARD', 185, 1, N'82', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (186, N'186', N'CENTRAL WARD', 186, 1, N'174', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (187, N'187', N'CENTRAL WARD', 187, 1, N'194', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (188, N'188', N'Central Ward  (Curved from KABUGU & Kisyoro parishes)', 188, 1, N'75', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (189, N'189', N'Central Ward  (New from Ward I Bushenyi - Ishaka T/C)', 189, 1, N'45', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (190, N'190', N'DDEGEYA', 190, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (191, N'191', N'Ddwaniro', 191, 1, N'47', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (192, N'192', N'DEGEYA', 192, 1, N'183', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (193, N'193', N'Dyango', 193, 1, N'160', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (194, N'194', N'EAST WARD', 194, 1, N'194', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (195, N'195', N'EASTERN WARD', 195, 1, N'102', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (196, N'196', N'EMBAARE', 196, 1, N'139', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (197, N'197', N'ENDIINZI', 197, 1, N'52', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (198, N'198', N'ENGARI', 198, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (199, N'199', N'ENJERU', 199, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (200, N'200', N'Galiboleka', 200, 1, N'202', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (201, N'201', N'GANYENDA', 201, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (202, N'202', N'GARIBUNDA', 202, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (203, N'203', N'Gayaza', 203, 1, N'38', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (204, N'204', N'Gayaza', 204, 1, N'107', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (205, N'205', N'GAYAZA', 205, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (206, N'206', N'GGULUDDENE', 206, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (207, N'207', N'GOLOLA', 207, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (208, N'208', N'GOMBE', 208, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (209, N'209', N'GWANDA', 209, 1, N'169', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (210, N'210', N'HAIKOONA', 210, 1, N'235', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (211, N'211', N'HAKATOMA WARD', 211, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (212, N'212', N'HAMUKUNKU', 212, 1, N'175', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (213, N'213', N'Hamurwa Ward', 213, 1, N'57', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (214, N'214', N'HIIMA', 214, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (215, N'215', N'HIMA', 215, 1, N'153', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (216, N'216', N'IBAARE', 216, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (217, N'217', N'Ibaare [New]', 217, 1, N'59', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (218, N'218', N'IBANDA', 218, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (219, N'219', N'IBANDA', 219, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (220, N'220', N'IBIMBO', 220, 1, N'173', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (221, N'221', N'IBUMBA', 221, 1, N'231', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (222, N'222', N'IBUMBA', 222, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (223, N'223', N'Igayaza', 223, 1, N'85', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (224, N'224', N'IGOMANDA', 224, 1, N'56', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (225, N'225', N'IGWANJURA', 225, 1, N'76', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (226, N'226', N'IHANGO', 226, 1, N'60', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (227, N'227', N'IHUNGA', 227, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (228, N'228', N'IHUNGA', 228, 1, N'254', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (229, N'229', N'IKAMIRO', 229, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (230, N'230', N'Industrial Ward', 230, 1, N'174', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (231, N'231', N'IRUHURA', 231, 1, N'69', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (232, N'232', N'IRYANGO Ward (formerly Iryango Parish)', 232, 1, N'75', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (233, N'233', N'ISANDARA', 233, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (234, N'234', N'ISULE', 234, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (235, N'235', N'ITERERO', 235, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (236, N'236', N'Itojo', 236, 1, N'65', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (237, N'237', N'JJUNGO', 237, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (238, N'238', N'KAARA', 238, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (239, N'239', N'KABAALE', 239, 1, N'25', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (240, N'240', N'KABAALE / BBIKKA', 240, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (241, N'241', N'KABAARE', 241, 1, N'189', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (242, N'242', N'KABAARE', 242, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (243, N'243', N'KABAKEDI', 243, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (244, N'244', N'KABALA', 244, 1, N'130', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (245, N'245', N'KABALE', 245, 1, N'115', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (246, N'246', N'Kabale', 246, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (247, N'247', N'KABALE', 247, 1, N'216', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (248, N'248', N'KABALE CENTRAL', 248, 1, N'66', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (249, N'249', N'Kabalega', 249, 1, N'126', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (250, N'250', N'Kabamba', 250, 1, N'147', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (251, N'251', N'KABAMBIRO', 251, 1, N'69', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (252, N'252', N'KABANO', 252, 1, N'110', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (253, N'253', N'Kabare', 253, 1, N'84', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (254, N'254', N'KABARE', 254, 1, N'211', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (255, N'255', N'KABASHESHE', 255, 1, N'122', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (256, N'256', N'KABATUNDA', 256, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (257, N'257', N'KABERE', 257, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (258, N'258', N'KABEREBERE', 258, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (259, N'259', N'Kaberebere East (Curved from Kikokwa Parish)', 259, 1, N'70', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (260, N'260', N'Kaberebere South (Curved from Kikokwa Parish)', 260, 1, N'70', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (261, N'261', N'Kaberebere West (Curved from Kikokwa Parish)', 261, 1, N'70', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (262, N'262', N'KABEREBERE-KIJUNGU', 262, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (263, N'263', N'KABEREBERE-KIJUNGU', 263, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (264, N'264', N'KABINGO', 264, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (265, N'265', N'KABINGO', 265, 1, N'23', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (266, N'266', N'KABINGO', 266, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (267, N'267', N'Kabingo', 267, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (268, N'268', N'KABINGO', 268, 1, N'204', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (269, N'269', N'KABINGO', 269, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (270, N'270', N'KABIRIZI', 270, 1, N'165', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (271, N'271', N'KABIRIZI', 271, 1, N'175', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (272, N'272', N'KABIRIZI', 272, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (273, N'273', N'KABUBBU', 273, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (274, N'274', N'KABUGA', 274, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (275, N'275', N'KABUGU', 275, 1, N'74', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (276, N'276', N'KABULANAKA', 276, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (277, N'277', N'KABULE', 277, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (278, N'278', N'KABUMBA', 278, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (279, N'279', N'KABUNGO', 279, 1, N'257', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (280, N'280', N'KABUNYATA', 280, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (281, N'281', N'KABURISOKE WARD', 281, 1, N'97', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (282, N'282', N'Kabusota', 282, 1, N'178', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (283, N'283', N'KABUWAMBO', 283, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (284, N'284', N'Kabuwoko', 284, 1, N'146', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (285, N'285', N'KABUYE', 285, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (286, N'286', N'KABUYIRI', 286, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (287, N'287', N'KABWOMA', 287, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (288, N'288', N'KACEENAGA', 288, 1, N'233', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (289, N'289', N'KACENCE', 289, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (290, N'290', N'KACERERE', 290, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (291, N'291', N'KACUNGIRO', 291, 1, N'204', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (292, N'292', N'KAFUNDA (New, Curved out of NYAKISI)', 292, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (293, N'293', N'KAFUNJO', 293, 1, N'112', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (294, N'294', N'KAFUNJO', 294, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (295, N'295', N'KAFUNJO', 295, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (296, N'296', N'KAGAAGA', 296, 1, N'211', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (297, N'297', N'KAGAARA', 297, 1, N'74', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (298, N'298', N'Kagadi Central', 298, 1, N'79', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (299, N'299', N'KAGAMBA', 299, 1, N'61', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (300, N'300', N'Kagamba', 300, 1, N'80', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (301, N'301', N'KAGANDO', 301, 1, N'149', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (302, N'302', N'KAGARAMA', 302, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (303, N'303', N'KAGARAMA', 303, 1, N'71', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (304, N'304', N'Kagarama Town Board', 304, 1, N'61', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (305, N'305', N'KAGASHE WARD (formerly in Rukungiri T/C)', 305, 1, N'50', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (306, N'306', N'KAGAZI', 306, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (307, N'307', N'KAGEREKAMU', 307, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (308, N'308', N'KAGHEMA', 308, 1, N'165', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (309, N'309', N'KAGHORWE', 309, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (310, N'310', N'KAGOGO', 310, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (311, N'311', N'KAGONGI', 311, 1, N'244', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (312, N'312', N'KAGORORA', 312, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (313, N'313', N'KAGUGU', 313, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (314, N'314', N'KAGUNGA', 314, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (315, N'315', N'KAGUUGO', 315, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (316, N'316', N'KAHARO', 316, 1, N'81', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (317, N'317', N'KAHENDA', 317, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (318, N'318', N'KAHENDERO', 318, 1, N'201', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (319, N'319', N'KAHOKO', 319, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (320, N'320', N'KAHOKO', 320, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (321, N'321', N'KAHOKYA', 321, 1, N'175', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (322, N'322', N'KAHONDO', 322, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (323, N'323', N'KAHONDO', 323, 1, N'192', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (324, N'324', N'Kahunde', 324, 1, N'162', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (325, N'325', N'KAHUNGA', 325, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (326, N'326', N'KAHUNGA WARD', 326, 1, N'268', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (327, N'327', N'KAHUNGYE', 327, 1, N'30', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (328, N'328', N'Kahungye', 328, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (329, N'329', N'KAICUMU', 329, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (330, N'330', N'KAIGORO', 330, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (331, N'331', N'KAIHURA', 331, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (332, N'332', N'KAIKOTI', 332, 1, N'139', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (333, N'333', N'KAINA', 333, 1, N'122', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (334, N'334', N'KAJAHO', 334, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (335, N'335', N'KAJJU', 335, 1, N'77', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (336, N'336', N'Kajunju', 336, 1, N'250', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (337, N'337', N'KAJWENGE', 337, 1, N'149', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (338, N'338', N'KAKABALA', 338, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (339, N'339', N'KAKAKALA', 339, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (340, N'340', N'KAKAMBA', 340, 1, N'211', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (341, N'341', N'KAKANENA', 341, 1, N'244', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (342, N'342', N'Kakanju', 342, 1, N'84', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (343, N'343', N'KAKASI', 343, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (344, N'344', N'Kakayo', 344, 1, N'108', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (345, N'345', N'KAKIIKA', 345, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (346, N'346', N'KAKINDO', 346, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (347, N'347', N'Kakindu Town Board', 347, 1, N'86', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (348, N'348', N'KAKINGA', 348, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (349, N'349', N'KAKINGA', 349, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (350, N'350', N'KAKINGA', 350, 1, N'127', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (351, N'351', N'KAKINZI', 351, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (352, N'352', N'Kakira [New from Nyanga Parish]', 352, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (353, N'353', N'KAKIRI', 353, 1, N'77', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (354, N'354', N'KAKIRI', 354, 1, N'88', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (355, N'355', N'Kakoma', 355, 1, N'91', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (356, N'356', N'KAKOMO', 356, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (357, N'357', N'Kakoni [New from Nyanga Parish]', 357, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (358, N'358', N'KAKORE', 358, 1, N'56', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (359, N'359', N'Kakundi', 359, 1, N'178', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (360, N'360', N'KAKUUTO', 360, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (361, N'361', N'KALAGALA', 361, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (362, N'362', N'KALAGALA WARD', 362, 1, N'92', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (363, N'363', N'KALAMA/KYAMUSISI', 363, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (364, N'364', N'KALANAMU', 364, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (365, N'365', N'KALANGAALO', 365, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (366, N'366', N'KALASA', 366, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (367, N'367', N'Kaleere', 367, 1, N'47', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (368, N'368', N'Kaleere / MALEM', 368, 1, N'47', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (369, N'369', N'KALIITI', 369, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (370, N'370', N'KALISIZO WARD', 370, 1, N'92', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (371, N'371', N'KALONGE', 371, 1, N'165', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (372, N'372', N'KALULE', 372, 1, N'238', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (373, N'373', N'Kalungi', 373, 1, N'160', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (374, N'374', N'KALWANGA', 374, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (375, N'375', N'KALWANGA / KAKUBANSIRI', 375, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (376, N'376', N'KAMAIBA', 376, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (377, N'377', N'KAMASASA', 377, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (378, N'378', N'KAMAYENJE', 378, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (379, N'379', N'KAMAZIMA (New, Curved out of HAIKOONA', 379, 1, N'235', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (380, N'380', N'KAMBUKAMABWE', 380, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (381, N'381', N'KAMIRA', 381, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (382, N'382', N'Kamondo', 382, 1, N'191', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (383, N'383', N'KAMPALA', 383, 1, N'2', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (384, N'384', N'KAMUBEIZI', 384, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (385, N'385', N'KAMUBEIZI', 385, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (386, N'386', N'Kamukalo', 386, 1, N'44', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (387, N'387', N'KAMULI', 387, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (388, N'388', N'KAMURI', 388, 1, N'64', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (389, N'389', N'Kamuroza', 389, 1, N'162', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (390, N'390', N'KAMWENGE', 390, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (391, N'391', N'KAMWENGE WARD', 391, 1, N'97', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (392, N'392', N'Kanabulemu', 392, 1, N'169', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (393, N'393', N'KANAMBA', 393, 1, N'106', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (394, N'394', N'KANARA', 394, 1, N'99', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (395, N'395', N'KANDAGO', 395, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (396, N'396', N'KANGAVE', 396, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (397, N'397', N'KANIMI', 397, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (398, N'398', N'KANJOBE', 398, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (399, N'399', N'KANKINGYI', 399, 1, N'114', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (400, N'400', N'Kanoni', 400, 1, N'179', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (401, N'401', N'KANONI Ward', 401, 1, N'101', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (402, N'402', N'KANTOZI', 402, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (403, N'403', N'Kanyabitara Ward (curved out of Hamurwa parish)', 403, 1, N'57', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (404, N'404', N'KANYAMPUUMO', 404, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (405, N'405', N'KANYANDA', 405, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (406, N'406', N'KANYANGEYA', 406, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (407, N'407', N'KANYANYA', 407, 1, N'139', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (408, N'408', N'KANYANYA', 408, 1, N'187', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (409, N'409', N'KANYARYERU', 409, 1, N'104', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (410, N'410', N'KANYATSI', 410, 1, N'151', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (411, N'411', N'KANYATSI', 411, 1, N'173', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (412, N'412', N'KANYEGARAMIRE', 412, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (413, N'413', N'KANYINYA', 413, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (414, N'414', N'KANYINYA (formerly in Kagunga S/C)', 414, 1, N'260', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (415, N'415', N'KANYWAMAIZI', 415, 1, N'74', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (416, N'416', N'KANZIIRA', 416, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (417, N'417', N'KANZIRO', 417, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (418, N'418', N'KANZIZE', 418, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (419, N'419', N'KAPAAPI', 419, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (420, N'420', N'Karaaro', 420, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (421, N'421', N'KARAMBI', 421, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (422, N'422', N'KARAMBI', 422, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (423, N'423', N'KARANGARA', 423, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (424, N'424', N'Karangara', 424, 1, N'191', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (425, N'425', N'KARANGARO (formerly in Kagunga S/C)', 425, 1, N'269', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (426, N'426', N'KARENGYERE', 426, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (427, N'427', N'KARONGO WARD (from Karongo/Kibanjwa, Budaka & Kiragura parishes, Kitoba S/C)', 427, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (428, N'428', N'KARONGO/KIBANJWA', 428, 1, N'152', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (429, N'429', N'KARORWA', 429, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (430, N'430', N'KARUBANDA', 430, 1, N'68', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (431, N'431', N'KARUBEIZI', 431, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (432, N'432', N'KARUHEMBE', 432, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (433, N'433', N'KARUJANGA', 433, 1, N'241', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (434, N'434', N'KARUNGIBATI', 434, 1, N'58', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (435, N'435', N'KARUNGURU', 435, 1, N'175', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (436, N'436', N'KARUSANDARA', 436, 1, N'106', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (437, N'437', N'KARWERU', 437, 1, N'192', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (438, N'438', N'KARWERU (KAFUNJO)', 438, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (439, N'439', N'KASAALA', 439, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (440, N'440', N'KASAANA', 440, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (441, N'441', N'KASAANA', 441, 1, N'142', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (442, N'442', N'KASABA', 442, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (443, N'443', N'KASAMBYA', 443, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (444, N'444', N'Kasambya Ward', 444, 1, N'174', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (445, N'445', N'KASANA KAVULE', 445, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (446, N'446', N'KASANGALI', 446, 1, N'40', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (447, N'447', N'KASANJE', 447, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (448, N'448', N'Kasankala', 448, 1, N'80', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (449, N'449', N'KASEETA', 449, 1, N'76', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (450, N'450', N'KASENGE', 450, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (451, N'451', N'KASENGEJJE', 451, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (452, N'452', N'Kasensero', 452, 1, N'179', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (453, N'453', N'KasenseroTownboard', 453, 1, N'169', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (454, N'454', N'KASENYI', 454, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (455, N'455', N'KASENYI', 455, 1, N'175', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (456, N'456', N'Kashambya [New from Bitooma Parish]', 456, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (457, N'457', N'KASHARIRA', 457, 1, N'114', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (458, N'458', N'KASHASHA', 458, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (459, N'459', N'KASHASHA', 459, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (460, N'460', N'KASHAYO', 460, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (461, N'461', N'KASHEESHE', 461, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (462, N'462', N'KASHEKYE', 462, 1, N'98', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (463, N'463', N'KASHEKYERA', 463, 1, N'248', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (464, N'464', N'KASHENYI', 464, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (465, N'465', N'KASHENYI', 465, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (466, N'466', N'Kashenyi  (formerly in Nyabubare S/C)', 466, 1, N'63', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (467, N'467', N'KASHEREGYENYI', 467, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (468, N'468', N'KASHOJWA', 468, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (469, N'469', N'KASHOJWA', 469, 1, N'246', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (470, N'470', N'KASHUMBA', 470, 1, N'114', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (471, N'471', N'KASHWA', 471, 1, N'145', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (472, N'472', N'KASIINA WARD', 472, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (473, N'473', N'Kasingo', 473, 1, N'38', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (474, N'474', N'KASINGO Ward', 474, 1, N'26', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (475, N'475', N'KASOKERO', 475, 1, N'173', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (476, N'476', N'KASONGA', 476, 1, N'164', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (477, N'477', N'KASOTA', 477, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (478, N'478', N'KASOZI', 478, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (479, N'479', N'KASUKU', 479, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (480, N'480', N'Kasula', 480, 1, N'160', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (481, N'481', N'KASWA', 481, 1, N'40', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (482, N'482', N'KASWA', 482, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (483, N'483', N'KATABI WARD', 483, 1, N'53', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (484, N'484', N'KATADDE', 484, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (485, N'485', N'KATAGWE', 485, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (486, N'486', N'KATAKALA', 486, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (487, N'487', N'KATAMBALE', 487, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (488, N'488', N'KATANGA', 488, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (489, N'489', N'KATANOGA', 489, 1, N'231', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (490, N'490', N'KATARA WARD', 490, 1, N'119', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (491, N'491', N'KATARAKA', 491, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (492, N'492', N'Katatemwa', 492, 1, N'85', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (493, N'493', N'Katatenga', 493, 1, N'77', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (494, N'494', N'KATEMBE', 494, 1, N'71', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (495, N'495', N'KATENGA', 495, 1, N'81', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (496, N'496', N'KATENGA', 496, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (497, N'497', N'KATEREKE', 497, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (498, N'498', N'KATETE', 498, 1, N'93', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (499, N'499', N'KATHOLHU', 499, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (500, N'500', N'KATIKAMU', 500, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (501, N'501', N'KATIKAMU', 501, 1, N'272', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (502, N'502', N'Katikamwe', 502, 1, N'159', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (503, N'503', N'KATIRI (formely in Kilembe S/C)', 503, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (504, N'504', N'KATOJO', 504, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (505, N'505', N'KATOJO', 505, 1, N'255', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (506, N'506', N'KATOKYE', 506, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (507, N'507', N'KATONYA', 507, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (508, N'508', N'KATOOKE', 508, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (509, N'509', N'KATOOKE', 509, 1, N'119', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (510, N'510', N'KATOOKE (formerly in Bugoye S/C)', 510, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (511, N'511', N'KATOOMA', 511, 1, N'122', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (512, N'512', N'KATOOMI', 512, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (513, N'513', N'KATOVU', 513, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (514, N'514', N'KATUGO', 514, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (515, N'515', N'Katunga', 515, 1, N'84', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (516, N'516', N'KATUNGAMO', 516, 1, N'244', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (517, N'517', N'KATUNGU', 517, 1, N'246', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (518, N'518', N'Katuntu Ward', 518, 1, N'239', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (519, N'519', N'KAVU', 519, 1, N'192', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (520, N'520', N'KAVULE / JJAGALA', 520, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (521, N'521', N'KAWANDA', 521, 1, N'206', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (522, N'522', N'KAWARUJU (New, curved out of MATIRI)', 522, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (523, N'523', N'KAWUNGULI', 523, 1, N'127', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (524, N'524', N'Kawunguli', 524, 1, N'130', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (525, N'525', N'KAYANGA', 525, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (526, N'526', N'Kayanja', 526, 1, N'180', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (527, N'527', N'KAYANZI', 527, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (528, N'528', N'KAYENJE', 528, 1, N'257', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (529, N'529', N'KAYINDU', 529, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (530, N'530', N'Kayonza', 530, 1, N'47', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (531, N'531', N'Kayonza', 531, 1, N'77', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (532, N'532', N'KAYONZA', 532, 1, N'139', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (533, N'533', N'KAYUNGA / GGOMBE WARD', 533, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (534, N'534', N'KAYUNGWE', 534, 1, N'246', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (535, N'535', N'KAZINDIRO', 535, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (536, N'536', N'KAZO', 536, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (537, N'537', N'KAZO NABWERU', 537, 1, N'206', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (538, N'538', N'KEBISINGO', 538, 1, N'69', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (539, N'539', N'KEBISONI TOWN BOARD', 539, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (540, N'540', N'KEIKOTE', 540, 1, N'139', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (541, N'541', N'Keinamo', 541, 1, N'59', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (542, N'542', N'KEITANTUREGYE', 542, 1, N'142', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (543, N'543', N'KEKUBO', 543, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (544, N'544', N'KENDAHI', 544, 1, N'58', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (545, N'545', N'Kenga', 545, 1, N'78', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (546, N'546', N'Kezimbira', 546, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (547, N'547', N'KIBAALE', 547, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (548, N'548', N'Kibaali', 548, 1, N'37', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (549, N'549', N'Kibaare', 549, 1, N'22', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (550, N'550', N'Kibaare (formerly in Bumbaire S/C)', 550, 1, N'223', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (551, N'551', N'KIBANDA', 551, 1, N'98', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (552, N'552', N'KIBANDAMA', 552, 1, N'141', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (553, N'553', N'Kibanga', 553, 1, N'79', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (554, N'554', N'KIBANYI', 554, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (555, N'555', N'KIBARUKO', 555, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (556, N'556', N'Kibazi [New from Mashonga Parish]', 556, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (557, N'557', N'KIBEGA', 557, 1, N'104', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (558, N'558', N'KIBENGO', 558, 1, N'140', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (559, N'559', N'Kibijjo', 559, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (560, N'560', N'KIBIMBIRI', 560, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (561, N'561', N'Kibingo', 561, 1, N'37', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (562, N'562', N'KIBINGO', 562, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (563, N'563', N'KIBINGO Ward', 563, 1, N'26', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (564, N'564', N'KIBIRA', 564, 1, N'236', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (565, N'565', N'KIBIRI', 565, 1, N'201', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (566, N'566', N'KIBIRIZI', 566, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (567, N'567', N'KIBIRIZI', 567, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (568, N'568', N'KIBIRIZI', 568, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (569, N'569', N'KIBIRO', 569, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (570, N'570', N'Kibogo', 570, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (571, N'571', N'Kibona Ward', 571, 1, N'239', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (572, N'572', N'KIBUGA', 572, 1, N'106', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (573, N'573', N'KIBUGA', 573, 1, N'241', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (574, N'574', N'KIBUGUBYA', 574, 1, N'158', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (575, N'575', N'Kibutamo', 575, 1, N'180', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (576, N'576', N'Kibuuka', 576, 1, N'178', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (577, N'577', N'KICHWAMBA', 577, 1, N'216', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (578, N'578', N'Kicucura', 578, 1, N'147', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (579, N'579', N'KICUMBI', 579, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (580, N'580', N'Kicunda', 580, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (581, N'581', N'KICWAMBA', 581, 1, N'249', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (582, N'582', N'KICWAMBA WARD (curved from Butebere & Buchunga Parishes, Buhanika S/C)', 582, 1, N'195', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (583, N'583', N'KIDOMA', 583, 1, N'156', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (584, N'584', N'KIDUNDUMA', 584, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (585, N'585', N'KIDUUMA WARD (Curved frum Nyarugabu Parish, Bugambe S/C)', 585, 1, N'26', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (586, N'586', N'Kifamba', 586, 1, N'130', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (587, N'587', N'KIFAMPA / SABADDU', 587, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (588, N'588', N'KIGAAGA (formerly in Nyakageme S/C)', 588, 1, N'261', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (589, N'589', N'Kigando', 589, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (590, N'590', N'KIGANJA', 590, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (591, N'591', N'KIGARA', 591, 1, N'98', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (592, N'592', N'KIGARAALE', 592, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (593, N'593', N'KIGARAGARA', 593, 1, N'114', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (594, N'594', N'KIGARAMA', 594, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (595, N'595', N'KIGARAMA', 595, 1, N'230', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (596, N'596', N'KIGATA', 596, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (597, N'597', N'Kigenya', 597, 1, N'107', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (598, N'598', N'KIGEZI', 598, 1, N'183', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (599, N'599', N'KIGIRO', 599, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (600, N'600', N'Kigoma', 600, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (601, N'601', N'KIGOMBE', 601, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (602, N'602', N'KIGONGI WARD', 602, 1, N'66', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (603, N'603', N'KIGORO I', 603, 1, N'251', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (604, N'604', N'KIGOTO', 604, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (605, N'605', N'KIGOYERA', 605, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (606, N'606', N'KIGUMA', 606, 1, N'24', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (607, N'607', N'KIGUNDA', 607, 1, N'150', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (608, N'608', N'KIGUNGU WARD', 608, 1, N'54', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (609, N'609', N'KIGYENDWA', 609, 1, N'231', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (610, N'610', N'KIHANDA', 610, 1, N'144', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (611, N'611', N'KIHANDA', 611, 1, N'193', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (612, N'612', N'KIHANDA', 612, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (613, N'613', N'KIHANGA', 613, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (614, N'614', N'KIHANGA', 614, 1, N'252', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (615, N'615', N'KIHARA', 615, 1, N'251', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (616, N'616', N'KIHARA (formerly in Rukoki S/C)', 616, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (617, N'617', N'Kihayura', 617, 1, N'78', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (618, N'618', N'KIHEMBE', 618, 1, N'103', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (619, N'619', N'KIHIHI TOWN BOARD', 619, 1, N'135', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (620, N'620', N'KIHIIHI', 620, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (621, N'621', N'KIHOKO', 621, 1, N'60', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (622, N'622', N'KIHOMBOZA Ward (curved from Kibingo Parish, Busisi S/C; Northern& Western Wards, Hoima T/C)', 622, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (623, N'623', N'KIHUKYA Ward', 623, 1, N'26', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (624, N'624', N'Kihumuro', 624, 1, N'38', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (625, N'625', N'KIHUNGU', 625, 1, N'165', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (626, N'626', N'Kihura', 626, 1, N'182', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (627, N'627', N'Kihurumba', 627, 1, N'38', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (628, N'628', N'KIHUURA', 628, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (629, N'629', N'KIHYO', 629, 1, N'60', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (630, N'630', N'KIHYO', 630, 1, N'153', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (631, N'631', N'Kijejja', 631, 1, N'205', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (632, N'632', N'KIJONGO', 632, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (633, N'633', N'Kijonjo', 633, 1, N'110', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (634, N'634', N'KIJOOHA', 634, 1, N'23', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (635, N'635', N'KIJUBWE', 635, 1, N'122', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (636, N'636', N'KIJUGUTA', 636, 1, N'67', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (637, N'637', N'KIJUMA', 637, 1, N'258', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (638, N'638', N'KIJWEEKA KYANKARAMATA)', 638, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (639, N'639', N'Kikaada', 639, 1, N'108', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (640, N'640', N'KIKAJJO', 640, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (641, N'641', N'KIKANDWA', 641, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (642, N'642', N'KIKANDWA', 642, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (643, N'643', N'KIKARARA', 643, 1, N'36', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (644, N'644', N'KIKOBA', 644, 1, N'52', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (645, N'645', N'KIKODA', 645, 1, N'150', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (646, N'646', N'KIKOKO', 646, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (647, N'647', N'KIKOKWA', 647, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (648, N'648', N'KIKOMA', 648, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (649, N'649', N'KIKONGI', 649, 1, N'36', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (650, N'650', N'KIKONI', 650, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (651, N'651', N'KIKONI WARD', 651, 1, N'46', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (652, N'652', N'KIKUBAMPANGA', 652, 1, N'88', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (653, N'653', N'KIKUBE', 653, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (654, N'654', N'KIKUMIRO', 654, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (655, N'655', N'Kikungwe', 655, 1, N'91', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (656, N'656', N'KIKUNYU', 656, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (657, N'657', N'Kikwaya', 657, 1, N'85', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (658, N'658', N'KIMBUGU', 658, 1, N'76', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (659, N'659', N'Kimukunda', 659, 1, N'110', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (660, N'660', N'Kimuli', 660, 1, N'80', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (661, N'661', N'KIMULI', 661, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (662, N'662', N'Kimuri [New from Bitooma Parish]', 662, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (663, N'663', N'KIMWANYI', 663, 1, N'143', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (664, N'664', N'KINAABA', 664, 1, N'255', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (665, N'665', N'KINOGERO', 665, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (666, N'666', N'KINOGOZI', 666, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (667, N'667', N'KINONI', 667, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (668, N'668', N'KINONI', 668, 1, N'43', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (669, N'669', N'KINYAMASEKE', 669, 1, N'204', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (670, N'670', N'KINYAMASEKE T.C', 670, 1, N'204', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (671, N'671', N'KINYANSANO WARD (formerly in Rukungiri T/C)', 671, 1, N'271', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (672, N'672', N'KIRA', 672, 1, N'143', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (673, N'673', N'KIRABAHO', 673, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (674, N'674', N'KIRAGURA', 674, 1, N'152', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (675, N'675', N'Kirangira', 675, 1, N'80', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (676, N'676', N'Kiranzi', 676, 1, N'182', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (677, N'677', N'KIRARO', 677, 1, N'151', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (678, N'678', N'KIREKA', 678, 1, N'143', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (679, N'679', N'KIREKU', 679, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (680, N'680', N'KIREKU', 680, 1, N'140', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (681, N'681', N'KIREMBE', 681, 1, N'201', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (682, N'682', N'KIREMBE (formerly in Muhokya S/C)', 682, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (683, N'683', N'KIRIGIME', 683, 1, N'68', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (684, N'684', N'Kiriisa', 684, 1, N'207', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (685, N'685', N'KIRINGA', 685, 1, N'93', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (686, N'686', N'KIRINYA', 686, 1, N'143', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (687, N'687', N'KIRIRI', 687, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (688, N'688', N'KIRONGO WARD', 688, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (689, N'689', N'KIRUHURA', 689, 1, N'145', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (690, N'690', N'KIRUNGU', 690, 1, N'252', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (691, N'691', N'KIRYAMULI', 691, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (692, N'692', N'Kiryanga', 692, 1, N'147', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (693, N'693', N'KIRYANGOBE', 693, 1, N'152', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (694, N'694', N'KIRYOOKYA', 694, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (695, N'695', N'KISAANA', 695, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (696, N'696', N'KISAASA', 696, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (697, N'697', N'Kisaasa', 697, 1, N'130', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (698, N'698', N'KISABAGWA', 698, 1, N'158', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (699, N'699', N'KISAKA', 699, 1, N'39', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (700, N'700', N'KISANGA', 700, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (701, N'701', N'KISANGI', 701, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (702, N'702', N'KISANSA', 702, 1, N'234', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (703, N'703', N'KISENYI', 703, 1, N'58', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (704, N'704', N'KISHAMI', 704, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (705, N'705', N'KISHANJE', 705, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (706, N'706', N'KISHENYI', 706, 1, N'103', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (707, N'707', N'KISHURO', 707, 1, N'231', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (708, N'708', N'Kisiita', 708, 1, N'148', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (709, N'709', N'KISIIZI', 709, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (710, N'710', N'KISIMBIRI WARD', 710, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (711, N'711', N'KISOGA', 711, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (712, N'712', N'KISOJO', 712, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (713, N'713', N'Kisojo', 713, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (714, N'714', N'KISOLHOLHO', 714, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (715, N'715', N'KISOZI', 715, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (716, N'716', N'KISUBI', 716, 1, N'115', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (717, N'717', N'KISUKUMA', 717, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (718, N'718', N'Kisunku', 718, 1, N'180', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (719, N'719', N'Kisuula', 719, 1, N'110', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (720, N'720', N'Kisuura', 720, 1, N'41', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (721, N'721', N'Kisyoro Ward (Curved out of  KISYORO parish)', 721, 1, N'75', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (722, N'722', N'Kitaasa', 722, 1, N'44', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (723, N'723', N'Kitaba', 723, 1, N'191', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (724, N'724', N'KITABO', 724, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (725, N'725', N'KITABU', 725, 1, N'165', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (726, N'726', N'Kitagata', 726, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (727, N'727', N'KITAIHUKA', 727, 1, N'235', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (728, N'728', N'KITALA', 728, 1, N'115', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (729, N'729', N'KITAMBA', 729, 1, N'23', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (730, N'730', N'KITANGA', 730, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (731, N'731', N'KITANGA', 731, 1, N'112', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (732, N'732', N'KITASHEKWA', 732, 1, N'257', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (733, N'733', N'KITAYITA', 733, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (734, N'734', N'KITEBERE', 734, 1, N'31', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (735, N'735', N'KITEEZI', 735, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (736, N'736', N'KITEGA', 736, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (737, N'737', N'Kitegura', 737, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (738, N'738', N'Kitegwa', 738, 1, N'79', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (739, N'739', N'Kitema', 739, 1, N'162', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (740, N'740', N'KITEME', 740, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (741, N'741', N'KITEMU / KISOZI', 741, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (742, N'742', N'Kitemuzi', 742, 1, N'182', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (743, N'743', N'KITENDE', 743, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (744, N'744', N'KITENDERI', 744, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (745, N'745', N'KITEREDDE', 745, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (746, N'746', N'KITHOBIRA', 746, 1, N'151', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (747, N'747', N'KITHOLHU', 747, 1, N'151', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (748, N'748', N'KITHOMA', 748, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (749, N'749', N'KITIMBA (formerly in Nyakageme S/C)', 749, 1, N'270', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (750, N'750', N'KITOHWA', 750, 1, N'81', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (751, N'751', N'KITOJO', 751, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (752, N'752', N'Kitojo', 752, 1, N'84', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (753, N'753', N'KITOJO', 753, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (754, N'754', N'KITOJO', 754, 1, N'246', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (755, N'755', N'KITOJO', 755, 1, N'248', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (756, N'756', N'KITOJO', 756, 1, N'252', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (757, N'757', N'KITOJO', 757, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (758, N'758', N'KITOMA', 758, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (759, N'759', N'KITONDO', 759, 1, N'61', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (760, N'760', N'KITONGO', 760, 1, N'31', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (761, N'761', N'KITONGOLE (NEW)', 761, 1, N'150', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (762, N'762', N'KITONGORE', 762, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (763, N'763', N'KITONYA', 763, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (764, N'764', N'KITONZI', 764, 1, N'185', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (765, N'765', N'KITONZI', 765, 1, N'216', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (766, N'766', N'KITONZI WARD', 766, 1, N'97', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (767, N'767', N'KITOOMA', 767, 1, N'241', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (768, N'768', N'KITOONYA', 768, 1, N'14', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (769, N'769', N'KITSUTSU', 769, 1, N'204', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (770, N'770', N'KITSWAMBA', 770, 1, N'153', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (771, N'771', N'KITUMBA', 771, 1, N'154', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (772, N'772', N'KITUNGA', 772, 1, N'112', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (773, N'773', N'KITURA', 773, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (774, N'774', N'Kitutuma', 774, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (775, N'775', N'Kituuma', 775, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (776, N'776', N'Kitwe', 776, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (777, N'777', N'Kitwe', 777, 1, N'253', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (778, N'778', N'Kitwe [New from Kajunju Parish]', 778, 1, N'250', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (779, N'779', N'KIWAFU WARD', 779, 1, N'54', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (780, N'780', N'KIWAWU', 780, 1, N'187', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (781, N'781', N'Kiweeka', 781, 1, N'178', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (782, N'782', N'KIWENDA', 782, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (783, N'783', N'KIWOGOZI', 783, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (784, N'784', N'Kiyaga', 784, 1, N'22', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (785, N'785', N'KIYAGA', 785, 1, N'43', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (786, N'786', N'KIYAGARA', 786, 1, N'83', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (787, N'787', N'KIYANDA', 787, 1, N'238', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (788, N'788', N'KIYANJA', 788, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (789, N'789', N'KIYEBE', 789, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (790, N'790', N'KIYEBE', 790, 1, N'248', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (791, N'791', N'KIYOGANYI', 791, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (792, N'792', N'KIYOORA', 792, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (793, N'793', N'Kiyovu', 793, 1, N'179', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (794, N'794', N'KIZAARA', 794, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (795, N'795', N'KIZIBA', 795, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (796, N'796', N'KIZIBA', 796, 1, N'140', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (797, N'797', N'KIZIBA', 797, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (798, N'798', N'Kizibira', 798, 1, N'146', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (799, N'799', N'Kizinda', 799, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (800, N'800', N'KIZINGA', 800, 1, N'160', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (801, N'801', N'KIZINGA', 801, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (802, N'802', N'KOOME', 802, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (803, N'803', N'KOOME Ward', 803, 1, N'101', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (804, N'804', N'KYAAYI', 804, 1, N'183', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (805, N'805', N'KYABAGAMBA', 805, 1, N'183', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (806, N'806', N'KYABAGONZA (NEW)', 806, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (807, N'807', N'KYABAHESI', 807, 1, N'193', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (808, N'808', N'KYABANDARA', 808, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (809, N'809', N'KYABARANGA', 809, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (810, N'810', N'KYABARUNGIRA', 810, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (811, N'811', N'KYABASHENYI', 811, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (812, N'812', N'KYABATALYA', 812, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (813, N'813', N'Kyabeya', 813, 1, N'207', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (814, N'814', N'Kyabigondo', 814, 1, N'178', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (815, N'815', N'KYABIKERE', 815, 1, N'151', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (816, N'816', N'KYABISAGAZI', 816, 1, N'132', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (817, N'817', N'KYABISHAHO', 817, 1, N'64', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (818, N'818', N'KYABIWA', 818, 1, N'127', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (819, N'819', N'KYABUHANGWA', 819, 1, N'98', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (820, N'820', N'KYABUREERE', 820, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (821, N'821', N'KYABWENGE', 821, 1, N'184', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (822, N'822', N'KYAFOORA', 822, 1, N'244', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (823, N'823', N'Kyakabadima', 823, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (824, N'824', N'KYAKABANDA', 824, 1, N'44', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (825, N'825', N'Kyakabanda', 825, 1, N'147', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (826, N'826', N'KYAKABUNGA', 826, 1, N'225', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (827, N'827', N'KYAKAITABA', 827, 1, N'42', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (828, N'828', N'KYAKANYEMERA', 828, 1, N'83', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (829, N'829', N'KYAKARAFA', 829, 1, N'28', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (830, N'830', N'Kyakarongo', 830, 1, N'108', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (831, N'831', N'KYAKATWIIRE', 831, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (832, N'832', N'KYAKITALE', 832, 1, N'120', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (833, N'833', N'Kyakonda', 833, 1, N'107', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (834, N'834', N'KYALANGA', 834, 1, N'106', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (835, N'835', N'KYALIWAJJALA', 835, 1, N'143', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (836, N'836', N'KYALUGABA', 836, 1, N'127', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (837, N'837', N'KYALUGONDO', 837, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (838, N'838', N'KYAMAKANDA', 838, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (839, N'839', N'KYAMATE WARD', 839, 1, N'48', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (840, N'840', N'KYAMBOGHO', 840, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (841, N'841', N'KYAMBOGHO', 841, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (842, N'842', N'KYAMPANGARA', 842, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (843, N'843', N'KYAMPANGO', 843, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (844, N'844', N'KYAMPISI', 844, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (845, N'845', N'KYAMPISI', 845, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (846, N'846', N'KYAMPOGOLA', 846, 1, N'140', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (847, N'847', N'Kyamugabo [New from Kainamo Parish]', 847, 1, N'59', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (848, N'848', N'KYAMUGENYI', 848, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (849, N'849', N'Kyamuhunga', 849, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (850, N'850', N'KYAMUSONI', 850, 1, N'242', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (851, N'851', N'KYAMUTAASA', 851, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (852, N'852', N'KYAMUTAASA', 852, 1, N'236', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (853, N'853', N'KYAMUTUNZI', 853, 1, N'235', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (854, N'854', N'KYAMWASHA', 854, 1, N'252', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (855, N'855', N'KYANAMIRA', 855, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (856, N'856', N'Kyango', 856, 1, N'91', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (857, N'857', N'KYANGWALI', 857, 1, N'164', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (858, N'858', N'Kyanika', 858, 1, N'72', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (859, N'859', N'KYANJUKI', 859, 1, N'141', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (860, N'860', N'KYANJUKI( formely in Kilembe S/C)', 860, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (861, N'861', N'KYANKARAMATA', 861, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (862, N'862', N'KYANSIMBI', 862, 1, N'205', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (863, N'863', N'KYANUUNA', 863, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (864, N'864', N'KYANYABONGO', 864, 1, N'119', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (865, N'865', N'KYARUBAMBURA', 865, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (866, N'866', N'KYARUGAJU', 866, 1, N'71', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (867, N'867', N'KYARUHUGA', 867, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (868, N'868', N'KYARUKARA', 868, 1, N'120', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (869, N'869', N'KYARUSOZI WARD', 869, 1, N'167', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (870, N'870', N'KYARUYENJE', 870, 1, N'17', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (871, N'871', N'KYARWEHUNDE', 871, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (872, N'872', N'KYASA', 872, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (873, N'873', N'KYASANO', 873, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (874, N'874', N'Kyaterekera', 874, 1, N'196', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (875, N'875', N'KYATOKO (formerly in Kagunga S/C)', 875, 1, N'49', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (876, N'876', N'KYAWANGABI', 876, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (877, N'877', N'Kyebando', 877, 1, N'108', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (878, N'878', N'KYEBANDO', 878, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (879, N'879', N'KYEBISAGAZI', 879, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (880, N'880', N'KYEEYA', 880, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (881, N'881', N'KYEICUMU', 881, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (882, N'882', N'Kyeigombe', 882, 1, N'159', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (883, N'883', N'Kyeitembe (New from Ward II Bushenyi - Ishaka T/C)', 883, 1, N'45', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (884, N'884', N'KYEMBARA', 884, 1, N'39', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (885, N'885', N'KYENGANDO', 885, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (886, N'886', N'KYENGERA', 886, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (887, N'887', N'Kyengeza', 887, 1, N'146', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (888, N'888', N'KYENGEZA', 888, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (889, N'889', N'KYENTALE WARD (Curved from Buchunga Parish, Buhanika S/C & Kinogozi parish, Buhimba S/C)', 889, 1, N'195', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (890, N'890', N'KYENYI', 890, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (891, N'891', N'KYERA', 891, 1, N'3', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (892, N'892', N'KYESHERO', 892, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (893, N'893', N'KYESSIGA WARD  (from Kibingo Parish, Busisi S/C & Kuragura Parish, Kitoba S/C)', 893, 1, N'18', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (894, N'894', N'KYETUME', 894, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (895, N'895', N'KYEZIMBIRE', 895, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (896, N'896', N'KYOBWE', 896, 1, N'122', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (897, N'897', N'KYOGHA', 897, 1, N'39', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (898, N'898', N'KYOGO', 898, 1, N'98', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (899, N'899', N'KYOKYEZO', 899, 1, N'233', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (900, N'900', N'KYONGERA', 900, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (901, N'901', N'LHUHURI', 901, 1, N'184', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (902, N'902', N'LOMULE', 902, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (903, N'903', N'LOWER BUGONGI', 903, 1, N'67', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (904, N'904', N'LUBBE', 904, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (905, N'905', N'LUGAAGA', 905, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (906, N'906', N'LUGEYE', 906, 1, N'88', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (907, N'907', N'LUGO', 907, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (908, N'908', N'LUGUNGUDDE', 908, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (909, N'909', N'LUGUZI', 909, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (910, N'910', N'LUKERERE', 910, 1, N'155', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (911, N'911', N'LUKWANGA', 911, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (912, N'912', N'LUNYOLYA', 912, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (913, N'913', N'LUSANJA', 913, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (914, N'914', N'LUTTISI', 914, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (915, N'915', N'LUWERO', 915, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (916, N'916', N'LUWERO CENTRAL', 916, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (917, N'917', N'LUWERO EAST', 917, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (918, N'918', N'LUWERO WEST', 918, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (919, N'919', N'LUWUNGA', 919, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (920, N'920', N'LUWUNGA', 920, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (921, N'921', N'Lwabakooba', 921, 1, N'80', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (922, N'922', N'Lwakalolo', 922, 1, N'47', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (923, N'923', N'LWAMBAJJO', 923, 1, N'146', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (924, N'924', N'Lwanga', 924, 1, N'77', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (925, N'925', N'Lwankoni', 925, 1, N'180', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (926, N'926', N'LWEMWEDDE', 926, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (927, N'927', N'LWENSINGA', 927, 1, N'155', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (928, N'928', N'LYAKIREMA', 928, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (929, N'929', N'Lyakisana', 929, 1, N'77', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (930, N'930', N'MAAWA', 930, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (931, N'931', N'MABAALE (NEW)', 931, 1, N'236', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (932, N'932', N'MABALE', 932, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (933, N'933', N'MABANGA', 933, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (934, N'934', N'MABONA', 934, 1, N'64', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (935, N'935', N'MABUYE', 935, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (936, N'936', N'MACUNCU', 936, 1, N'142', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (937, N'937', N'MADDU', 937, 1, N'183', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (938, N'938', N'MAFUGA', 938, 1, N'255', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (939, N'939', N'MAGABI', 939, 1, N'127', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (940, N'940', N'MAGALA', 940, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (941, N'941', N'MAGANJO', 941, 1, N'206', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (942, N'942', N'MAGIGYE', 942, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (943, N'943', N'MAGOGGO', 943, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (944, N'944', N'MAGONDO', 944, 1, N'24', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (945, N'945', N'MAGONGA', 945, 1, N'187', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (946, N'946', N'MAHANGO', 946, 1, N'184', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (947, N'947', N'MAHYORO', 947, 1, N'185', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (948, N'948', N'Mairirwe', 948, 1, N'41', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (949, N'949', N'MAKO', 949, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (950, N'950', N'MAKULUBITA', 950, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (951, N'951', N'MALELE', 951, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (952, N'952', N'MALERE', 952, 1, N'42', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (953, N'953', N'MAMBA', 953, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (954, N'954', N'Mambugu', 954, 1, N'79', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (955, N'955', N'MANZE', 955, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (956, N'956', N'Masaaza', 956, 1, N'126', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (957, N'957', N'MASAJJA', 957, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (958, N'958', N'Masaka', 958, 1, N'207', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (959, N'959', N'MASAKA WARD', 959, 1, N'97', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (960, N'960', N'MASERUKA', 960, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (961, N'961', N'MASHAKU', 961, 1, N'230', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (962, N'962', N'Mashonga', 962, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (963, N'963', N'MASOOLI', 963, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (964, N'964', N'MASULIITA', 964, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (965, N'965', N'MASYA', 965, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (966, N'966', N'Matale', 966, 1, N'91', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (967, N'967', N'MATIRI', 967, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (968, N'968', N'MATONGO', 968, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (969, N'969', N'MATUGGA', 969, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (970, N'970', N'MAWALE', 970, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (971, N'971', N'MAWUKI', 971, 1, N'73', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (972, N'972', N'MAYA', 972, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (973, N'973', N'Mayanja', 973, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (974, N'974', N'MAYENGO', 974, 1, N'95', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (975, N'975', N'Mazinga (formelry in of Kakanju S/C)', 975, 1, N'45', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (976, N'976', N'MAZZI', 976, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (977, N'977', N'MBAALE', 977, 1, N'222', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (978, N'978', N'MBABA', 978, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (979, N'979', N'MBALE', 979, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (980, N'980', N'MBATA', 980, 1, N'40', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (981, N'981', N'MBOGO', 981, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (982, N'982', N'MBUNGA', 982, 1, N'141', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (983, N'983', N'MBUNGA (formely in Kilembe S/C)', 983, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (984, N'984', N'MENDE', 984, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (985, N'985', N'MIGADDE', 985, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (986, N'986', N'MIGADDE', 986, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (987, N'987', N'MIGINA', 987, 1, N'258', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (988, N'988', N'MIGYERA', 988, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (989, N'989', N'Minziro', 989, 1, N'169', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (990, N'990', N'MIRAMBI', 990, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (991, N'991', N'MIRAMBIRO', 991, 1, N'254', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (992, N'992', N'MISANDIKA WARD', 992, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (993, N'993', N'MISEEBE', 993, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (994, N'994', N'MISHENYI', 994, 1, N'246', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (995, N'995', N'Miti', 995, 1, N'91', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (996, N'996', N'MITOMA', 996, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (997, N'997', N'Mitukula Ward', 997, 1, N'174', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (998, N'998', N'Mityebiri', 998, 1, N'110', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (999, N'999', N'MOOYA', 999, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1000, N'1000', N'MOWLEM', 1000, 1, N'58', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1001, N'1001', N'MPAKAWELO', 1001, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1002, N'1002', N'Mpamba', 1002, 1, N'162', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1003, N'1003', N'MPANGA', 1003, 1, N'83', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1004, N'1004', N'MPARO', 1004, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1005, N'1005', N'Mpasana', 1005, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1006, N'1006', N'MPIRIGGWA', 1006, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1007, N'1007', N'MPOGO', 1007, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1008, N'1008', N'MPOLOGOMA', 1008, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1009, N'1009', N'MPONDWE', 1009, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1010, N'1010', N'MPONGO', 1010, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1011, N'1011', N'MPUNGA WARD', 1011, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1012, N'1012', N'MPUNGE', 1012, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1013, N'1013', N'MPUNGU', 1013, 1, N'56', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1014, N'1014', N'MPUNGU', 1014, 1, N'199', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1015, N'1015', N'MUBUKU', 1015, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1016, N'1016', N'MUGANDU', 1016, 1, N'241', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1017, N'1017', N'MUGOMA', 1017, 1, N'222', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1018, N'1018', N'Mugyenza', 1018, 1, N'196', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1019, N'1019', N'MUGYERA', 1019, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1020, N'1020', N'MUGYERA', 1020, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1021, N'1021', N'MUHAMBO', 1021, 1, N'12', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1022, N'1022', N'MUHANGA', 1022, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1023, N'1023', N'MUHINDI', 1023, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1024, N'1024', N'MUHOKYA', 1024, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1025, N'1025', N'MUHOKYA', 1025, 1, N'201', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1026, N'1026', N'MUHUMUZA', 1026, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1027, N'1027', N'MUKO WARD', 1027, 1, N'268', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1028, N'1028', N'MUKONI', 1028, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1029, N'1029', N'MUKONO', 1029, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1030, N'1030', N'MUKUNYU', 1030, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1031, N'1031', N'MUNTEME', 1031, 1, N'156', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1032, N'1032', N'MURAMA', 1032, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1033, N'1033', N'MURAMBA', 1033, 1, N'199', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1034, N'1034', N'MURAMBA', 1034, 1, N'255', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1035, N'1035', N'MURAMBI', 1035, 1, N'257', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1036, N'1036', N'MUREMA', 1036, 1, N'114', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1037, N'1037', N'MUSAIJA-MUKURU EAST', 1037, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1038, N'1038', N'MUSAIJA-MUKURU WEST', 1038, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1039, N'1039', N'MUSHANJE', 1039, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1040, N'1040', N'MUTETEMA', 1040, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1041, N'1041', N'MUTOJO', 1041, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1042, N'1042', N'MUTUKULA Town Board', 1042, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1043, N'1043', N'MUTUNDWE', 1043, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1044, N'1044', N'MUTUNGO', 1044, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1045, N'1045', N'MUYANJE', 1045, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1046, N'1046', N'MUYEBE', 1046, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1047, N'1047', N'MUYUMBU', 1047, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1048, N'1048', N'Mwanda', 1048, 1, N'86', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1049, N'1049', N'MWANJARI', 1049, 1, N'68', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1050, N'1050', N'MWARO', 1050, 1, N'118', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1051, N'1051', N'MWENDO', 1051, 1, N'154', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1052, N'1052', N'MWERA', 1052, 1, N'86', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1053, N'1053', N'MWERERWE', 1053, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1054, N'1054', N'MWERUKA', 1054, 1, N'155', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1055, N'1055', N'MWEYA', 1055, 1, N'175', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1056, N'1056', N'MWIBAALE', 1056, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1057, N'1057', N'Mwitanzige', 1057, 1, N'148', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1058, N'1058', N'MYERI', 1058, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1059, N'1059', N'NAAMA', 1059, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1060, N'1060', N'NABATTU', 1060, 1, N'187', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1061, N'1061', N'NABBINGO', 1061, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1062, N'1062', N'Nabigasa', 1062, 1, N'205', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1063, N'1063', N'NABYAJJWE', 1063, 1, N'180', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1064, N'1064', N'NAKABUGO', 1064, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1065, N'1065', N'NAKASEETA', 1065, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1066, N'1066', N'NAKATONYA', 1066, 1, N'238', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1067, N'1067', N'Nakatoogo', 1067, 1, N'205', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1068, N'1068', N'NAKAWUKA', 1068, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1069, N'1069', N'NAKAZIBA', 1069, 1, N'31', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1070, N'1070', N'NAKEDDE', 1070, 1, N'208', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1071, N'1071', N'NAKIBANGA', 1071, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1072, N'1072', N'NAKIGONZA', 1072, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1073, N'1073', N'NAKIJJU', 1073, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1074, N'1074', N'NAKIKOOTA', 1074, 1, N'176', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1075, N'1075', N'NAKIKUNGUBE', 1075, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1076, N'1076', N'NAKWAYA', 1076, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1077, N'1077', N'NAKYELONGOOSA', 1077, 1, N'88', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1078, N'1078', N'NAKYESANJA', 1078, 1, N'206', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1079, N'1079', N'NALUGALA', 1079, 1, N'115', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1080, N'1080', N'NALUVULE', 1080, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1081, N'1081', N'NAMABEYA', 1081, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1082, N'1082', N'NAMALIGA', 1082, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1083, N'1083', N'NAMBEERE', 1083, 1, N'94', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1084, N'1084', N'NAMBI', 1084, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1085, N'1085', N'NAMHUGA (formely in Kilembe S/C)', 1085, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1086, N'1086', N'NAMIGAVU', 1086, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1087, N'1087', N'NAMPUNGE', 1087, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1088, N'1088', N'NAMULANDA', 1088, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1089, N'1089', N'NAMULANDA', 1089, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1090, N'1090', N'NAMUNGO', 1090, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1091, N'1091', N'NAMUSERA', 1091, 1, N'266', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1092, N'1092', N'NAMUSERA WARD', 1092, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1093, N'1093', N'NAMUTAMBA', 1093, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1094, N'1094', N'NAMUTUNKU', 1094, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1095, N'1095', N'NAMWENE', 1095, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1096, N'1096', N'NANGABO', 1096, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1097, N'1097', N'NANGARA', 1097, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1098, N'1098', N'NANGARA', 1098, 1, N'233', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1099, N'1099', N'Nangaro Ward (curved out of Hamurwa parish)', 1099, 1, N'57', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1100, N'1100', N'Nangoma', 1100, 1, N'169', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1101, N'1101', N'NANKONGE', 1101, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1102, N'1102', N'NANSANA 7/8 OCHIENG', 1102, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1103, N'1103', N'NANSANA EAST', 1103, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1104, N'1104', N'NANSANA WEST', 1104, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1105, N'1105', N'NANZIGA', 1105, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1106, N'1106', N'NASSE', 1106, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1107, N'1107', N'NDAGGA', 1107, 1, N'155', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1108, N'1108', N'NDAGO', 1108, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1109, N'1109', N'Ndaiga', 1109, 1, N'196', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1110, N'1110', N'NDEJJE', 1110, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1111, N'1111', N'NDERE', 1111, 1, N'249', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1112, N'1112', N'NDOLO', 1112, 1, N'72', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1113, N'1113', N'NDORERO (formerly in Kagunga S/C)', 1113, 1, N'260', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1114, N'1114', N'NFUMBYE', 1114, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1115, N'1115', N'NGALONKALU', 1115, 1, N'273', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1116, N'1116', N'NGANDWE', 1116, 1, N'31', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1117, N'1117', N'NGANIKO', 1117, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1118, N'1118', N'NGARA', 1118, 1, N'199', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1119, N'1119', N'NGARAMA', 1119, 1, N'211', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1120, N'1120', N'NGERIBALYA', 1120, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1121, N'1121', N'NGOGOLO', 1121, 1, N'34', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1122, N'1122', N'NGOMA', 1122, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1123, N'1123', N'NGOMA', 1123, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1124, N'1124', N'NGOMANENE', 1124, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1125, N'1125', N'NGOMBA', 1125, 1, N'229', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1126, N'1126', N'NGOMBA', 1126, 1, N'244', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1127, N'1127', N'NGOMBE KIHUURA', 1127, 1, N'136', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1128, N'1128', N'NGONGOLO', 1128, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1129, N'1129', N'Ngorora', 1129, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1130, N'1130', N'NGUGULO / GGOMBE', 1130, 1, N'86', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1131, N'1131', N'NJARA', 1131, 1, N'72', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1132, N'1132', N'Nkanga', 1132, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1133, N'1133', N'Nkenda', 1133, 1, N'191', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1134, N'1134', N'Nkenge', 1134, 1, N'107', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1135, N'1135', N'NKOKONJERU', 1135, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1136, N'1136', N'NKOMA', 1136, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1137, N'1137', N'NKOMA', 1137, 1, N'213', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1138, N'1138', N'Nkondo', 1138, 1, N'38', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1139, N'1139', N'NKONDO', 1139, 1, N'76', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1140, N'1140', N'NKONGORO', 1140, 1, N'43', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1141, N'1141', N'NKONGORO', 1141, 1, N'96', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1142, N'1142', N'NKUMBA', 1142, 1, N'115', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1143, N'1143', N'NKUNDA', 1143, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1144, N'1144', N'NKUNGU', 1144, 1, N'23', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1145, N'1145', N'NKUNGULUTALE', 1145, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1146, N'1146', N'Nninzi', 1146, 1, N'92', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1147, N'1147', N'NOMBE I', 1147, 1, N'259', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1148, N'1148', N'NOMBE II', 1148, 1, N'259', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1149, N'1149', N'NOOZI', 1149, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1150, N'1150', N'NORTH EAST WARD', 1150, 1, N'133', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1151, N'1151', N'NORTH WARD', 1151, 1, N'194', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1152, N'1152', N'Northern A Ward', 1152, 1, N'51', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1153, N'1153', N'NORTHERN WARD', 1153, 1, N'82', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1154, N'1154', N'NORTHERN WARD', 1154, 1, N'102', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1155, N'1155', N'NORTHERN WARD', 1155, 1, N'133', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1156, N'1156', N'Northern Ward (Curved out of  KISYORO parish)', 1156, 1, N'75', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1157, N'1157', N'NSAGGU', 1157, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1158, N'1158', N'NSAMBWE', 1158, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1159, N'1159', N'NSAMBYA', 1159, 1, N'86', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1160, N'1160', N'NSANGI', 1160, 1, N'215', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1161, N'1161', N'NSANVU', 1161, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1162, N'1162', N'NSENYI', 1162, 1, N'149', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1163, N'1163', N'NSENYI', 1163, 1, N'242', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1164, N'1164', N'NSHENYI', 1164, 1, N'253', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1165, N'1165', N'NSHORORO', 1165, 1, N'193', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1166, N'1166', N'Nshumi', 1166, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1167, N'1167', N'NSHUNGA', 1167, 1, N'23', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1168, N'1168', N'NSHWERENKYE', 1168, 1, N'125', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1169, N'1169', N'NTALAGI', 1169, 1, N'183', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1170, N'1170', N'NTAMBAZI', 1170, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1171, N'1171', N'NTARA', 1171, 1, N'216', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1172, N'1172', N'NTARABANA', 1172, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1173, N'1173', N'NTONWA', 1173, 1, N'42', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1174, N'1174', N'NTOOMA WARD (FORMERLY CALLED KYAMUTAASA WARD)', 1174, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1175, N'1175', N'NTUGAMO', 1175, 1, N'248', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1176, N'1176', N'NTUNDU', 1176, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1177, N'1177', N'NTUNGAMO', 1177, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1178, N'1178', N'Ntungamo', 1178, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1179, N'1179', N'NTUNGU', 1179, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1180, N'1180', N'NTUNGWA', 1180, 1, N'230', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1181, N'1181', N'Numba', 1181, 1, N'22', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1182, N'1182', N'NYABIHOKO', 1182, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1183, N'1183', N'NYABIKONI', 1183, 1, N'66', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1184, N'1184', N'NYABIREREMA', 1184, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1185, N'1185', N'NYABIRONGO', 1185, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1186, N'1186', N'NYABIRONGO', 1186, 1, N'149', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1187, N'1187', N'NYABISUSI', 1187, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1188, N'1188', N'NYABITEETE', 1188, 1, N'11', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1189, N'1189', N'NYABITEETE', 1189, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1190, N'1190', N'NYABUBAARE', 1190, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1191, N'1191', N'NYABUBARE', 1191, 1, N'36', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1192, N'1192', N'Nyabubare', 1192, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1193, N'1193', N'NYABUBARE', 1193, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1194, N'1194', N'NYABUGANDO', 1194, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1195, N'1195', N'NYABUHARWA', 1195, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1196, N'1196', N'Nyabuhike', 1196, 1, N'162', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1197, N'1197', N'NYABURIZA', 1197, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1198, N'1198', N'NYABUSHABI', 1198, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1199, N'1199', N'NYABUSHENYI', 1199, 1, N'43', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1200, N'1200', N'NYABUSHENYI', 1200, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1201, N'1201', N'NYABUSHENYI', 1201, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1202, N'1202', N'NYABYONDO', 1202, 1, N'52', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1203, N'1203', N'NYAIBANDA', 1203, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1204, N'1204', N'NYAKABAARE', 1204, 1, N'253', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1205, N'1205', N'NYAKABINGO', 1205, 1, N'25', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1206, N'1206', N'NYAKABINGO', 1206, 1, N'251', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1207, N'1207', N'NYAKABINGO (formerly in Rukoki S/C)', 1207, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1208, N'1208', N'NYAKABINGO (formetrly in Rukoki S/C)', 1208, 1, N'20', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1209, N'1209', N'NYAKABINGO II', 1209, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1210, N'1210', N'NYAKABUNGO', 1210, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1211, N'1211', N'NYAKABUNGO', 1211, 1, N'244', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1212, N'1212', N'NYAKACWAMBA', 1212, 1, N'216', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1213, N'1213', N'NYAKAGABAGABA', 1213, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1214, N'1214', N'NYAKAGYERA', 1214, 1, N'163', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1215, N'1215', N'NYAKAHAMA', 1215, 1, N'83', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1216, N'1216', N'NYAKAHITA', 1216, 1, N'225', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1217, N'1217', N'NYAKAHYA', 1217, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1218, N'1218', N'NYAKAHYA', 1218, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1219, N'1219', N'NYAKAINA', 1219, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1220, N'1220', N'NYAKAKONI', 1220, 1, N'189', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1221, N'1221', N'NYAKAMBUGU WARD (curved from Butebere & Buchunga Parishes, Buhanika S/C)', 1221, 1, N'195', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1222, N'1222', N'NYAKARAMBI', 1222, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1223, N'1223', N'NYAKARIRO', 1223, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1224, N'1224', N'Nyakarongo', 1224, 1, N'41', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1225, N'1225', N'NYAKARONGO', 1225, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1226, N'1226', N'NYAKASANGA I', 1226, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1227, N'1227', N'NYAKASANGA II', 1227, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1228, N'1228', N'NYAKASANGA III', 1228, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1229, N'1229', N'NYAKASENYI', 1229, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1230, N'1230', N'NYAKASHARARA', 1230, 1, N'81', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1231, N'1231', N'NYAKASHARARA', 1231, 1, N'125', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1232, N'1232', N'NYAKASHARARA', 1232, 1, N'145', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1233, N'1233', N'NYAKASHEBEYA', 1233, 1, N'112', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1234, N'1234', N'NYAKASHURE', 1234, 1, N'230', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1235, N'1235', N'NYAKASIRU', 1235, 1, N'19', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1236, N'1236', N'NYAKASURA', 1236, 1, N'185', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1237, N'1237', N'NYAKATOMA (New, Curved out of KANYINYA)', 1237, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1238, N'1238', N'NYAKATONZI', 1238, 1, N'204', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1239, N'1239', N'NYAKATUNGURU', 1239, 1, N'135', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1240, N'1240', N'NYAKAZINGA', 1240, 1, N'141', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1241, N'1241', N'NYAKERA', 1241, 1, N'185', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1242, N'1242', N'NYAKIBIGI', 1242, 1, N'61', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1243, N'1243', N'NYAKIGYERA', 1243, 1, N'71', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1244, N'1244', N'NYAKINENGO', 1244, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1245, N'1245', N'NYAKISI', 1245, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1246, N'1246', N'NYAKITABIRE', 1246, 1, N'249', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1247, N'1247', N'NYAKITOJO WARD', 1247, 1, N'167', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1248, N'1248', N'NYAKIYUMBU', 1248, 1, N'228', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1249, N'1249', N'NYAMABARE', 1249, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1250, N'1250', N'NYAMABUGA', 1250, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1251, N'1251', N'Nyamacumu', 1251, 1, N'202', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1252, N'1252', N'NYAMAMBUKA', 1252, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1253, N'1253', N'NYAMANGA', 1253, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1254, N'1254', N'Nyamarunda', 1254, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1255, N'1255', N'NYAMARUNGI', 1255, 1, N'193', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1256, N'1256', N'Nyamasa', 1256, 1, N'41', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1257, N'1257', N'NYAMASHEGWA', 1257, 1, N'69', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1258, N'1258', N'NYAMIGOYE', 1258, 1, N'103', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1259, N'1259', N'NYAMIRAMI', 1259, 1, N'201', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1260, N'1260', N'NYAMIRYANGO', 1260, 1, N'30', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1261, N'1261', N'NYAMISULE', 1261, 1, N'184', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1262, N'1262', N'Nyamiti', 1262, 1, N'202', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1263, N'1263', N'NYAMITSINDO', 1263, 1, N'189', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1264, N'1264', N'NYAMIYAGA', 1264, 1, N'6', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1265, N'1265', N'Nyamiyaga', 1265, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1266, N'1266', N'NYAMUGOYE', 1266, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1267, N'1267', N'Nyamukara', 1267, 1, N'196', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1268, N'1268', N'Nyamunuka Town Board', 1268, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1269, N'1269', N'NYAMUYANJA', 1269, 1, N'231', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1270, N'1270', N'NYAMWERU', 1270, 1, N'233', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1271, N'1271', N'NYAMYEEZI', 1271, 1, N'234', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1272, N'1272', N'Nyanga', 1272, 1, N'4', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1273, N'1273', N'NYANGA', 1273, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1274, N'1274', N'NYANGA', 1274, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1275, N'1275', N'NYANGORONGO', 1275, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1276, N'1276', N'NYANJA', 1276, 1, N'192', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1277, N'1277', N'Nyanseke', 1277, 1, N'202', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1278, N'1278', N'Nyantonzi', 1278, 1, N'196', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1279, N'1279', N'NYARUBAARE', 1279, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1280, N'1280', N'NYARUBANGA', 1280, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1281, N'1281', N'NYARUBUNGO', 1281, 1, N'189', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1282, N'1282', N'NYARUGABU', 1282, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1283, N'1283', N'NYARUGANDO', 1283, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1284, N'1284', N'Nyarugote', 1284, 1, N'220', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1285, N'1285', N'NYARUGUNDA', 1285, 1, N'93', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1286, N'1286', N'NYARUHANGA', 1286, 1, N'62', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1287, N'1287', N'NYARURAMBI', 1287, 1, N'203', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1288, N'1288', N'NYARURAMBI', 1288, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1289, N'1289', N'NYARURAMBI', 1289, 1, N'230', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1290, N'1290', N'NYARURAMBI', 1290, 1, N'246', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1291, N'1291', N'NYARURAMBI', 1291, 1, N'256', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1292, N'1292', N'NYARUTOJO', 1292, 1, N'93', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1293, N'1293', N'NYARWANYA', 1293, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1294, N'1294', N'NYARWIMUKA / KANYAMISEKURU', 1294, 1, N'249', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1295, N'1295', N'NYEIBINGO', 1295, 1, N'124', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1296, N'1296', N'Nyeibingo', 1296, 1, N'159', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1297, N'1297', N'Nyongozi', 1297, 1, N'65', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1298, N'1298', N'OBWENGARA/ IBAARE', 1298, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1299, N'1299', N'OMUNGYENYI', 1299, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1300, N'1300', N'Omwibaale', 1300, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1301, N'1301', N'P. W. D', 1301, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1302, N'1302', N'Paachwa', 1302, 1, N'147', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1303, N'1303', N'PARK WARD', 1303, 1, N'48', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1304, N'1304', N'RAILWAY', 1304, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1305, N'1305', N'RUBANGA', 1305, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1306, N'1306', N'RUBANGO', 1306, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1307, N'1307', N'Rubaya', 1307, 1, N'38', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1308, N'1308', N'RUBIMBWA', 1308, 1, N'144', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1309, N'1309', N'Rubona', 1309, 1, N'78', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1310, N'1310', N'RUBOROGOTA', 1310, 1, N'242', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1311, N'1311', N'RUGARAMA', 1311, 1, N'192', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1312, N'1312', N'RUGARAMA', 1312, 1, N'216', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1313, N'1313', N'Rugashaari', 1313, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1314, N'1314', N'RUGENDABARA', 1314, 1, N'153', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1315, N'1315', N'RUGOMBE TOWN BOARD', 1315, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1316, N'1316', N'RUGONGI', 1316, 1, N'125', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1317, N'1317', N'RUGONJO', 1317, 1, N'83', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1318, N'1318', N'RUGORRA (New, curved out of KANYINYA)', 1318, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1319, N'1319', N'RUGUSE', 1319, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1320, N'1320', N'Ruguuza', 1320, 1, N'126', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1321, N'1321', N'RUHAAMA', 1321, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1322, N'1322', N'RUHANDAGAZI', 1322, 1, N'93', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1323, N'1323', N'Ruhanga', 1323, 1, N'65', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1324, N'1324', N'RUHARA', 1324, 1, N'212', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1325, N'1325', N'Ruharo Ward (formerly in Bumbaire S/C)', 1325, 1, N'45', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1326, N'1326', N'RUHEGA', 1326, 1, N'122', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1327, N'1327', N'RUHIIRA', 1327, 1, N'227', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1328, N'1328', N'RUHOKO', 1328, 1, N'217', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1329, N'1329', N'RUHOKO', 1329, 1, N'236', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1330, N'1330', N'RUHONWA', 1330, 1, N'56', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1331, N'1331', N'Ruhumuro', 1331, 1, N'250', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1332, N'1332', N'RUHUNGA', 1332, 1, N'16', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1333, N'1333', N'RUHUNGA', 1333, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1334, N'1334', N'RUKANGA', 1334, 1, N'43', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1335, N'1335', N'RUKARANGO', 1335, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1336, N'1336', N'RUKIRI', 1336, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1337, N'1337', N'RUKOKI (formetrly in Rukoki S/C)', 1337, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1338, N'1338', N'RUKONI', 1338, 1, N'128', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1339, N'1339', N'RUKONI', 1339, 1, N'253', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1340, N'1340', N'RUKUNGIRI', 1340, 1, N'52', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1341, N'1341', N'Rukunyu', 1341, 1, N'85', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1342, N'1342', N'RUKUUBA', 1342, 1, N'189', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1343, N'1343', N'RURAMBIRA', 1343, 1, N'225', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1344, N'1344', N'RUSESE', 1344, 1, N'39', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1345, N'1345', N'RUSESE', 1345, 1, N'198', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1346, N'1346', N'RUSHAKA', 1346, 1, N'230', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1347, N'1347', N'RUSHAKI', 1347, 1, N'68', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1348, N'1348', N'RUSHASHA', 1348, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1349, N'1349', N'RUSHASHA', 1349, 1, N'254', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1350, N'1350', N'RUSHEBEYA', 1350, 1, N'257', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1351, N'1351', N'RUSHERE', 1351, 1, N'125', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1352, N'1352', N'Rushinya', 1352, 1, N'84', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1353, N'1353', N'RUSHOROZA', 1353, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1354, N'1354', N'RUSHWA', 1354, 1, N'114', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1355, N'1355', N'Ruteete', 1355, 1, N'78', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1356, N'1356', N'RUTEETE', 1356, 1, N'193', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1357, N'1357', N'RUTENGYE', 1357, 1, N'112', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1358, N'1358', N'RUTOOMA', 1358, 1, N'67', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1359, N'1359', N'Rutooma', 1359, 1, N'171', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1360, N'1360', N'RUTUGUNDA', 1360, 1, N'144', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1361, N'1361', N'RUTUNGURU', 1361, 1, N'61', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1362, N'1362', N'RUYANGA', 1362, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1363, N'1363', N'RUYONZA', 1363, 1, N'237', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1364, N'1364', N'Rwabaranga', 1364, 1, N'196', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1365, N'1365', N'RWABARATA', 1365, 1, N'259', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1366, N'1366', N'RWAITENGYA', 1366, 1, N'150', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1367, N'1367', N'RWAKABENGO WARD', 1367, 1, N'262', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1368, N'1368', N'RWAKAKWENDA', 1368, 1, N'74', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1369, N'1369', N'RWAKIRUNGURA', 1369, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1370, N'1370', N'Rwamagando', 1370, 1, N'37', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1371, N'1371', N'Rwamalenge', 1371, 1, N'108', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1372, N'1372', N'Rwambajjo', 1372, 1, N'160', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1373, N'1373', N'RWAMUGOMA', 1373, 1, N'249', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1374, N'1374', N'RWAMUKOORA', 1374, 1, N'117', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1375, N'1375', N'RWAMURANDA', 1375, 1, N'104', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1376, N'1376', N'RWAMURANGA', 1376, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1377, N'1377', N'RWAMWIJUKA', 1377, 1, N'137', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1378, N'1378', N'RWAMWIRE', 1378, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1379, N'1379', N'RWANDA', 1379, 1, N'219', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1380, N'1380', N'RWANGA', 1380, 1, N'135', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1381, N'1381', N'RWANGABO', 1381, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1382, N'1382', N'RWANGUNGA', 1382, 1, N'242', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1383, N'1383', N'RWANJOGYERA', 1383, 1, N'52', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1384, N'1384', N'RWANTAAHA', 1384, 1, N'254', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1385, N'1385', N'RWANYANGWE', 1385, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1386, N'1386', N'RWANYENA', 1386, 1, N'241', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1387, N'1387', N'RWANYUNDO', 1387, 1, N'226', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1388, N'1388', N'RWASHAMAIRE', 1388, 1, N'43', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1389, N'1389', N'Rweega', 1389, 1, N'37', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1390, N'1390', N'RWEMAMBA', 1390, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1391, N'1391', N'RWEMENGO', 1391, 1, N'100', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1392, N'1392', N'RWEMIKOMA', 1392, 1, N'258', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1393, N'1393', N'RWEMIRAMA WARD', 1393, 1, N'97', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1394, N'1394', N'RWENE', 1394, 1, N'15', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1395, N'1395', N'RWENGOMA', 1395, 1, N'247', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1396, N'1396', N'RWENGUBA', 1396, 1, N'39', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1397, N'1397', N'RWENGUBA', 1397, 1, N'153', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1398, N'1398', N'RWENGUHYA', 1398, 1, N'149', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1399, N'1399', N'RWENJAZA', 1399, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1400, N'1400', N'RWENJAZA (NEW FROM MBALE)', 1400, 1, N'8', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1401, N'1401', N'Rwenjeru (formery in Kyabugimbi S/C)', 1401, 1, N'223', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1402, N'1402', N'RWENJUBU', 1402, 1, N'113', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1403, N'1403', N'RWENJUBU', 1403, 1, N'120', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1404, N'1404', N'RWENKUBA', 1404, 1, N'83', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1405, N'1405', N'RWENKUBEBE', 1405, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1406, N'1406', N'RWENSHAMA', 1406, 1, N'36', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1407, N'1407', N'RWENSHAMA', 1407, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1408, N'1408', N'Rwensinga', 1408, 1, N'160', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1409, N'1409', N'RWENTONDO (formerly in Kagunga S/C)', 1409, 1, N'49', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1410, N'1410', N'RWENYANGYE', 1410, 1, N'98', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1411, N'1411', N'RWERERE', 1411, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1412, N'1412', N'RWESANDE', 1412, 1, N'157', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1413, N'1413', N'RWETAMU', 1413, 1, N'142', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1414, N'1414', N'RWETANGO', 1414, 1, N'189', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1415, N'1415', N'RWIBAALE', 1415, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1416, N'1416', N'RWIGI', 1416, 1, N'24', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1417, N'1417', N'RWOHO', 1417, 1, N'252', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1418, N'1418', N'Ryeishe', 1418, 1, N'59', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1419, N'1419', N'SAALI', 1419, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1420, N'1420', N'SAMARIA', 1420, 1, N'134', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1421, N'1421', N'Sango Bay', 1421, 1, N'89', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1422, N'1422', N'SCHEME', 1422, 1, N'251', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1423, N'1423', N'SCHEME (formetrly in Rukoki S', 1423, 1, N'232', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1424, N'1424', N'SEGUKU', 1424, 1, N'263', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1425, N'1425', N'SEKAMULI', 1425, 1, N'1', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1426, N'1426', N'SEKAMULI', 1426, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1427, N'1427', N'SEKANYONYI', 1427, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1428, N'1428', N'SHEBEYA', 1428, 1, N'56', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1429, N'1429', N'SOKOLO', 1429, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1430, N'1430', N'SOUTH EAST', 1430, 1, N'177', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1431, N'1431', N'SOUTH EAST WARD', 1431, 1, N'133', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1432, N'1432', N'SOUTH WARD', 1432, 1, N'194', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1433, N'1433', N'SOUTH WEST WARD', 1433, 1, N'133', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1434, N'1434', N'SOUTHERN WARD', 1434, 1, N'102', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1435, N'1435', N'SOUTHERN WARD (Curved from Central Ward, Hoima T/C)', 1435, 1, N'82', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1436, N'1436', N'SPECIAL AREA', 1436, 1, N'5', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1437, N'1437', N'SSALA / KKONA WARD', 1437, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1438, N'1438', N'SSAMBWE', 1438, 1, N'238', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1439, N'1439', N'SSANGA', 1439, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1440, N'1440', N'SSAZI', 1440, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1441, N'1441', N'SSENTEMA', 1441, 1, N'87', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1442, N'1442', N'SSISA', 1442, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1443, N'1443', N'SSUMBWE', 1443, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1444, N'1444', N'Swazi', 1444, 1, N'161', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1445, N'1445', N'TOONYA', 1445, 1, N'25', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1446, N'1446', N'Town Ward (New from Ward III)', 1446, 1, N'63', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1447, N'1447', N'TOWN ZONE', 1447, 1, N'58', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1448, N'1448', N'TOWNCENTRE', 1448, 1, N'111', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1449, N'1449', N'TTABABINZI', 1449, 1, N'197', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1450, N'1450', N'TTAMU', 1450, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1451, N'1451', N'TTANDA', 1451, 1, N'27', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1452, N'1452', N'TTIKALU / BUJUMBA', 1452, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1453, N'1453', N'TTUMBAALI', 1453, 1, N'190', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1454, N'1454', N'TWEYANZE', 1454, 1, N'116', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1455, N'1455', N'UPPER BUGONGI', 1455, 1, N'67', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1456, N'1456', N'VVUMBA', 1456, 1, N'90', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1457, N'1457', N'VVUMBE', 1457, 1, N'86', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1458, N'1458', N'WABUSANA', 1458, 1, N'140', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1459, N'1459', N'WALULEETA', 1459, 1, N'186', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1460, N'1460', N'WAMALA', 1460, 1, N'206', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1461, N'1461', N'WAMALA', 1461, 1, N'265', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1462, N'1462', N'WAMBALE', 1462, 1, N'55', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1463, N'1463', N'WAMIRONGO', 1463, 1, N'29', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1464, N'1464', N'WAMPEEWO', 1464, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1465, N'1465', N'WANJEYO', 1465, 1, N'170', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1466, N'1466', N'WANJEYO Ward', 1466, 1, N'101', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1467, N'1467', N'WANKANYA', 1467, 1, N'140', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1468, N'1468', N'WARD A', 1468, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1469, N'1469', N'WARD B', 1469, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1470, N'1470', N'WARD C', 1470, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1471, N'1471', N'WARD D', 1471, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1472, N'1472', N'WARD E', 1472, 1, N'267', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1473, N'1473', N'Ward I', 1473, 1, N'223', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1474, N'1474', N'Ward II', 1474, 1, N'45', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1475, N'1475', N'Ward III', 1475, 1, N'63', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1476, N'1476', N'Ward IV', 1476, 1, N'63', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1477, N'1477', N'WATTUBA', 1477, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1478, N'1478', N'WATTUBA', 1478, 1, N'209', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1479, N'1479', N'WEST WARD', 1479, 1, N'194', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1480, N'1480', N'WESTERN WARD', 1480, 1, N'102', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1481, N'1481', N'WESTERN WARD', 1481, 1, N'82', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1482, N'1482', N'WOBULENZI CENTRAL', 1482, 1, N'272', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1483, N'1483', N'WOBULENZI EAST', 1483, 1, N'272', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1484, N'1484', N'WOBULENZI WEST', 1484, 1, N'272', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1485, N'1485', N'Zigoti (Kyengeza)', 1485, 1, N'187', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1486, N'1486', N'ZZIBA', 1486, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1487, N'1487', N'ZZINGA', 1487, 1, N'109', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1488, N'1488', N'Bubango', 1488, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1489, N'1489', N'Bucuuhya', 1489, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1490, N'1490', N'Rwamagando', 1490, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1491, N'1491', N'Rweega', 1491, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE())					
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1492, N'1492', N'Engari', 1492, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1493, N'1493', N'Kakindo', 1493, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1494, N'1494', N'Bishozi', 1494, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1495, N'1495', N'Kantaganya', 1495, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1496, N'1496', N'Keicumu', 1496, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1497, N'1497', N'Kyengando', 1497, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1498, N'1498', N'Nsheshe', 1498, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1499, N'1499', N'Nyamiryango', 1499, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1500, N'1500', N'Bwenzi', 1500, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1501, N'1501', N'Kibingo', 1501, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1502, N'1502', N'Busaza ', 1502, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1503, N'1503', N'Kakindo', 1503, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1504, N'1504', N'Busanza', 1504, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1505, N'1505', N'Nyakabungo', 1505, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1506, N'1506', N'Nkoni', 1506, 1, N'42', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1507, N'1507', N'Kituti', 1507, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1508, N'1508', N'Rutendere', 1508, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1509, N'1509', N'Byeshembe', 1509, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1510, N'1510', N'Rwemirondo', 1510, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1511, N'1511', N'Rwempiri', 1511, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1512, N'1512', N'Gabarungi', 1512, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1513, N'1513', N'Obwengara', 1513, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1514, N'1514', N'Kabujogera', 1514, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1515, N'1515', N'Nsinde', 1515, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1516, N'1516', N'Kivuvu', 1516, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1517, N'1517', N'Misigi', 1517, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1518, N'1518', N'Sserinya', 1518, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1519, N'1519', N'Kibiri', 1519, 1, N'184', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1520, N'1520', N'Katebe', 1520, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1521, N'1521', N'Kisanga ', 1521, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1522, N'1522', N'Kaisekenkere', 1522, 1, N'191', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1523, N'1523', N'Rubumbo', 1523, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1524, N'1524', N'Nkooko', 1524, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1525, N'1525', N'Nyabani', 1525, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1526, N'1526', N'Kigaaga', 1526, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1527, N'1527', N'kiryaburo', 1527, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1528, N'1528', N'Akatojo', 1528, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1529, N'1529', N'Kagango Ward', 1529, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1530, N'1530', N'Kyabukuju', 1530, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1531, N'1531', N'Rwemiriro Ward', 1531, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1532, N'1532', N'Central Ward', 1532, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1533, N'1533', N'Kabwooro', 1533, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1534, N'1534', N'Kanyawawa', 1534, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1535, N'1535', N'Masonde ward', 1535, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1536, N'1536', N'Semwema Ward', 1536, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1537, N'1537', N'Bugyayu', 1537, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1538, N'1538', N'Busembi', 1538, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1539, N'1539', N'Kalama', 1539, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1540, N'1540', N'Kalangaalo', 1540, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1541, N'1541', N'Kikube', 1541, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1542, N'1542', N'Kikuuta', 1542, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1543, N'1543', N'Kiryokya', 1543, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1544, N'1544', N'Kiteredde', 1544, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1545, N'1545', N'Kiyoganyi', 1545, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1546, N'1546', N'Kyamusisi', 1546, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1547, N'1547', N'Mutetema', 1547, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1548, N'1548', N'Buswaka', 1548, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1549, N'1549', N'Kyaterekera ', 1549, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1550, N'1550', N'Nyatonzi', 1550, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1551, N'1551', N'Wangeyo', 1551, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1552, N'1552', N'Kamina', 1552, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1553, N'1553', N'Kitebere ', 1553, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1554, N'1554', N'Kitembere', 1554, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1555, N'1555', N'Ndaiga ', 1555, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1556, N'1556', N'Nyamasoga', 1556, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE())

                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1568, N'1568', N'Bihanga', 1568, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1569, N'1569', N'Kanyarugiri', 1569, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1570, N'1570', N'Kyengando', 1570, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1571, N'1571', N'Nyakabungo', 1571, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1572, N'1572', N'Rushango', 1572, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1573, N'1573', N'Ryabiju', 1573, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1574, N'1574', N'Kicuzi', 1574, 1, N'281', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1575, N'1575', N'Kanywambogo', 1575, 1, N'281', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1576, N'1576', N'Irimya', 1576, 1, N'281', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1577, N'1577', N'Mabona', 1577, 1, N'282', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1578, N'1578', N'Mpasha', 1578, 1, N'282', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1579, N'1579', N'Bwenda', 1579, 1, N'282', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1580, N'1580', N'Kigunga', 1580, 1, N'282', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1581, N'1581', N'Nyarukiika', 1581, 1, N'282', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1582, N'1582', N'Katembe', 1582, 1, N'282', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1583, N'1583', N'Birongo', 1583, 1, N'283', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1584, N'1584', N'Kashozi', 1584, 1, N'283', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1585, N'1585', N'Mushunga', 1585, 1, N'283', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1586, N'1586', N'Muziza', 1586, 1, N'283', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1587, N'1587', N'Rwambu', 1587, 1, N'284', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1588, N'1588', N'Rwenkobwa', 1588, 1, N'284', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1589, N'1589', N'Kamwiri', 1589, 1, N'284', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1590, N'1590', N'Kijongo', 1590, 1, N'284', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1591, N'1591', N'Kihani', 1591, 1, N'285', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1592, N'1592', N'Irwaniro', 1592, 1, N'285', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1593, N'1593', N'Rwengwe', 1593, 1, N'285', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1594, N'1594', N'Katongore', 1594, 1, N'285', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1595, N'1595', N'Keihangara', 1595, 1, N'286', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1596, N'1596', N'Rugaaga', 1596, 1, N'286', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1597, N'1597', N'Rwenshambya', 1597, 1, N'286', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1598, N'1598', N'Bugarama', 1597, 1, N'287', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1599, N'1599', N'Kabaare', 1597, 1, N'287', N'EN', N'1', N'1', GETDATE(), GETDATE())

                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1600, N'1600', N'Kyangundu', 1600, 1, N'288', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1601, N'1601', N'Kyangyenyi', 1601, 1, N'288', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1602, N'1602', N'Rweibare', 1602, 1, N'288', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1603, N'1603', N'Ryenjoki', 1603, 1, N'288', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1604, N'1604', N'Muzira', 1604, 1, N'289', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1605, N'1605', N'Kagongi', 1605, 1, N'289', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1606, N'1606', N'Masyoro', 1606, 1, N'289', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1607, N'1607', N'Kashanjure', 1607, 1, N'289', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1608, N'1608', N'Bwayegamba', 1608, 1, N'290', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1609, N'1609', N'Katooma', 1609, 1, N'290', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1610, N'1610', N'Kigarama', 1610, 1, N'290', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1611, N'1611', N'Kyengando', 1611, 1, N'290', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1612, N'1612', N'Runyinya', 1612, 1, N'290', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1613, N'1613', N'Katojo', 1613, 1, N'291', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1614, N'1614', N'Kyabuharambo', 1614, 1, N'291', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1615, N'1615', N'Nyabwina', 1615, 1, N'291', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1616, N'1616', N'Rugazi', 1616, 1, N'291', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1617, N'1617', N'Buringo', 1617, 1, N'292', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1618, N'1618', N'Kabutsye', 1618, 1, N'292', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1619, N'1619', N'Kanyeganyegye', 1619, 1, N'292', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1620, N'1620', N'Mabaare', 1620, 1, N'292', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1621, N'1621', N'Nyakambu', 1621, 1, N'292', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1622, N'1622', N'Kyamurari North', 1622, 1, N'293', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1623, N'1623', N'Kyamurari South', 1623, 1, N'293', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1624, N'1624', N'Kyarikunda', 1624, 1, N'293', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1625, N'1625', N'Isingiro', 1625, 1, N'293', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1626, N'1626', N'Buraro', 1626, 1, N'294', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1627, N'1627', N'Kyarushakara', 1627, 1, N'294', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1628, N'1628', N'Marembo', 1628, 1, N'294', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1629, N'1629', N'Muhito North', 1629, 1, N'294', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1630, N'1630', N'Muhito South', 1630, 1, N'294', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1631, N'1631', N'Rutooma', 1631, 1, N'294', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1632, N'1632', N'Kashekuro', 1632, 1, N'295', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1633, N'1633', N'Kyeibanga East', 1633, 1, N'295', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1634, N'1634', N'Kyeibanga West', 1634, 1, N'295', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1635, N'1635', N'Karugorora', 1635, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1636, N'1636', N'Kasaana Central', 1636, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1637, N'1637', N'Kasaana East', 1637, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1638, N'1638', N'Kasaana North', 1638, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1639, N'1639', N'Kasaana West', 1639, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1640, N'1640', N'Kyeihara', 1640, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1641, N'1641', N'Rukondo', 1641, 1, N'296', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1642, N'1642', N'Nyakarama North', 1642, 1, N'297', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1643, N'1643', N'Nyakarama South', 1643, 1, N'297', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1644, N'1644', N'Rugarama', 1644, 1, N'297', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1645, N'1645', N'Nyakashoga', 1645, 1, N'297', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1646, N'1646', N'Kishabya', 1646, 1, N'298', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1647, N'1647', N'Kyempitsi East', 1647, 1, N'298', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1648, N'1648', N'Kyempitsi West', 1648, 1, N'298', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1649, N'1649', N'Rwabuza', 1649, 1, N'298', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1650, N'1650', N'Ryakasinga', 1650, 1, N'298', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1651, N'1651', N'Kabwohe', 1651, 1, N'299', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1652, N'1652', N'Kakunyu', 1652, 1, N'299', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1653, N'1653', N'Kyagaaju', 1653, 1, N'299', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1654, N'1654', N'Nyanga', 1654, 1, N'299', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1655, N'1655', N'Rutooma', 1655, 1, N'299', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1656, N'1656', N'Rushozi', 1656, 1, N'299', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1657, N'1657', N'Itendero', 1657, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1658, N'1658', N'Kanyinasheema', 1658, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1659, N'1659', N'Kihunda', 1659, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1660, N'1660', N'Kiziba', 1660, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1661, N'1661', N'Migina', 1661, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1662, N'1662', N'Ndeebo', 1662, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1663, N'1663', N'Rwenshama', 1663, 1, N'300', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1664, N'1664', N'Karera North', 1664, 1, N'301', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1665, N'1665', N'Karera South', 1665, 1, N'301', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1666, N'1666', N'Kashozi Central', 1666, 1, N'301', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1667, N'1667', N'Kashozi East', 1667, 1, N'301', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1668, N'1668', N'Kashozi West', 1668, 1, N'301', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1669, N'1669', N'Kitojo', 1669, 1, N'302', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1670, N'1670', N'Kyabandara', 1670, 1, N'302', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1671, N'1671', N'Nyakashambya', 1671, 1, N'302', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1672, N'1672', N'Nyarweshama', 1672, 1, N'302', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1673, N'1673', N'Rwamujojo', 1673, 1, N'302', N'EN', N'1', N'1', GETDATE(), GETDATE())

                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1674, N'1674', N'Katete', 1674, 1, N'303', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1675, N'1675', N'Kakoba', 1675, 1, N'304', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1676, N'1676', N'Nyamityobora', 1676, 1, N'304', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1677, N'1677', N'Kamukuzi', 1677, 1, N'305', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1678, N'1678', N'Ruharo', 1678, 1, N'305', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1679, N'1679', N'Nyarubanga', 1679, 1, N'306', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1680, N'1680', N'Kakiika', 1680, 1, N'306', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1681, N'1681', N'Kakoma', 1681, 1, N'306', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1682, N'1682', N'Rwemigina', 1682, 1, N'306', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1683, N'1683', N'Bunutsya', 1683, 1, N'306', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1684, N'1684', N'Nyabuhama', 1684, 1, N'307', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1685, N'1685', N'Kishasha', 1685, 1, N'307', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1686, N'1686', N'Rwenjeru', 1686, 1, N'307', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1687, N'1687', N'Nyakinengo', 1687, 1, N'307', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1688, N'1688', N'Katojo', 1688, 1, N'308', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1689, N'1689', N'Bugashe', 1689, 1, N'308', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1690, N'1690', N'Kicwamba', 1690, 1, N'308', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1691, N'1691', N'Rukindo', 1691, 1, N'308', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1692, N'1692', N'Nyarubungo', 1692, 1, N'308', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1693, N'1693', N'Rwakishakizi', 1693, 1, N'308', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1694, N'1694', N'Karwensanga', 1694, 1, N'309', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1695, N'1695', N'Bistya', 1695, 1, N'309', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1696, N'1696', N'Nyamiriro', 1619, 1, N'309', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1697, N'1697', N'Kariro', 1697, 1, N'309', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1698, N'1698', N'Kabaare', 1698, 1, N'309', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1699, N'1699', N'Rwamuhigi', 1699, 1, N'309', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1700, N'1700', N'Nyanja', 1700, 1, N'310', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1701, N'1701', N'Bukiiro', 1701, 1, N'310', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1702, N'1702', N'Rubingo', 1702, 1, N'310', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1703, N'1703', N'Nyarubungo', 1703, 1, N'310', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1704, N'1704', N'Mirongo', 1704, 1, N'311', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1705, N'1705', N'Mitoozo', 1705, 1, N'311', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1706, N'1706', N'Nchune', 1706, 1, N'311', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1707, N'1707', N'Nyabisirira', 1707, 1, N'311', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1708, N'1708', N'Nsiika', 1708, 1, N'312', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1709, N'1709', N'Ntura', 1709, 1, N'312', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1710, N'1710', N'Ngango', 1710, 1, N'312', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1711, N'1711', N'Bwengure', 1711, 1, N'312', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1712, N'1712', N'Kyandahi', 1712, 1, N'312', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1713, N'1713', N'Kibingo', 1713, 1, N'312', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1714, N'1714', N'Rushozi', 1714, 1, N'313', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1715, N'1715', N'Bunenero', 1715, 1, N'313', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1716, N'1716', N'Ruburara', 1716, 1, N'313', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1717, N'1717', N'Itara', 1717, 1, N'313', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1718, N'1718', N'Ruhunga', 1718, 1, N'313', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1719, N'1719', N'Kamushoko', 1719, 1, N'314', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1720, N'1720', N'Kashaka', 1720, 1, N'314', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1721, N'1721', N'Rwenshanku', 1721, 1, N'314', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1722, N'1722', N'Katojo', 1722, 1, N'314', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1723, N'1723', N'Rugarama', 1723, 1, N'314', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1724, N'1724', N'Mugarutsya', 1724, 1, N'314', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1725, N'1725', N'Katazyo', 1725, 1, N'315', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1726, N'1726', N'Mabira', 1726, 1, N'315', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1727, N'1727', N'Kakyerere', 1727, 1, N'315', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1728, N'1728', N'Rwebishekye', 1728, 1, N'315', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1729, N'1729', N'Nyakaikara', 1729, 1, N'316', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1730, N'1730', N'Kongoro', 1730, 1, N'316', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1731, N'1731', N'Bujaga', 1731, 1, N'316', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1732, N'1732', N'Kibare', 1732, 1, N'316', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1733, N'1733', N'Ndeija', 1733, 1, N'316', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1734, N'1734', N'Kakigani', 1734, 1, N'316', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1735, N'1735', N'Rukarabo', 1735, 1, N'317', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1736, N'1736', N'Kigaaga', 1736, 1, N'317', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1737, N'1737', N'Bushwere', 1737, 1, N'317', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1738, N'1738', N'Ryamiyonga', 1738, 1, N'317', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1739, N'1739', N'Ngoma ', 1739, 1, N'317', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1740, N'1740', N'Nyaruhandagazi', 1740, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1741, N'1741', N'Rweibogo', 1741, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1742, N'1742', N'Kibingo', 1742, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1743, N'1743', N'Kabarama', 1743, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1744, N'1744', N'Kamomo', 1744, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1745, N'1745', N'Ngugo ', 1745, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1746, N'1746', N'Kitojo', 1746, 1, N'318', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1747, N'1747', N'Kitunguru ', 1747, 1, N'319', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1748, N'1748', N'Nyakabare', 1748, 1, N'319', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1749, N'1749', N'Nyabinkungu', 1749, 1, N'319', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1750, N'1750', N'Mirama ', 1750, 1, N'319', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1751, N'1751', N'Nyarubungo', 1751, 1, N'319', N'EN', N'1', N'1', GETDATE(), GETDATE())

                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1752, N'1752', N'Busheregyenyi', 1752, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1753, N'1753', N'Karimbiro', 1753, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1754, N'1754', N'Kigarama', 1754, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1755, N'1755', N'Nyakashogwa', 1755, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1756, N'1756', N'Bogongo', 1756, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1757, N'1757', N'Karangara', 1757, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1758, N'1758', N'Kibare', 1758, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1759, N'1759', N'Nyakatsiro', 1759, 1, N'320', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1760, N'1760', N'Buharambo', 1760, 1, N'321', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1761, N'1761', N'Nyabubare', 1761, 1, N'321', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1762, N'1762', N'Nyakatete', 1762, 1, N'321', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1763, N'1763', N'Rurehe North', 1763, 1, N'321', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1764, N'1764', N'Kanyabwanga', 1764, 1, N'322', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1765, N'1765', N'Kashongorero', 1765, 1, N'322', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1766, N'1766', N'Kati', 1766, 1, N'322', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1767, N'1767', N'Rucence', 1767, 1, N'322', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1768, N'1768', N'Bwera', 1768, 1, N'322', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1769, N'1769', N'Bukari', 1769, 1, N'323', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1770, N'1770', N'Bukuba', 1770, 1, N'323', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1771, N'1771', N'kirera', 1771, 1, N'323', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1772, N'1772', N'Kyanziri', 1772, 1, N'323', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1773, N'1773', N'Nyakatooma', 1773, 1, N'323', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1774, N'1774', N'Kyanga', 1774, 1, N'324', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1775, N'1775', N'Kiraramira', 1775, 1, N'324', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1776, N'1776', N'Rwoburunga', 1776, 1, N'324', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1777, N'1777', N'Kagati', 1777, 1, N'324', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1778, N'1778', N'Kashasha', 1778, 1, N'324', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1779, N'1779', N'Igumo', 1779, 1, N'325', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1780, N'1780', N'Mushunga', 1780, 1, N'325', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1781, N'1781', N'Nyakishwogwa', 1781, 1, N'325', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1782, N'1782', N'Katunda', 1782, 1, N'325', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1783, N'1783', N'Nkinga', 1783, 1, N'325', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1784, N'1784', N'Bukongoro', 1784, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1785, N'1785', N'Kyeibare', 1785, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1786, N'1786', N'Nyakizinga', 1786, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1787, N'1787', N'Byakitanga', 1787, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1788, N'1788', N'Bikungu', 1788, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1789, N'1789', N'Furuma', 1789, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1790, N'1790', N'Mahwizi', 1790, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1791, N'1791', N'Muti', 1791, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1792, N'1792', N'Nyakita', 1792, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1793, N'1793', N'Rubirizi', 1793, 1, N'326', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1794, N'1794', N'Bitooma', 1794, 1, N'327', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1795, N'1795', N'Kirembe', 1795, 1, N'327', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1796, N'1796', N'Rukararwe', 1796, 1, N'327', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1797, N'1797', N'Itambiro', 1797, 1, N'327', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1798, N'1798', N'Mayanga', 1798, 1, N'328', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1799, N'1799', N'Rwanja East', 1799, 1, N'328', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1800, N'1800', N'Katagata', 1800, 1, N'328', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1801, N'1801', N'Rwamujura', 1801, 1, N'328', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1802, N'1802', N'Ryengyerero', 1802, 1, N'329', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1803, N'1803', N'Rwanja West', 1803, 1, N'329', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1804, N'1804', N'Rutooma', 1804, 1, N'329', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1805, N'1805', N'Ward 1', 1805, 1, N'330', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1806, N'1806', N'Ward 2', 1806, 1, N'330', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1807, N'1807', N'Central Ward', 1807, 1, N'330', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1808, N'1808', N'Nyarubira-burera', 1808, 1, N'330', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1809, N'1809', N'Ward 1', 1809, 1, N'331', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1810, N'1810', N'Ward 2', 1810, 1, N'331', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1811, N'1811', N'Ward 3', 1811, 1, N'331', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1812, N'1812', N'Ward 4', 1812, 1, N'331', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1813, N'1813', N'NYAMARWA', 1813, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1814, N'1814', N'KYAKATWANGA', 1814, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1815, N'1815', N'KAMONDO', 1815, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1816, N'1816', N'IGONZA', 1816, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1817, N'1817', N'NYAMARUNDA ', 1817, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1818, N'1818', N'BUJOGORO', 1818, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1819, N'1819', N'KIBOGO', 1819, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1820, N'1820', N'KYANYI', 1820, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1821, N'1821', N'KASOZI', 1821, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1822, N'1822', N'MANYINYA', 1822, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1823, N'1823', N'KIHEBEBA', 1823, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1824, N'1824', N'KICUNDA', 1824, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1825, N'1825', N'Balabala Parish', 1825, 1, N'335', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1826, N'1826', N'Buganga-Zzinga Parish', 1826, 1, N'335', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1827, N'1827', N'Bussi Parish', 1827, 1, N'335', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1828, N'1828', N'Gulwe Parish', 1828, 1, N'335', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1829, N'1829', N'Tebankiza Parish', 1829, 1, N'335', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1830, N'1830', N'Buddo Ward ', 1830, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1831, N'1831', N'Kasenge Ward', 1831, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1832, N'1832', N'Katereke Ward', 1832, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1833, N'1833', N'Kikajjo Ward', 1833, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1834, N'1834', N'Kitemu Ward', 1834, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1835, N'1835', N'Kyengera Ward', 1835, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1836, N'1836', N'Maya Ward', 1836, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1837, N'1837', N'Nabbingo Ward', 1837, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1838, N'1838', N'Nanziga Ward', 1838, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1839, N'1839', N'Nsangi Ward', 1839, 1, N'336', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1840, N'1840', N'Bulamu Ward', 1840, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1841, N'1841', N'BWEYOGERERE WARD', 1841, 1, N'338', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1842, N'1842', N'KIRINYA', 1842, 1, N'338', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1843, N'1843', N'BUSABALA WARD', 1843, 1, N'339', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1844, N'1844', N'NAMASUBA WARD', 1844, 1, N'339', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1845, N'1845', N'MASAJJA WARD', 1845, 1, N'339', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1846, N'1846', N'BUNAMWAYA WARD', 1846, 1, N'340', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1847, N'1847', N'MUTUNDWE WARD', 1847, 1, N'340', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1848, N'1848', N'KIREKA WARD', 1848, 1, N'341', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1849, N'1849', N'KYALIWAJALA WARD', 1849, 1, N'341', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1850, N'1850', N'MUTUNGO WARD', 1850, 1, N'342', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1851, N'1851', N'NDEJJE WARD', 1851, 1, N'342', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1852, N'1852', N'SEGUKU WARD', 1852, 1, N'342', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1853, N'1853', N'KAZO WARD', 1853, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1854, N'1854', N'NABWERU NORTH WARD', 1854, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1855, N'1855', N'NABWERU SOUTH WARD', 1855, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1856, N'1856', N'KYADONDO WARD', 1856, 1, N'210', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1857, N'1857', N'Bufunda', 1857, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1858, N'1858', N'Nsasi', 1858, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1859, N'1859', N'Rwobuzizi', 1859, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1860, N'1860', N'Kayenje', 1860, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1861, N'1861', N'Nyamirima', 1861, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1862, N'1862', N'Katongole', 1862, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1863, N'1863', N'Ruyonza', 1863, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1864, N'1864', N'Kikoni', 1864, 1, N'343', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1865, N'1865', N'Kashangula', 1865, 1, N'287', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1866, N'1866', N'Kalangala', 1866, 1, N'287', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1867, N'1867', N'Rwensuri', 1867, 1, N'287', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1868, N'1868', N'Nangabo Parish', 1868, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1869, N'1869', N'Wattuba Parish', 1869, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1870, N'1870', N'wampeewo Parish', 1870, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1871, N'1871', N'katadde Parish', 1871, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1872, N'1872', N'Gayaza Parish', 1872, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1873, N'1873', N'Masooli Parish', 1873, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1874, N'1874', N'kabbubu Parish', 1874, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1875, N'1875', N'kitezi Parish', 1875, 1, N'337', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1876, N'1876', N'Nabumbugu Parish', 1876, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1877, N'1877', N'Nalyankanja Parish', 1877, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1878, N'1878', N'Kiboogo Parish', 1878, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1879, N'1879', N'Bulamu Parish', 1879, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1880, N'1880', N'Kitemu Parish', 1880, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1881, N'1881', N'Bukooba Parish', 1881, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1882, N'1882', N'Namutidde Parish', 1882, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1883, N'1883', N'KAKUBA WARD', 1883, 1, N'118', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1884, N'1884', N'KATARA WARD', 1884, 1, N'118', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1885, N'1885', N'KATOOKE WARD', 1885, 1, N'118', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1886, N'1886', N'IBOROOGA WARD', 1886, 1, N'118', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1887, N'1887', N'KYANYABONGO WARD', 1887, 1, N'118', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1888, N'1888', N'KISENGYA', 1888, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1889, N'1889', N'IKAMIRO', 1889, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1890, N'1890', N'MABUGA', 1890, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1891, N'1891', N'KANGONDO', 1891, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1892, N'1892', N'MBALE', 1892, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1893, N'1893', N'KINYANTALE', 1893, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1894, N'1894', N'MUGOMA', 1894, 1, N'131', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1895, N'1895', N'KIJUMA', 1895, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1896, N'1896', N'MUKONOMURA WARD', 1896, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1897, N'1897', N'KYANYAMUGABO', 1897, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1898, N'1898', N'BUTUBIRI WARD', 1898, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1899, N'1899', N'IGAALI WARD', 1899, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1900, N'1900', N'RWEBALE TC', 1900, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1901, N'1901', N'MUKONOMURA WARD', 1901, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1902, N'1902', N'BUTUNDUZI WARD', 1902, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1903, N'1903', N'KYANYAMUGABO WARD', 1903, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1904, N'1904', N'BUTUBIIRI WARD', 1904, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1905, N'1905', N'IGAALI WARD', 1905, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1906, N'1906', N'RWENYUNYUZI WARD', 1906, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1907, N'1907', N'RUBAKA WARD', 1907, 1, N'33', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1908, N'1908', N'LUWONVU', 1908, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1909, N'1909', N'KABBEGA', 1909, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1910, N'1910', N'KASIKOMBE', 1910, 1, N'264', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1911, N'1911', N'KASIKOMBE', 1911, 1, N'138', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1912, N'1912', N'BAKIJULULA', 1912, 1, N'21', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1913, N'1913', N'NYAKATOKYE', 1913, 1, N'287', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1914, N'1914', N'Butubiri Ward', 1914, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1915, N'1915', N'Rwibale Ward', 1915, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1916, N'1916', N'Mukonomura Ward', 1916, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1917, N'1917', N'Butunduzi Ward', 1917, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1918, N'1918', N'Kyanyamugabo', 1918, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1919, N'1919', N'Igaali Ward', 1919, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1920, N'1920', N'Rwenyunyuzi Ward', 1920, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1921, N'1921', N'Rubaka Ward', 1921, 1, N'344', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1922, N'1922', N'Kijuma', 1922, 1, N'172', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1923, N'1923', N'Kinyantale', 1923, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1924, N'1924', N'Mugoma', 1924, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1925, N'1925', N'Mbale', 1925, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1926, N'1926', N'Kigando', 1926, 1, N'221', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1927, N'1927', N'Namungo', 1927, 1, N'345', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1928, N'1928', N'Kasangula ', 1928, 1, N'345', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1929, N'1929', N'Kiteete', 1929, 1, N'345', N'EN', N'1', N'1', GETDATE(), GETDATE())

                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1557, N'1557', N'Kirasa', 1556, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1558, N'1558', N'Kayanja', 1558, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1559, N'1559', N'Kiyanja', 1559, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1560, N'1560', N'Mutagata', 1560, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1561, N'1561', N'Mugarama', 1561, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1562, N'1562', N'Imara', 1562, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1563, N'1563', N'BUHUMURIRO', 1563, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1564, N'1564', N'BWERANYANGE', 1564, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1565, N'1565', N'NDEEBA', 1565, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1566, N'1566', N'YORODAN', 1566, 1, N'245', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES ( 1567, N'1567', N'RUTI', 1567, 1, N'303', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstYesNo(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_yes_no] ON 
                    INSERT [dbo].[lst_yes_no] ([yn_sid], [yn_id], [yn_name], [yn_order], [yn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Yes', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no] ([yn_sid], [yn_id], [yn_name], [yn_order], [yn_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'0', N'No', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_yes_no] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstYesNoDontKnow(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_yes_no_dont_know] ON 
                    INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'0', N'2. No', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'1', N'1. Yes', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'8. Don''t Know', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_yes_no_dont_know] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstYesNoNotAlways(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_yes_no_not_always] ON 
                    INSERT [dbo].[lst_yes_no_not_always] ([ynna_sid], [ynna_id], [ynna_name], [ynna_order], [ynna_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'0', N'No', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no_not_always] ([ynna_sid], [ynna_id], [ynna_name], [ynna_order], [ynna_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'1', N'Yes', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no_not_always] ([ynna_sid], [ynna_id], [ynna_name], [ynna_order], [ynna_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'Not Always', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_yes_no_not_always] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstYesNoShared(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_yes_no_shared] ON 
                    INSERT [dbo].[lst_yes_no_shared] ([yns_sid], [yns_id], [yns_name], [yns_order], [yns_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'0', N'No latrine', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no_shared] ([yns_sid], [yns_id], [yns_name], [yns_order], [yns_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'1', N'Yes owned', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_no_shared] ([yns_sid], [yns_id], [yns_name], [yns_order], [yns_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'Yes shared', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_yes_no_shared] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLstYesNoneSome(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_yes_none_some] ON 
                    INSERT [dbo].[lst_yes_none_some] ([ynns_sid], [ynns_id], [ynns_name], [ynns_order], [ynns_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'0', N'None or mostly none', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_none_some] ([ynns_sid], [ynns_id], [ynns_name], [ynns_order], [ynns_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'1', N'Yes, most of them', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_yes_none_some] ([ynns_sid], [ynns_id], [ynns_name], [ynns_order], [ynns_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'2', N'Yes, some of them', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_yes_none_some] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLtExclusion(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lt_exclusion] ([lte_id], [lte_name], [lte_order], [lte_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'INVISIBLE', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_exclusion] ([lte_id], [lte_name], [lte_order], [lte_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'NAMECONTAINS', 2, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_exclusion] ([lte_id], [lte_name], [lte_order], [lte_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3', N'NAMEEQUALS', 3, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_exclusion] ([lte_id], [lte_name], [lte_order], [lte_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4', N'NAMEEQUALSTEXT', 4, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_exclusion] ([lte_id], [lte_name], [lte_order], [lte_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5', N'TEXTCONTAINS', 5, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_exclusion] ([lte_id], [lte_name], [lte_order], [lte_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6', N'TEXTEQUALS', 6, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLtLanguage(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[lt_language] ([lng_id], [lng_name], [lng_order], [lng_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'EN', N'English', 1, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLtMessage(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lt_message] ON 
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'The e-mail address provided is invalid. Please check the value and try again.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (29, N'2', N'DREAMS ID already in use.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'5', N'Fields with * are required.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'7', N'Role Name already in use.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'8', N'Saved', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'9', N'Select one or more...', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'10', N'Select one...', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'11', N'The Confirm New Password must match the New Password entry.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'13', N'Email Address already in use.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (28, N'19', N'Name already in use', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'20', N'Phone number must be 10 digits.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'21', N'There is no account under that email address. Please try again.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'22', N'Invalid Password Format', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (12, N'23', N'Password is wrong. Please try again.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (13, N'39', N'Start Date must be before End Date.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (14, N'41', N'CSOs must be smaller or equal to Out Of.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (15, N'42', N'Minutes Reviewed must be smaller or equal to Sub-counties in the District.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (16, N'43', N'Your account is no longer active.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (17, N'44', N'Share of CBSD Budget for Probation must be smaller or equal to CBSD Annual Budget.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (18, N'45', N'CBSD Annual realization must be smaller or equal to CBSD Annual Budget.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (19, N'46', N'Probation Annual realization must be smaller or equal to CBSD Annual realization.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (20, N'49', N'Database Connection Failed. Please ensure that the connection details are correct.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (21, N'50', N'Are you sure you want to delete the checked record(s)?', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (22, N'51', N'Delete Conformation', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (23, N'52', N'Please check the record(s) you wish to delete.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (24, N'53', N'Delete Cancelled', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (25, N'54', N'Phone Number already in Use.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (26, N'55', N'', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (27, N'56', N'Welcome to the SOCY MIS system.\nThis system is used to manage SOCY Household data.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (30, N'57', N'You are about to synchronize with server, this might take some time. Do you want to continue?', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (31, N'58', N'Synchronize with Server', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (32, N'59', N'Synchronization Complete', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (33, N'60', N'Session could not be established.', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (34, N'61', N'New...', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lt_message] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertLtTable(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"SET IDENTITY_INSERT [dbo].[lt_table] ON 
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (1, N'lst_honorific', N'hnr', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (2, N'lt_language', N'lng', N'', 1, 1, 1, 0, 0, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (3, N'lst_district', N'dst', N'lst_region', 1, 1, 1, 1, 1, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (4, N'lst_sub_county', N'sct', N'lst_district', 1, 1, 1, 1, 1, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (5, N'lst_ward', N'wrd', N'lst_sub_county', 1, 1, 1, 1, 1, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (6, N'lst_social_worker_status', N'sws', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (7, N'lst_often_sometimes_never', N'osn', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (8, N'lst_income_contributor', N'icc', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (9, N'lst_income_source', N'ics', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (10, N'lst_record_type', N'rtp', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (11, N'lst_household_status', N'hhs', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (12, N'lst_household_status_reason', N'hhsr', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (13, N'lst_disability_type', N'dtp', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (14, N'lst_hiv_status', N'hst', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (15, N'lst_profession', N'prf', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (16, N'lst_protection', N'prt', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (17, N'lst_gender', N'gnd', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (18, N'lst_yes_no', N'yn', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (19, N'lst_apprenticeship_partner', N'apt', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (20, N'lst_partner', N'prt', N'', 1, 1, 1, 0, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (21, N'lst_cso', N'cso', N'lst_partner', 1, 1, 1, 0, 1, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (22, N'lst_social_worker_type', N'swt', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (23, N'lst_financial_support_type', N'fst', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (24, N'lst_education_level', N'edu', N'', 1, 1, 1, 1, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (25, N'lst_financial_year', N'fy', N'', 1, 1, 1, 0, 1, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (26, N'lst_quarter_year', N'qy', N'', 1, 1, 1, 0, 0, 0)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (27, N'lst_region', N'rgn', N'lst_partner', 1, 1, 1, 0, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (28, N'lst_marital_status', N'mst', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (29, N'lst_institution', N'ins', N'lst_district', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (30, N'lst_service_home_visit', N'shv', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (31, N'lst_training_type', N'ttp', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (32, N'lst_social_economic', N'sec', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (33, N'lst_service_provided', N'svp', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (34, N'lst_service_referred', N'svr', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (35, N'um_permission', N'prm', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (36, N'lst_service_home_visit_previous', N'shvp', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (37, N'lst_education_status', N'est', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (38, N'lst_entry_type', N'etp', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (39, N'lst_parental_status', N'pst', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (40, N'lst_segment', N'sgm', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (41, N'lst_sero_status', N'sst', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (42, N'lst_facility', N'flt', N'', 1, 1, 1, 0, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (43, N'lst_visit', N'vst', N'', 1, 1, 1, 0, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (44, N'lst_dreams_record_type', N'drt', N'', 1, 1, 1, 0, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (45, N'lst_online_status', N'ols', N'', 1, 1, 1, 0, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (46, N'lst_dreams_partner_type', N'dptp', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (47, N'lst_dreams_service', N'dsrv', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (48, N'lst_yes_no_dont_know', N'ynd', N'', 1, 1, 1, 1, 0, 1)
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (49, N'lst_dreams_service_other', N'dso', N'', 1, 1, 1, 1, 0, 1) 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (50, N'lst_gbv_type', N'gbv', N'', 1, 1, 1, 1, 0, 1) 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (51, N'lst_pvc_service', N'pvcs', N'', 1, 1, 1, 1, 0, 1) 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (52, N'lst_pca_type', N'pca', N'', 1, 1, 1, 1, 0, 1) 
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (53, N'lst_dreams_session_action', N'dsa', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (54, N'lst_dreams_session_followup', N'dsf', N'', 1, 1, 1, 1, 0, 1)
                    INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) VALUES (55, N'lst_dreams_session_followup_method', N'dsfm', N'', 1, 1, 1, 1, 0, 1)
                    SET IDENTITY_INSERT [dbo].[lt_table] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertUmPermission(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('1', 'View Social Workers', 1, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('2', 'Manage Social Worder', 2, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('3', 'Manage Para Social Worker', 3, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('4', 'View Households', 4, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('5', 'Manage OVC Identification and Prioritization', 5, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('6', 'Manage Household Assessment', 6, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('7', 'Manage Home Visits', 7, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('8', 'Manage Referrals', 8, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('9', 'Manage Household Details', 9, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('10', 'Manage Household Members', 10, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('11', 'View Result Area 01', 11, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('12', 'View Activity Training', 12, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('13', 'Manage Activity Training', 13, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('14', 'View Apprentiship Register', 14, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('15', 'Manage Apprentiship Register', 15, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('16', 'View Gild Child Education', 16, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('17', 'Manage Girl Child Education', 17, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('18', 'View Service Register', 18, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('19', 'Manage Service Register', 19, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('20', 'View Value Chain Actor Registration', 20, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('21', 'Manage Value Chain Actor Registration', 21, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('22', 'View Result Area 02', 22, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('23', 'View Alternative Care Panel Summary', 23, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('24', 'Manage Alternative Care Panel Summary', 24, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('25', 'View CBSD Resource Allocation', 25, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('26', 'Manage CBSD Resource Allocation', 26, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('27', 'View CBSD Staff and Appraisal Tracking', 27, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('28', 'Manage CBSD Staff and Appraisal Tracking', 28, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('29', 'View District OVC Coordination OVC Data Usage Checklist', 29, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('30', 'Manage District OVC Coordination OVC Data Usage Checklist', 30, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('31', 'View Institutional Care Summary', 31, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('32', 'Manage Institutional Care Summary', 32, 1, '', '1', '1', GETDATE(), GETDATE())
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('33', 'Administrator', 33, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('34', 'View SILC', 34, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('35', 'Manage SILC Group', 35, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('36', 'Manage SILC Savings Register', 36, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('37', 'View SILC Group Financial Register', 37, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('38', 'Manage SILC Group Financial Register', 38, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('39', 'View DREAMS', 39, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('40', 'View DREAMS Enrolment Register', 40, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('41', 'Manage DREAMS Enrolment Register', 41, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('42', 'View DREAMS Members', 42, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('43', 'Manage DREAMS Members', 43, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('44', 'Manage DREAMS Partner Tracking', 44, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('45', 'View DREAMS Post Violence Care', 45, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('46', 'Manage DREAMS Post Violence Care', 46, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('47', 'View DREAMS SINOVUYO Attendance Register', 47, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('48', 'Manage DREAMS SINOVUYO Attendance Register', 48, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('49', 'View DREAMS Stepping Stones Attendance Register', 49, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('50', 'Manage DREAMS Stepping Stones Attendance Register', 50, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('51', 'Manage DREAMS SINOVUYO Missed Session', 51, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('52', 'Manage DREAMS Stepping Stones Missed Session', 52, 1, '', '1', '1', GETDATE(), GETDATE()) 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) VALUES ('53', 'Manage DREAMS HTC Register', 53, 1, '', '1', '1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertUmRole(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[um_role] ([rl_id], [rl_name], [rl_order], [rl_active], [rlt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4155a6c4-f79c-4134-a8bb-2dbef193596f', N'Admin', 1, 1, N'1', N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertUmRoleType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"INSERT [dbo].[um_role_type] ([rlt_id], [rlt_name], [rlt_order], [rlt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N'Admin', 1, 1, N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE())
                    INSERT [dbo].[um_role_type] ([rlt_id], [rlt_name], [rlt_order], [rlt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'Cannot Delete', 2, 1, N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', N'5abdc3f7-a5f5-4f8e-a4b6-96f33275ccee', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertUmUserAndUserRole(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = @"DECLARE @UsrId AS VARCHAR(50)
                SET @UsrId = LOWER(NEWID())
                INSERT [dbo].[um_user] ([usr_id], [usr_password], [usr_password_format], [usr_password_salt], [usr_first_name], [usr_last_name], [usr_email], [usr_phone], [usr_skype], [usr_position], [usr_active], [hnr_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], ofc_id) VALUES (@UsrId, N'admin', 0, N'', N'admin', N'admin', N'admin', N'', N'', N'', 1, N'-1', N'EN', N'1', N'1', GETDATE(), GETDATE(), '') 
                INSERT [dbo].[um_user_role] ([url_id], [rl_id], [usr_id], [usr_id_create], [usr_date_create]) VALUES (N'55fb7d3d-29e5-4633-8a3e-72f626bdbb4e', N'4155a6c4-f79c-4134-a8bb-2dbef193596f', @UsrId, N'1', GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void InsertTempCSOs(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            #region New Temp CSOs
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_cso WHERE cso_id = 'CSO014')
                BEGIN
                INSERT INTO [dbo].[lst_cso]
                           ([cso_id] ,[cso_name] ,[cso_other] ,[cso_order],[cso_active],[prt_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update])
                     VALUES ('CSO014','ACODEV','ACODEV',14,1,'PRT001','1','1',GETDATE(),GETDATE())
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_cso WHERE cso_id = 'CSO015')
                    BEGIN
                    INSERT INTO [dbo].[lst_cso]
                               ([cso_id] ,[cso_name] ,[cso_other] ,[cso_order],[cso_active],[prt_id],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update])
                         VALUES ('CSO015','TPO','TPO',15,1,'PRT003','1','1',GETDATE(),GETDATE())
                    END";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion New Temp CSOs

            #region Kibaale New Sub Counties
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sub_county WHERE sct_id = '332')
                    BEGIN
                    SET IDENTITY_INSERT [dbo].[lst_sub_county] ON 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (332, N'332', N'NYAMARWA', 332, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sub_county WHERE sct_id = '333')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_sub_county] ON 
                        INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (333, N'333', N'NYAMARUNDA', 333, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sub_county WHERE sct_id = '334')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_sub_county] ON 
                        INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (334, N'334', N'KASIMBI', 334, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region Kibale new Wards
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1813')
                    BEGIN
                    SET IDENTITY_INSERT [dbo].[lst_ward] ON
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1813, N'1813', N'NYAMARWA', 1813, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1814')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1814, N'1814', N'KYAKATWANGA', 1814, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1815')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1815, N'1815', N'KAMONDO', 1815, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1816')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1816, N'1816', N'IGONZA', 1816, 1, N'332', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1817')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1817, N'1817', N'NYAMRUNDA ', 1817, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1818')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1818, N'1818', N'BUJOGORO', 1818, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1819')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1819, N'1819', N'KIBOGO', 1819, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
             dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1820')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1820, N'1820', N'KYANYI', 1820, 1, N'333', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1821')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1821, N'1821', N'KASOZI', 1821, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1822')
                        BEGIN
                        SET IDENTITY_INSERT [dbo].[lst_ward] ON
                        INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1822, N'1822', N'MANYINYA', 1822, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                        SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1823')
                            BEGIN
                            SET IDENTITY_INSERT [dbo].[lst_ward] ON
                            INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1823, N'1823', N'KIHEBEBA', 1823, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                            SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                            END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_ward WHERE wrd_id = '1824')
                    BEGIN
                    SET IDENTITY_INSERT [dbo].[lst_ward] ON
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1824, N'1824', N'KICUNDA', 1824, 1, N'334', N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion Kibale new Wards

            #region Remove white spaces and convert to upper case
            strSQL = "UPDATE lst_sub_county SET sct_name = UPPER(sct_name)";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_name = UPPER(wrd_name)";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_district SET dst_name =  LTRIM(RTRIM(dst_name))";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = LTRIM(RTRIM(sct_name))";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_name =  LTRIM(RTRIM(wrd_name))";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #endregion SQL
        }

        private static void Insertlst_agro_scoring_crops(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DELETE FROM lst_agro_scoring_crops";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (1, N'1', N'African Egg plant', 1, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.513' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (2, N'2', N'Cabbage', 2, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (3, N'3', N'Carrots', 3, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (4, N'4', N'Climbing beans', 4, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (5, N'5', N'Cow peas', 5, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (6, N'6', N'Green paper', 6, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (7, N'7', N'Irish potatoes', 7, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (8, N'8', N'Maize', 8, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (9, N'9', N'Mushroom', 9, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (10, N'10', N'Onions', 10, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (11, N'11', N'Passion fruits', 11, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (12, N'12', N'Pine apples (Suckers)', 12, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (13, N'13', N'Rice', 13, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.530' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (14, N'14', N'Tomatoes', 14, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (15, N'15', N'Watermelon', 15, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (16, N'16', N'Beans', 16, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (17, N'17', N'Apples', 17, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (18, N'18', N'Garlic', 18, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')

            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (19, N'19', N'Sandals', 19, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (20, N'20', N'Bakery', 20, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (21, N'21', N'Candles', 21, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (22, N'22', N'Liquid Soap ', 22, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (23, N'23', N'Bar Soap', 23, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (24, N'24', N'Sanitary Towels', 24, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (25, N'25', N'Brickets', 25, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (26, N'26', N'Book making', 26, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (27, N'27', N'Hand bags', 27, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (28, N'28', N'Crafts', 28, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (29, N'29', N'Confectionery', 29, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'2')

            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (30, N'30', N'Amaranthusis(Dodo)', 30, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (31, N'31', N'Spinach', 31, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (32, N'32', N'Collard greens(Sukumawiiki)', 32, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (33, N'33', N'Solanum macrocarpon(Nakati)', 33, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')
            INSERT [dbo].[lst_agro_scoring_crops] ([crop_sid], [crop_id], [crop_name], [crop_order], [crop_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update],[type_id]) VALUES (34, N'34', N'White Japanese egg plants(Ntula)', 34, 1, N'EN', N'Mar  9 2018 11:45AM', N'1', CAST(N'1900-01-02T00:00:00.000' AS DateTime), CAST(N'2018-03-09T11:45:39.543' AS DateTime), N'1')";


            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void Updatelst_agro_scoring_crops(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            strSQL = "DELETE FROM lst_agro_scoring_crops";
            dbCon.ExecuteNonQuery(strSQL);

            Insertlst_agro_scoring_crops(dbCon);
        }

        private static void Insertlst_agro_scoring_parameter(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DELETE FROM lst_agro_scoring_parameter";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Marketability- High', 1, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.833' AS DateTime), CAST(N'2018-03-05T14:12:04.833' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Financial Outlay-Low', 2, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.833' AS DateTime), CAST(N'2018-03-05T14:12:04.833' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Risk-Low', 3, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.833' AS DateTime), CAST(N'2018-03-05T14:12:04.833' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Availability of input - High', 4, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.850' AS DateTime), CAST(N'2018-03-05T14:12:04.850' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Highly Skilled Labor-Low', 5, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.867' AS DateTime), CAST(N'2018-03-05T14:12:04.867' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Return on Investment -High', 6, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.867' AS DateTime), CAST(N'2018-03-05T14:12:04.867' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Personal Interest - High', 7, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.870' AS DateTime), CAST(N'2018-03-05T14:12:04.870' AS DateTime))
                INSERT [dbo].[lst_agro_scoring_parameter] ([asp_sid], [asp_id], [asp_name], [asp_order], [asp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Maturity period- Short', 8, 1, N'EN', N'1', N'1', CAST(N'2018-03-05T14:12:04.870' AS DateTime), CAST(N'2018-03-05T14:12:04.870' AS DateTime))";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void Insertlst_apprenticeship_trade(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DELETE FROM lst_apprenticeship_trade";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Tailoring', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Hair dressing', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Carpentry and joinery', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Motorvechicle Mechanics', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Catering', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Motoycle Mechanics', 6, 1, N'EN', N'1', N'1',GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Welding/Metal Fabrication', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Plumbing', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'Brick /concrete laying', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'Crafts', 10, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_apprenticeship_trade] ([trd_sid], [trd_id], [trd_name], [trd_order], [trd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'11', N'Baking', 11, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void Insertlst_apprenticeship_trade_skills(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DELETE FROM lst_apprenticeship_trade_skills";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'1', N'Make a skirt', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'1', N'Make a dress', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'1', N'Maka a short and long sleeved sweater', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'1', N'Make students uniform', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'1', N'Make a pair of shorts', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'1', N'Make a trouser', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'1', N'Make a Gomesi', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'1', N'Make a kanzu', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'1', N'Make both ladies and men''s suits', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (10, N'10', N'2', N'Braids', 10, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (11, N'11', N'2', N'Twist', 11, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (12, N'12', N'2', N'Pencil', 12, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (13, N'13', N'2', N'Shampoo and set', 13, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (14, N'14', N'2', N'Hair weaving', 14, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (15, N'15', N'2', N'Retouch a client', 15, 1, N'1 ', N'EN', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (16, N'16', N'2', N'Shave hair using different styles', 16, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (17, N'17', N'3', N'Make bed', 17, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (18, N'18', N'3', N'Make a table', 18, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (19, N'19', N'3', N'Make a stool', 19, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (20, N'20', N'3', N'Make office chair', 20, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (21, N'21', N'3', N'make side boards', 21, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (22, N'22', N'3', N'Make window', 22, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (23, N'23', N'3', N'Door', 23, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (24, N'24', N'3', N'Frames', 24, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (25, N'25', N'4', N'Over haul an engine', 25, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (26, N'26', N'4', N'Braking system', 26, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (27, N'27', N'4', N'Hydraulic system', 27, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (28, N'28', N'4', N'Daily checks', 28, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (29, N'29', N'4', N'Tyre service and replacements', 29, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (30, N'30', N'4', N'Ignition system', 30, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (31, N'31', N'4', N'Wiring', 31, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (32, N'32', N'5', N'Cooking traditional foods', 32, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (33, N'33', N'5', N'cooking international foods', 33, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (34, N'34', N'6', N'Over haul an engine', 34, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (35, N'35', N'6', N'Braking system', 35, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (36, N'36', N'6', N'Hydraulic system', 36, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (37, N'37', N'6', N'Daily checks', 37, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (38, N'38', N'6', N'Tyre service and replacement ', 38, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (39, N'39', N'6', N'Ignition system', 39, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (40, N'40', N'6', N'Wiring', 40, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (41, N'41', N'7', N'Fabricating a door', 41, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (42, N'42', N'7', N'fabricating a window', 42, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (43, N'43', N'7', N'Fabricating a window/door frame', 43, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (44, N'44', N'7', N'fabricating a dustbin', 44, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (45, N'45', N'7', N'Fabricating a stool/chair', 45, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (46, N'46', N'7', N'fabricating a table', 46, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (47, N'47', N'8', N'Pipe work', 47, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (48, N'48', N'8', N'laying and fitting', 48, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (49, N'49', N'8', N'Installing showers ', 49, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (50, N'50', N'8', N'Installing a sink/basin', 50, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (51, N'51', N'8', N'Domestic plumbing installation', 51, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (52, N'52', N'9', N'Wall construction-in english', 52, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (53, N'53', N'9', N'Stretcher', 53, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (54, N'54', N'9', N'flemish bonds', 54, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (55, N'55', N'9', N'Rending ', 55, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (56, N'56', N'9', N'Plastering', 56, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (57, N'57', N'10', N'Making bags', 57, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (58, N'58', N'10', N'making baskets', 58, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (59, N'59', N'10', N'making necklaces', 59, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (60, N'60', N'10', N'making jewlery', 60, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (61, N'61', N'10', N'making wallets', 61, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (62, N'62', N'11', N'Baking bread', 62, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (63, N'63', N'11', N'baking cakes', 63, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (64, N'64', N'11', N'baking daddies', 64, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (65, N'65', N'11', N'baking chapati', 65, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (66, N'66', N'11', N'baking cookies', 66, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                INSERT [dbo].[lst_apprenticeship_trade_skills] ([trs_sid], [trs_id], [trd_id], [trs_name], [trs_order], [trs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (67, N'67', N'11', N'making Rolex', 67, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        private static void Insertlst_hh_identification_source(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DELETE FROM lst_hh_identification_source";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'Health facility ', 1, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:29:35.513' AS DateTime), CAST(N'2018-06-14T09:29:35.513' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'Case management book/CDO ', 2, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:31:15.960' AS DateTime), CAST(N'2018-06-14T09:31:15.960' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Police post', 3, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:32:38.940' AS DateTime), CAST(N'2018-06-14T09:32:38.940' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Sunrise list ', 4, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:33:54.780' AS DateTime), CAST(N'2018-06-14T09:33:54.780' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'VHT  ', 5, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:34:52.200' AS DateTime), CAST(N'2018-06-14T09:34:52.200' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'PLHA ', 6, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:35:16.383' AS DateTime), CAST(N'2018-06-14T09:35:16.383' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Hotspot ', 7, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:35:54.547' AS DateTime), CAST(N'2018-06-14T09:35:54.547' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Transitioned', 8, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T09:36:57.183' AS DateTime), CAST(N'2018-06-14T09:36:57.183' AS DateTime))
                        INSERT [dbo].[lst_hh_identification_source] ([ids_sid], [ids_id], [ids_name], [ids_order], [ids_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'SOCHA', 9, 1, N'EN', N'1', N'1', CAST(N'2018-06-14T10:12:18.310' AS DateTime), CAST(N'2018-06-14T10:12:18.310' AS DateTime))";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL

            #region RemoveNulls
            strSQL = "UPDATE hh_ovc_identification_prioritization SET ids_id = '' WHERE ids_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_ovc_identification_prioritization_upload SET ids_id = '' WHERE ids_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion RemoveNulls
        }

        private static void Insertlst_youth_assessment_scoring_parameters(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region SQL
            strSQL = "DELETE FROM lst_youth_assessment_scoring_parameters";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1', N' Interest', 1, 4, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2', N'Admiration', 2, 3, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3', N'Advice from a sponsor/Donor', 3, 2, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4', N'Convinced by friends/relatives/pastor', 4, 1, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5', N'Local artisan/ Master crafts men/Lead farmer ', 5, 4, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6', N'Learning group / Agriculture Extension Worker', 6, 3, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7', N'Vocational Training institute', 7, 2, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8', N'University', 8, 1, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9', N'less than 1 km', 9, 4, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'10', N'1-2 km', 10, 3, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'11', N'3-5 km', 11, 2, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'12', N'more than 5 km', 12, 1, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'13', N'Own savings', 13, 4, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'14', N'Loan from the group/ bank', 14, 3, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'15', N'From family/friend ', 15, 2, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'16', N'Sponsor (NGO/ Government)', 16, 1, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'17', N'Very good  ', 17, 4, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'18', N'Good', 18, 3, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'19', N'Fair', 19, 2, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))
                        INSERT [dbo].[lst_youth_assessment_scoring_parameters] ([ya_score_id], [ya_score_name], [ya_score_order], [ya_score_value], [ya_score_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'20', N'Poor', 20, 1, 1, N'1', N'1', CAST(N'2018-07-25T11:27:18.130' AS DateTime), CAST(N'2018-07-25T11:27:18.130' AS DateTime))";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SQL
        }

        #endregion Insert Data

        private static void RemoveDuplicateKyenjojoSubCounties(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            strSQL = "DELETE FROM lst_sub_county WHERE sct_id = '119'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "DELETE FROM lst_sub_county WHERE sct_id = '222'";
            dbCon.ExecuteNonQuery(strSQL);
        }


        #region Version Control
        #region 1.2
        private static void Version12(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Partners
            strSQL = @"TRUNCATE TABLE [dbo].[lst_partner]
                    INSERT [dbo].[lst_partner] ([prt_id], [prt_name], [prt_other], [prt_order], [prt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'PRT001', N'Action for Community Development', 'AC', 1, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_partner] ([prt_id], [prt_name], [prt_other], [prt_order], [prt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'PRT002', N'For Prevention and Protection against Child Abuse and Neglect', 'AN', 2, 1, N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_partner] ([prt_id], [prt_name], [prt_other], [prt_order], [prt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'PRT003', N'TPO UGANDA', 'TP', 3, 1, N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Partners

            #region Update CSOs
            strSQL = @"UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT002' WHERE [cso_id] = 'CSO001'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT003' WHERE [cso_id] = 'CSO002'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT002' WHERE [cso_id] = 'CSO003'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT001' WHERE [cso_id] = 'CSO004'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT002' WHERE [cso_id] = 'CSO005'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT003' WHERE [cso_id] = 'CSO006'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT003' WHERE [cso_id] = 'CSO007'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT001' WHERE [cso_id] = 'CSO008'
                    UPDATE [dbo].[lst_cso] SET [prt_id] = 'PRT003' WHERE [cso_id] = 'CSO009' 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'CSO010', N'Caritas Kasese', N'Caritas-K', 10, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'CSO010' IN (SELECT cso_id FROM lst_cso WHERE cso_id = 'CSO010') 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'CSO011', N'Reach the youth', N'RTY', 11, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'CSO011' IN (SELECT cso_id FROM lst_cso WHERE cso_id = 'CSO011')  
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'CSO012', N'Send a Cow SACU', N'SACU', 12, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'CSO012' IN (SELECT cso_id FROM lst_cso WHERE cso_id = 'CSO012') 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'CSO013', N'South Eastern Private Promotion Enterprise', N'SEPSEL', 13, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'CSO013' IN (SELECT cso_id FROM lst_cso WHERE cso_id = 'CSO013') ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update CSOs

            #region Update Service Home Visit Previous
            strSQL = @"TRUNCATE TABLE [dbo].[lst_service_home_visit_previous]
					SET IDENTITY_INSERT [dbo].[lst_service_home_visit_previous] ON 
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (1, N'1', N'HCT referral', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (2, N'2', N'ART Referral', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (3, N'3', N'Drug adherence counselling', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (4, N'4', N'Follow up on Household Action Plans', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (5, N'5', N'Physchosocial Support', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (6, N'6', N'Birth Ceriticate Referral', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (7, N'7', N'Nutrition counselling and food security', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (8, N'8', N'Couselling on hygien and sanitation', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_service_home_visit_previous] ([shvp_sid], [shvp_id], [shvp_name], [shvp_order], [shvp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (9, N'9', N'Sensitisation on enrollment and retention in school', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE())
                    SET IDENTITY_INSERT [dbo].[lst_service_home_visit_previous] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Service Home Visit Previous            
        }
        #endregion 1.2

        #region Version 1.3
        private static void Version13(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Partners
            strSQL = @"UPDATE [dbo].[lst_partner] SET [prt_name] = 'African Network for Prevention and Protection against Child Abuse and Neglect' WHERE [prt_id] = 'PRT002' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Partners

            #region Update CSOs
            strSQL = @"TRUNCATE TABLE [dbo].[lst_cso]
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO001', N'The AIDs Support Organisation TASO', N'TASO', 1, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO002', N'Intergrated community based inniative (ICOBI)', N'ICOBI', 2, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO003', N'Action for Behavioural Change', N'ABC', 3, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO004', N'Kibale District Civil Society Organisation (KDCS)', N'KDCS', 4, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO005', N'Friends of Christ Revival Ministry (FOCREVE)', N'FOCREVE', 5, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO006', N'Literacy Action and Development Agency', N'LADA', 6, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO007', N'Intergrated Development Options (IDO)', N'IDO', 7, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO008', N'Environmental Conversation and Agricultural Enhancemnet Uganda (ECO-AGRIC Uganda)', N'ECO-AGRIC', 8, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO009', N'Ankole Private Sector Promotion Center (APROCEL)', N'APROCEL', 9, 1, N'PRT003', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO010', N'Caritas Kasese', N'Caritas-K', 10, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO011', N'Reach the youth', N'RTY', 11, 1, N'PRT001', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO012', N'Send A Cow Uganda (SACU)', N'SACU', 12, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE()) 
                    INSERT [dbo].[lst_cso] ([cso_id], [cso_name], [cso_other], [cso_order], [cso_active], [prt_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'CSO013', N'South Eastern Private Promotion Entreprise', N'SEPSEL', 13, 1, N'PRT002', N'1', N'1', GETDATE(), GETDATE()) ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update CSOs

            #region Update Sub County
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_sub_county] ON 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 274, N'274', N'Bubango', 274, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '274' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '274')
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 275, N'275', N'Engari', 275, 1, N'10', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '275' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '275') 
                    SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Sub County

            #region Update Ward
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_ward] ON
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1488, N'1488', N'Bubango', 1488, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1488' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1488')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1489, N'1489', N'Bucuuhya', 1489, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1489' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1489')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1490, N'1490', N'Rwamagando', 1490, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1490' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1490')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1491, N'1491', N'Rweega', 1491, 1, N'274', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1491' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1491')				
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1492, N'1492', N'Engari', 1492, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1492' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1492')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1493, N'1493', N'Kakindo', 1493, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1493' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1493')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1494, N'1494', N'Bishozi', 1494, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1494' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1494')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1495, N'1495', N'Kantaganya', 1495, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1495' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1495')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1496, N'1496', N'Keicumu', 1496, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1496' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1496')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1497, N'1497', N'Kyengando', 1497, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1497' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1497')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1498, N'1498', N'Nsheshe', 1498, 1, N'275', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1498' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1498')
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Ward
        }
        #endregion Version 1.3

        #region Version 1.4
        private static void Version14(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Household Assessment
            strSQL = @"IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = N'yn_id_water' AND Object_ID = Object_ID(N'hh_household_assessment'))
                BEGIN
                    ALTER TABLE hh_household_assessment ADD yn_id_water VARCHAR(50)
                    ALTER TABLE hh_household_assessment_upload ADD yn_id_water VARCHAR(50)
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = string.Format(@"UPDATE hh_household_assessment SET yn_id_water = '{0}' WHERE yn_id_water IS NULL " +
                "ALTER TABLE hh_household_assessment ALTER COLUMN yn_id_water VARCHAR(50) NOT NULL " +
                "UPDATE hh_household_assessment_upload SET yn_id_water = '{0}' WHERE yn_id_water IS NULL " +
                "ALTER TABLE hh_household_assessment_upload ALTER COLUMN yn_id_water VARCHAR(50) NOT NULL ", utilConstants.cDFEmptyListValue);
            dbCon.ExecuteNonQuery(strSQL);

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_insert] ON [dbo].[hh_household_assessment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_update] ON [dbo].[hh_household_assessment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hha_id) OR UPDATE(hha_comments) OR UPDATE(hha_date) OR UPDATE(hha_num_of_meals) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(icc_id) OR UPDATE(ics_id) OR UPDATE(osn_id_disagreement) OR UPDATE(swk_id) OR UPDATE(yn_id_child_separation) OR UPDATE(yn_id_financial_savings) OR UPDATE(yn_id_food_body_building) OR UPDATE(yn_id_food_energy) OR UPDATE(yn_id_food_protective) OR UPDATE(ynna_id_expenses_food) OR UPDATE(ynna_id_expenses_health) OR UPDATE(ynna_id_expenses_school) OR UPDATE(ynns_id_assets) OR UPDATE(yns_id_latrine))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_upload]
							([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_delete] ON [dbo].[hh_household_assessment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion Update Household Assessment
        }
        #endregion Version 1.4

        #region Version 1.5
        private static void Version15(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Sub County
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_sub_county] ON 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 276, N'276', N'Kakumiro Town Council', 276, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '276' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '276') 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 277, N'277', N'Kalangaalo', 277, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '277' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '277') 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 278, N'278', N'Kyaterekera ', 278, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '278' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '278') 
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 279, N'279', N'Ndaiga ', 279, 1, N'9', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '279' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '279') 
                    SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Sub County

            #region Update Ward
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_ward] ON
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1499, N'1499', N'Nyamiryango', 1499, 1, N'7', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1499' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1499')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1500, N'1500', N'Bwenzi', 1500, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1500' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1500')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1501, N'1501', N'Kibingo', 1501, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1501' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1501')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1502, N'1502', N'Busaza ', 1502, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1502' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1502')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1503, N'1503', N'Kakindo', 1503, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1503' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1503')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1504, N'1504', N'Busanza', 1504, 1, N'32', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1504' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1504')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1505, N'1505', N'Nyakabungo', 1505, 1, N'35', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1505' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1505')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1506, N'1506', N'Nkoni', 1506, 1, N'42', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1506' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1506')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1507, N'1507', N'Kituti', 1507, 1, N'105', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1507' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1507')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1508, N'1508', N'Rutendere', 1508, 1, N'121', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1508' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1508')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1509, N'1509', N'Byeshembe', 1509, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1509' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1509')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1510, N'1510', N'Rwemirondo', 1510, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1510' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1510')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1511, N'1511', N'Rwempiri', 1511, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1511' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1511')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1512, N'1512', N'Gabarungi', 1512, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1512' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1512')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1513, N'1513', N'Obwengara', 1513, 1, N'123', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1513' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1513')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1514, N'1514', N'Kabujogera', 1514, 1, N'129', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1514' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1514')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1515, N'1515', N'Nsinde', 1515, 1, N'166', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1515' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1515')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1516, N'1516', N'Kivuvu', 1516, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1516' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1516')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1517, N'1517', N'Misigi', 1517, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1517' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1517')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1518, N'1518', N'Sserinya', 1518, 1, N'181', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1518' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1518')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1519, N'1519', N'Kibiri', 1519, 1, N'184', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1519' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1519')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1520, N'1520', N'Katebe', 1520, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1520' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1520')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1521, N'1521', N'Kisanga ', 1521, 1, N'188', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1521' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1521')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1522, N'1522', N'Kaisekenkere', 1522, 1, N'191', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1522' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1522')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1523, N'1523', N'Rubumbo', 1523, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1523' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1523')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1524, N'1524', N'Nkooko', 1524, 1, N'214', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1524' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1524')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1525, N'1525', N'Nyabani', 1525, 1, N'218', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1525' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1525')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1526, N'1526', N'Kigaaga', 1526, 1, N'224', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1526' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1526')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1527, N'1527', N'kiryaburo', 1527, 1, N'243', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1527' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1527')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1528, N'1528', N'Akatojo', 1528, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1528' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1528')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1529, N'1529', N'Kagango Ward', 1529, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1529' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1529')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1530, N'1530', N'Kyabukuju', 1530, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1530' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1530')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1531, N'1531', N'Rwemiriro Ward', 1531, 1, N'240', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1531' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1531')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1532, N'1532', N'Central Ward', 1532, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1532' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1532')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1533, N'1533', N'Kabwooro', 1533, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1533' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1533')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1534, N'1534', N'Kanyawawa', 1534, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1534' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1534')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1535, N'1535', N'Masonde ward', 1535, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1535' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1535')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1536, N'1536', N'Semwema Ward', 1536, 1, N'276', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1536' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1536')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1537, N'1537', N'Bugyayu', 1537, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1537' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1537')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1538, N'1538', N'Busembi', 1538, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1538' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1538')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1539, N'1539', N'Kalama', 1539, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1539' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1539')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1540, N'1540', N'Kalangaalo', 1540, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1540' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1540')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1541, N'1541', N'Kikube', 1541, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1541' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1541')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1542, N'1542', N'Kikuuta', 1542, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1542' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1542')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1543, N'1543', N'Kiryokya', 1543, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1543' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1543')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1544, N'1544', N'Kiteredde', 1544, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1544' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1544')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1545, N'1545', N'Kiyoganyi', 1545, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1545' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1545')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1546, N'1546', N'Kyamusisi', 1546, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1546' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1546')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1547, N'1547', N'Mutetema', 1547, 1, N'277', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1547' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1547')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1548, N'1548', N'Buswaka', 1548, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1548' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1548')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1549, N'1549', N'Kyaterekera ', 1549, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1549' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1549')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1550, N'1550', N'Nyatonzi', 1550, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1550' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1550')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1551, N'1551', N'Wangeyo', 1551, 1, N'278', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1551' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1551')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1552, N'1552', N'Kamina', 1552, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1552' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1552')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1553, N'1553', N'Kitebere ', 1553, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1553' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1553')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1554, N'1554', N'Kitembere', 1554, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1554' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1554')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1555, N'1555', N'Ndaiga ', 1555, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1555' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1555')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1556, N'1556', N'Nyamasoga', 1556, 1, N'279', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1556' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1556')
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Ward
        }
        #endregion Version 1.5

        #region Version 1.6
        private static void Version16(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Data Tables
            #region DREAMS HTC Register
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_htc_register')
                BEGIN
		            CREATE TABLE [dbo].[drm_htc_register](
	                    [dhr_id] [varchar](50) NOT NULL,
	                    [dhr_result_01] [varchar](500) NOT NULL,
	                    [dhr_result_01_date] [datetime] NOT NULL,
	                    [dhr_result_02] [varchar](500) NOT NULL,
	                    [dhr_result_02_date] [datetime] NOT NULL,
	                    [dhr_result_03] [varchar](500) NOT NULL,
	                    [dhr_result_03_date] [datetime] NOT NULL,
	                    [dhr_result_04] [varchar](500) NOT NULL,
	                    [dhr_result_04_date] [datetime] NOT NULL,
	                    [dhr_result_05] [varchar](500) NOT NULL,
	                    [dhr_result_05_date] [datetime] NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_htc_register] PRIMARY KEY CLUSTERED 
                    (
	                    [dhr_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_htc_register_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_htc_register_upload](
	                    [dhr_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dhr_id] [varchar](50) NOT NULL,
	                    [dhr_result_01] [varchar](500) NOT NULL,
	                    [dhr_result_01_date] [datetime] NOT NULL,
	                    [dhr_result_02] [varchar](500) NOT NULL,
	                    [dhr_result_02_date] [datetime] NOT NULL,
	                    [dhr_result_03] [varchar](500) NOT NULL,
	                    [dhr_result_03_date] [datetime] NOT NULL,
	                    [dhr_result_04] [varchar](500) NOT NULL,
	                    [dhr_result_04_date] [datetime] NOT NULL,
	                    [dhr_result_05] [varchar](500) NOT NULL,
	                    [dhr_result_05_date] [datetime] NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_htc_register_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dhr_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_insert] ON [dbo].[drm_htc_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_htc_register_upload]
                        ([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_update] ON [dbo].[drm_htc_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dhr_id) OR UPDATE(dhr_result_01) OR UPDATE(dhr_result_01_date) OR UPDATE(dhr_result_02) OR UPDATE(dhr_result_02_date) OR UPDATE(dhr_result_03) OR UPDATE(dhr_result_03_date) OR UPDATE(dhr_result_04) OR UPDATE(dhr_result_04_date) OR UPDATE(dhr_result_05) OR UPDATE(dhr_result_05_date) OR UPDATE(dm_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_htc_register_upload]
							([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_delete] ON [dbo].[drm_htc_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_htc_register_upload]
                        ([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id],  
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS HTC Register

            #region DREAMS Partner
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner')
                BEGIN
		            CREATE TABLE [dbo].[drm_partner](
	                    [dp_id] [varchar](50) NOT NULL,
	                    [dp_first_name] [varchar](500) NOT NULL,
	                    [dp_last_name] [varchar](500) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_partner] PRIMARY KEY CLUSTERED 
                    (
	                    [dp_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_upload')
                BEGIN
                    CREATE TABLE [dbo].[drm_partner_upload](
	                    [dp_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dp_id] [varchar](50) NOT NULL,
	                    [dp_first_name] [varchar](500) NOT NULL,
	                    [dp_last_name] [varchar](500) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_partner_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dp_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_insert] ON [dbo].[drm_partner] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_upload]
                        ([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_update] ON [dbo].[drm_partner] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dp_id) OR UPDATE(dp_first_name) OR UPDATE(dp_last_name) OR UPDATE(dm_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_partner_upload]
							([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_delete] ON [dbo].[drm_partner] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_upload]
                        ([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Partner

            #region DREAMS Partner Tracking
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking')
                BEGIN 
                    CREATE TABLE [dbo].[drm_partner_tracking](
                        [dpt_id] [varchar](50) NOT NULL, 
                        [dpt_date] [datetime] NOT NULL,
                        [dpt_dptp_other] [varchar](max) NOT NULL,
                        [dpt_phone] [varchar](50) NOT NULL,
                        [dpt_address] [varchar](max) NOT NULL,
                        [dpt_service] [varchar](max) NOT NULL,
                        [dp_id] [varchar](50) NOT NULL,
                        [dptp_id] [varchar](50) NOT NULL,
                        [hst_id] [varchar](50) NOT NULL,
                        [yn_id_traced] [varchar](50) NOT NULL,
                        [ynd_id_vmmc] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_partner_tracking] PRIMARY KEY CLUSTERED 
                    (
	                    [dpt_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking_upload')
                BEGIN 
                    CREATE TABLE [dbo].[drm_partner_tracking_upload](
	                    [dpt_sid] [int] IDENTITY(1,1) NOT NULL,
                        [dpt_id] [varchar](50) NOT NULL, 
                        [dpt_date] [datetime] NOT NULL,
                        [dpt_dptp_other] [varchar](max) NOT NULL,
                        [dpt_phone] [varchar](50) NOT NULL,
                        [dpt_address] [varchar](max) NOT NULL,
                        [dpt_service] [varchar](max) NOT NULL,
                        [dp_id] [varchar](50) NOT NULL,
                        [dptp_id] [varchar](50) NOT NULL,
                        [hst_id] [varchar](50) NOT NULL,
                        [yn_id_traced] [varchar](50) NOT NULL,
                        [ynd_id_vmmc] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_partner_tracking_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dpt_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_insert] ON [dbo].[drm_partner_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_upload]
                        ([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_update] ON [dbo].[drm_partner_tracking] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpt_id) OR UPDATE(dpt_date) OR UPDATE(dpt_dptp_other) OR UPDATE(dpt_phone) OR UPDATE(dpt_address) OR UPDATE(dpt_service) OR UPDATE(dp_id) OR UPDATE(dptp_id) OR UPDATE(hst_id) OR UPDATE(yn_id_traced) OR UPDATE(ynd_id_vmmc))
	                BEGIN
		                INSERT INTO [dbo].[drm_partner_tracking_upload]
							([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_delete] ON [dbo].[drm_partner_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_upload]
                        ([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion  DREAMS Partner Tracking

            #region DREAMS Partner Tracking Service
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking_service')
                BEGIN
		            CREATE TABLE [dbo].[drm_partner_tracking_service](
	                    [dpts_id] [varchar](50) NOT NULL,
	                    [dpt_id] [varchar](50) NOT NULL,
	                    [dsrv_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_partner_tracking_service] PRIMARY KEY CLUSTERED 
                    (
	                    [dpts_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
		        END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_partner_tracking_service_upload')
                BEGIN 
		            CREATE TABLE [dbo].[drm_partner_tracking_service_upload](
	                    [dpts_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dpts_id] [varchar](50) NOT NULL,
	                    [dpt_id] [varchar](50) NOT NULL,
	                    [dsrv_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_partner_tracking_service_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dpts_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
		        END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_service_insert] ON [dbo].[drm_partner_tracking_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_service_upload]
                        ([dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_service_delete] ON [dbo].[drm_partner_tracking_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_service_upload]
                        ([dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion  DREAMS Partner Tracking Service

            #region DREAMS Post Violence Care
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care](
                        [dpvc_id] [varchar](50) NOT NULL, 
                        [flt_id] [varchar](50) NOT NULL,
                        [sct_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvc_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_upload')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_upload](
	                    [dpvc_sid] [int] IDENTITY(1,1) NOT NULL,
                        [dpvc_id] [varchar](50) NOT NULL, 
                        [flt_id] [varchar](50) NOT NULL,
                        [sct_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvc_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_insert] ON [dbo].[drm_post_violence_care] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_upload]
                        ([dpvc_id], [flt_id], [sct_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvc_id], [flt_id], [sct_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_update] ON [dbo].[drm_post_violence_care] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpvc_id) OR UPDATE(flt_id) OR UPDATE(sct_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_post_violence_care_upload]
							([dpvc_id], [flt_id], [sct_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dpvc_id], [flt_id], [sct_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_delete] ON [dbo].[drm_post_violence_care] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_upload]
                        ([dpvc_id],  [flt_id], [sct_id],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvc_id],  [flt_id], [sct_id],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Post Violence Care

            #region DREAMS Post Violence Care Line
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_line](
                        [dpvcl_id] [varchar](50) NOT NULL, 
                        [dpvcl_referred_from] [varchar](max) NOT NULL,
                        [dpvcl_date] [datetime] NOT NULL,
                        [dm_id] [varchar](50) NOT NULL,
                        [dpvc_id] [varchar](50) NOT NULL,
                        [gbv_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_line] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvcl_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_upload')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_line_upload](
	                    [dpvcl_sid] [int] IDENTITY(1,1) NOT NULL,
                        [dpvcl_id] [varchar](50) NOT NULL, 
                        [dpvcl_referred_from] [varchar](max) NOT NULL,
                        [dpvcl_date] [datetime] NOT NULL,
                        [dm_id] [varchar](50) NOT NULL,
                        [dpvc_id] [varchar](50) NOT NULL,
                        [gbv_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_line_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvcl_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_insert] ON [dbo].[drm_post_violence_care_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
                        ([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_update] ON [dbo].[drm_post_violence_care_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpvcl_id) OR UPDATE(dpvcl_referred_from) OR UPDATE(dpvcl_date) OR UPDATE(dm_id) OR UPDATE(dpvc_id) OR UPDATE(gbv_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
							([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_delete] ON [dbo].[drm_post_violence_care_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
                        ([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Post Violence Care Line

            #region DREAMS Post Violence Care Line Dreams Service
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_dreams_service')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_line_dreams_service](
	                    [dpvclds_id] [varchar](50) NOT NULL,
	                    [dpvcl_id] [varchar](50) NOT NULL,
	                    [dso_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_line_dreams_service] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvclds_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_dreams_service_upload')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_line_dreams_service_upload](
	                    [dpvclds_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dpvclds_id] [varchar](50) NOT NULL,
	                    [dpvcl_id] [varchar](50) NOT NULL,
	                    [dso_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_line_dreams_service_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvclds_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_dreams_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_insert] ON [dbo].[drm_post_violence_care_line_dreams_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_dreams_service_upload]
                        ([dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_dreams_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_delete] ON [dbo].[drm_post_violence_care_line_dreams_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_dreams_service_upload]
                        ([dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Post Violence Care Line Dreams Service

            #region DREAMS Post Violence Care Line Service
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_service')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_line_service](
	                    [dpvcls_id] [varchar](50) NOT NULL,
	                    [dpvcl_id] [varchar](50) NOT NULL,
	                    [pvcs_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_line_service] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvcls_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_post_violence_care_line_service_upload')
                BEGIN 
                    CREATE TABLE [dbo].[drm_post_violence_care_line_service_upload](
	                    [dpvcls_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dpvcls_id] [varchar](50) NOT NULL,
	                    [dpvcl_id] [varchar](50) NOT NULL,
	                    [pvcs_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_post_violence_care_line_service_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dpvcls_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_service_insert] ON [dbo].[drm_post_violence_care_line_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_service_upload]
                        ([dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_service_delete] ON [dbo].[drm_post_violence_care_line_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_service_upload]
                        ([dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action])
	                SELECT [dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Post Violence Care Line Service

            #region DREAMS SINOVUYO Missed Session
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_missed_session')
                BEGIN
		            CREATE TABLE [dbo].[drm_sinovuyo_missed_session](
	                    [dsms_id] [varchar](50) NOT NULL,
	                    [dsms_contact] [varchar](500) NOT NULL,
	                    [dsms_date] [datetime] NOT NULL,
	                    [dsms_date_followup] [datetime] NOT NULL,
	                    [dsms_action_other] [varchar](5000) NOT NULL,
	                    [dsms_followup_other] [varchar](5000) NOT NULL,
	                    [dsms_followup_method_other] [varchar](5000) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dsa_id] [varchar](50) NOT NULL,
	                    [dsf_id] [varchar](50) NOT NULL,
	                    [dsfm_id] [varchar](50) NOT NULL,
	                    [yn_id_followup] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_sinovuyo_missed_session] PRIMARY KEY CLUSTERED 
                    (
	                    [dsms_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_missed_session_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_sinovuyo_missed_session_upload](
	                    [dsms_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dsms_id] [varchar](50) NOT NULL,
	                    [dsms_contact] [varchar](500) NOT NULL,
	                    [dsms_date] [datetime] NOT NULL,
	                    [dsms_date_followup] [datetime] NOT NULL,
	                    [dsms_action_other] [varchar](5000) NOT NULL,
	                    [dsms_followup_other] [varchar](5000) NOT NULL,
	                    [dsms_followup_method_other] [varchar](5000) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dsa_id] [varchar](50) NOT NULL,
	                    [dsf_id] [varchar](50) NOT NULL,
	                    [dsfm_id] [varchar](50) NOT NULL,
	                    [yn_id_followup] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_sinovuyo_missed_session_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dsms_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_insert] ON [dbo].[drm_sinovuyo_missed_session] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
                        ([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_update] ON [dbo].[drm_sinovuyo_missed_session] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsms_id) OR UPDATE(dsms_contact) OR UPDATE(dsms_date) OR UPDATE(dsms_date_followup) OR UPDATE(dsms_action_other) OR UPDATE(dsms_followup_other) OR UPDATE(dsms_followup_method_other) OR UPDATE(dm_id) OR UPDATE(dsa_id) OR UPDATE(dsf_id) OR UPDATE(dsfm_id) OR UPDATE(yn_id_followup))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
							([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_delete] ON [dbo].[drm_sinovuyo_missed_session] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
                        ([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS SINOVUYO Missed Session

            #region DREAMS SINOVUYO Register
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register')
                BEGIN
		            CREATE TABLE [dbo].[drm_sinovuyo_register](
	                    [dsr_id] [varchar](50) NOT NULL,
	                    [dsr_facilitator] [varchar](500) NOT NULL,
	                    [dsr_group] [varchar](500) NOT NULL,
	                    [dsr_village] [varchar](500) NOT NULL,
	                    [dsr_date] [datetime] NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_sinovuyo_register] PRIMARY KEY CLUSTERED 
                    (
	                    [dsr_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_sinovuyo_register_upload](
	                    [dsr_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dsr_id] [varchar](50) NOT NULL,
	                    [dsr_facilitator] [varchar](500) NOT NULL,
	                    [dsr_group] [varchar](500) NOT NULL,
	                    [dsr_village] [varchar](500) NOT NULL,
	                    [dsr_date] [datetime] NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_sinovuyo_register_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dsr_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_insert] ON [dbo].[drm_sinovuyo_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
                        ([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_update] ON [dbo].[drm_sinovuyo_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsr_id) OR UPDATE(dsr_facilitator) OR UPDATE(dsr_group) OR UPDATE(dsr_village) OR UPDATE(dsr_date) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
							([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_delete] ON [dbo].[drm_sinovuyo_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
                        ([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS SINOVUYO Register

            #region DREAMS SINOVUYO Register Line
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register_line')
                BEGIN
		            CREATE TABLE [dbo].[drm_sinovuyo_register_line](
	                    [dsrl_id] [varchar](50) NOT NULL,
	                    [dsrl_contact] [varchar](500) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dsr_id] [varchar](50) NOT NULL,
	                    [pca_id_01] [varchar](50) NOT NULL,
	                    [pca_id_02] [varchar](50) NOT NULL,
	                    [pca_id_03] [varchar](50) NOT NULL,
	                    [pca_id_04] [varchar](50) NOT NULL,
	                    [pca_id_05] [varchar](50) NOT NULL,
	                    [pca_id_06] [varchar](50) NOT NULL,
	                    [pca_id_07] [varchar](50) NOT NULL,
	                    [pca_id_08] [varchar](50) NOT NULL,
	                    [pca_id_09] [varchar](50) NOT NULL,
	                    [pca_id_10] [varchar](50) NOT NULL,
	                    [pca_id_11] [varchar](50) NOT NULL,
	                    [pca_id_12] [varchar](50) NOT NULL,
	                    [pca_id_13] [varchar](50) NOT NULL,
	                    [pca_id_14] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_sinovuyo_register_line] PRIMARY KEY CLUSTERED 
                    (
	                    [dsrl_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_sinovuyo_register_line_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_sinovuyo_register_line_upload](
	                    [dsrl_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dsrl_id] [varchar](50) NOT NULL,
	                    [dsrl_contact] [varchar](500) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dsr_id] [varchar](50) NOT NULL,
	                    [pca_id_01] [varchar](50) NOT NULL,
	                    [pca_id_02] [varchar](50) NOT NULL,
	                    [pca_id_03] [varchar](50) NOT NULL,
	                    [pca_id_04] [varchar](50) NOT NULL,
	                    [pca_id_05] [varchar](50) NOT NULL,
	                    [pca_id_06] [varchar](50) NOT NULL,
	                    [pca_id_07] [varchar](50) NOT NULL,
	                    [pca_id_08] [varchar](50) NOT NULL,
	                    [pca_id_09] [varchar](50) NOT NULL,
	                    [pca_id_10] [varchar](50) NOT NULL,
	                    [pca_id_11] [varchar](50) NOT NULL,
	                    [pca_id_12] [varchar](50) NOT NULL,
	                    [pca_id_13] [varchar](50) NOT NULL,
	                    [pca_id_14] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_sinovuyo_register_line_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dsrl_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_insert] ON [dbo].[drm_sinovuyo_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
                        ([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_update] ON [dbo].[drm_sinovuyo_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsrl_id) OR UPDATE(dsrl_contact) OR UPDATE(dm_id) OR UPDATE(dsr_id) OR UPDATE(pca_id_01) OR UPDATE(pca_id_02) OR UPDATE(pca_id_03) OR UPDATE(pca_id_04) OR UPDATE(pca_id_05) OR UPDATE(pca_id_06) OR UPDATE(pca_id_07) OR UPDATE(pca_id_08) OR UPDATE(pca_id_09) OR UPDATE(pca_id_10) OR UPDATE(pca_id_11) OR UPDATE(pca_id_12) OR UPDATE(pca_id_13) OR UPDATE(pca_id_14))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
							([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_delete] ON [dbo].[drm_sinovuyo_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
                        ([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS SINOVUYO Register Line

            #region DREAMS Stepping Stones Missed Session
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_missed_session')
                BEGIN
		            CREATE TABLE [dbo].[drm_stepping_stones_missed_session](
	                    [dssms_id] [varchar](50) NOT NULL,
	                    [dssms_contact] [varchar](500) NOT NULL,
	                    [dssms_date] [datetime] NOT NULL,
	                    [dssms_date_followup] [datetime] NOT NULL,
	                    [dssms_action_other] [varchar](5000) NOT NULL,
	                    [dssms_followup_other] [varchar](5000) NOT NULL,
	                    [dssms_followup_method_other] [varchar](5000) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dsa_id] [varchar](50) NOT NULL,
	                    [dsf_id] [varchar](50) NOT NULL,
	                    [dsfm_id] [varchar](50) NOT NULL,
	                    [yn_id_followup] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_stepping_stones_missed_session] PRIMARY KEY CLUSTERED 
                    (
	                    [dssms_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_missed_session_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_stepping_stones_missed_session_upload](
	                    [dssms_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dssms_id] [varchar](50) NOT NULL,
	                    [dssms_contact] [varchar](500) NOT NULL,
	                    [dssms_date] [datetime] NOT NULL,
	                    [dssms_date_followup] [datetime] NOT NULL,
	                    [dssms_action_other] [varchar](5000) NOT NULL,
	                    [dssms_followup_other] [varchar](5000) NOT NULL,
	                    [dssms_followup_method_other] [varchar](5000) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dsa_id] [varchar](50) NOT NULL,
	                    [dsf_id] [varchar](50) NOT NULL,
	                    [dsfm_id] [varchar](50) NOT NULL,
	                    [yn_id_followup] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_stepping_stones_missed_session_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dssms_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_insert] ON [dbo].[drm_stepping_stones_missed_session] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
                        ([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_update] ON [dbo].[drm_stepping_stones_missed_session] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssms_id) OR UPDATE(dssms_contact) OR UPDATE(dssms_date) OR UPDATE(dssms_date_followup) OR UPDATE(dssms_action_other) OR UPDATE(dssms_followup_other) OR UPDATE(dssms_followup_method_other) OR UPDATE(dm_id) OR UPDATE(dsa_id) OR UPDATE(dsf_id) OR UPDATE(dsfm_id) OR UPDATE(yn_id_followup))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
							([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_delete] ON [dbo].[drm_stepping_stones_missed_session] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
                        ([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Stepping Stones Missed Session

            #region DREAMS Stepping Stones Register
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register')
                BEGIN
		            CREATE TABLE [dbo].[drm_stepping_stones_register](
	                    [dssr_id] [varchar](50) NOT NULL,
	                    [dssr_facilitator] [varchar](500) NOT NULL,
	                    [dssr_group] [varchar](500) NOT NULL,
	                    [dssr_village] [varchar](500) NOT NULL,
	                    [dssr_date] [datetime] NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_stepping_stones_register] PRIMARY KEY CLUSTERED 
                    (
	                    [dssr_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_stepping_stones_register_upload](
	                    [dssr_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dssr_id] [varchar](50) NOT NULL,
	                    [dssr_facilitator] [varchar](500) NOT NULL,
	                    [dssr_group] [varchar](500) NOT NULL,
	                    [dssr_village] [varchar](500) NOT NULL,
	                    [dssr_date] [datetime] NOT NULL,
	                    [wrd_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_stepping_stones_register_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dssr_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_insert] ON [dbo].[drm_stepping_stones_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
                        ([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_update] ON [dbo].[drm_stepping_stones_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssr_id) OR UPDATE(dssr_facilitator) OR UPDATE(dssr_group) OR UPDATE(dssr_village) OR UPDATE(dssr_date) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
							([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_delete] ON [dbo].[drm_stepping_stones_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
                        ([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Stepping Stones Register

            #region DREAMS Stepping Stones Register Line
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register_line')
                BEGIN
		            CREATE TABLE [dbo].[drm_stepping_stones_register_line](
	                    [dssrl_id] [varchar](50) NOT NULL,
	                    [dssrl_contact] [varchar](500) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dssr_id] [varchar](50) NOT NULL,
	                    [yn_id_m1] [varchar](50) NOT NULL,
	                    [yn_id_m2] [varchar](50) NOT NULL,
	                    [yn_id_m3] [varchar](50) NOT NULL,
	                    [yn_id_sa] [varchar](50) NOT NULL,
	                    [yn_id_sb] [varchar](50) NOT NULL,
	                    [yn_id_sc] [varchar](50) NOT NULL,
	                    [yn_id_sd] [varchar](50) NOT NULL,
	                    [yn_id_se] [varchar](50) NOT NULL,
	                    [yn_id_sf] [varchar](50) NOT NULL,
	                    [yn_id_sg] [varchar](50) NOT NULL,
	                    [yn_id_sh] [varchar](50) NOT NULL,
	                    [yn_id_si] [varchar](50) NOT NULL,
	                    [yn_id_sj] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
                     CONSTRAINT [PK_drm_stepping_stones_register_line] PRIMARY KEY CLUSTERED 
                    (
	                    [dssrl_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'drm_stepping_stones_register_line_upload')
                BEGIN
		            CREATE TABLE [dbo].[drm_stepping_stones_register_line_upload](
	                    [dssrl_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dssrl_id] [varchar](50) NOT NULL,
	                    [dssrl_contact] [varchar](500) NOT NULL,
	                    [dm_id] [varchar](50) NOT NULL,
	                    [dssr_id] [varchar](50) NOT NULL,
	                    [yn_id_m1] [varchar](50) NOT NULL,
	                    [yn_id_m2] [varchar](50) NOT NULL,
	                    [yn_id_m3] [varchar](50) NOT NULL,
	                    [yn_id_sa] [varchar](50) NOT NULL,
	                    [yn_id_sb] [varchar](50) NOT NULL,
	                    [yn_id_sc] [varchar](50) NOT NULL,
	                    [yn_id_sd] [varchar](50) NOT NULL,
	                    [yn_id_se] [varchar](50) NOT NULL,
	                    [yn_id_sf] [varchar](50) NOT NULL,
	                    [yn_id_sg] [varchar](50) NOT NULL,
	                    [yn_id_sh] [varchar](50) NOT NULL,
	                    [yn_id_si] [varchar](50) NOT NULL,
	                    [yn_id_sj] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
	                    [ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
                     CONSTRAINT [PK_drm_stepping_stones_register_line_upload] PRIMARY KEY CLUSTERED 
                    (
	                    [dssrl_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_insert] ON [dbo].[drm_stepping_stones_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
                        ([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_update] ON [dbo].[drm_stepping_stones_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssrl_id) OR UPDATE(dssrl_contact) OR UPDATE(dm_id) OR UPDATE(dssr_id) OR UPDATE(yn_id_m1) OR UPDATE(yn_id_m2) OR UPDATE(yn_id_m3) OR UPDATE(yn_id_sa) OR UPDATE(yn_id_sb) OR UPDATE(yn_id_sc) OR UPDATE(yn_id_sd) OR UPDATE(yn_id_se) OR UPDATE(yn_id_sf) OR UPDATE(yn_id_sg) OR UPDATE(yn_id_sh) OR UPDATE(yn_id_si) OR UPDATE(yn_id_sj))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
							([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
						SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_delete] ON [dbo].[drm_stepping_stones_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
                        ([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj],  
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion DREAMS Stepping Stones Register Line
            #endregion Data Tables

            #region List Tables
            #region DREAMS Partner Type
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_partner_type')
                BEGIN
	                CREATE TABLE [dbo].[lst_dreams_partner_type](
		                [dptp_sid] [int] IDENTITY(1,1) NOT NULL,
		                [dptp_id] [varchar](50) NOT NULL,
		                [dptp_name] [varchar](500) NOT NULL,
		                [dptp_order] [int] NOT NULL,
		                [dptp_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_dreams_partner_type] PRIMARY KEY CLUSTERED 
	                (
		                [dptp_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_dreams_partner_type] ON 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1-Husband', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '1') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2-Boyfriend', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '2') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3-Casual/Occasional friend', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '3') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'4-Client', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '4') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 5, N'5', N'5-Bodaboda man', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '5') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 6, N'6', N'6-Fisher folk', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '6' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '6') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 7, N'7', N'7-Cattle Farmer', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '7' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = '7') 
	                INSERT [dbo].[lst_dreams_partner_type] ([dptp_sid], [dptp_id], [dptp_name], [dptp_order], [dptp_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 8, N'Other', N'8-Other specify', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'Other' IN (SELECT dptp_id FROM [lst_dreams_partner_type] WHERE dptp_id = 'Other') 
	                SET IDENTITY_INSERT [dbo].[lst_dreams_partner_type] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 46, N'lst_dreams_partner_type', N'dptp', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_partner_type' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_partner_type') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END

                IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_service')
                BEGIN
	                CREATE TABLE [dbo].[lst_dreams_service](
		                [dsrv_sid] [int] IDENTITY(1,1) NOT NULL,
		                [dsrv_id] [varchar](50) NOT NULL,
		                [dsrv_name] [varchar](500) NOT NULL,
		                [dsrv_order] [int] NOT NULL,
		                [dsrv_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_dreams_service] PRIMARY KEY CLUSTERED 
	                (
		                [dsrv_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_dreams_service] ON 																																																   
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1. HCT', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '1') 
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2. VMMC', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '2') 
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3. Condoms', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '3') 
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'4. HIV care services', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '4') 
	                SET IDENTITY_INSERT [dbo].[lst_dreams_service] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 47, N'lst_dreams_service', N'dsrv', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_service' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_service') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END

                IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no_dont_know')
                BEGIN
	                CREATE TABLE [dbo].[lst_yes_no_dont_know](
		                [ynd_sid] [int] IDENTITY(1,1) NOT NULL,
		                [ynd_id] [varchar](50) NOT NULL,
		                [ynd_name] [varchar](500) NOT NULL,
		                [ynd_order] [int] NOT NULL,
		                [ynd_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_yes_no_dont_know] PRIMARY KEY CLUSTERED 
	                (
		                [ynd_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_yes_no_dont_know] ON 
	                INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'0', N'2. No', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '0' IN (SELECT ynd_id FROM [lst_yes_no_dont_know] WHERE ynd_id = '0') 
	                INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'1', N'1. Yes', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT ynd_id FROM [lst_yes_no_dont_know] WHERE ynd_id = '1') 
	                INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'2', N'8. Don''t Know', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT ynd_id FROM [lst_yes_no_dont_know] WHERE ynd_id = '2') 
	                SET IDENTITY_INSERT [dbo].[lst_yes_no_dont_know] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 48, N'lst_yes_no_dont_know', N'ynd', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_yes_no_dont_know' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_yes_no_dont_know') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END  ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion DREAMS Partner Type

            #region DREAMS Service
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_service')
                BEGIN
	                CREATE TABLE [dbo].[lst_dreams_service](
		                [dsrv_sid] [int] IDENTITY(1,1) NOT NULL,
		                [dsrv_id] [varchar](50) NOT NULL,
		                [dsrv_name] [varchar](500) NOT NULL,
		                [dsrv_order] [int] NOT NULL,
		                [dsrv_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_dreams_service] PRIMARY KEY CLUSTERED 
	                (
		                [dsrv_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_dreams_service] ON 																																																   
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1. HCT', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '1') 
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2. VMMC', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '2') 
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3. Condoms', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '3') 
	                INSERT [dbo].[lst_dreams_service] ([dsrv_sid], [dsrv_id], [dsrv_name], [dsrv_order], [dsrv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'4. HIV care services', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT dsrv_id FROM [lst_dreams_service] WHERE dsrv_id = '4') 
	                SET IDENTITY_INSERT [dbo].[lst_dreams_service] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 47, N'lst_dreams_service', N'dsrv', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_service' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_service') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion DREAMS Service

            #region DREAMS Service Other
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_service_other')
                BEGIN 
                    CREATE TABLE [dbo].[lst_dreams_service_other](
	                    [dso_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [dso_id] [varchar](50) NOT NULL,
	                    [dso_name] [varchar](500) NOT NULL,
	                    [dso_order] [int] NOT NULL,
	                    [dso_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                        CONSTRAINT [PK_lst_dreams_service_other] PRIMARY KEY CLUSTERED 
                    (
	                    [dso_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 

	                SET IDENTITY_INSERT [dbo].[lst_dreams_service_other] ON 	
	                INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1-Stepping stones', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '1') 
	                INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2-SASA!', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '2') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3-SINOVUYO', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '3') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'4-Expanded and improved contraceptive mix', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '4') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 5, N'5', N'5-HTC', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '5') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 6, N'6', N'6-Post violence care', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '6' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '6') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 7, N'7', N'7-Cash transfers', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '7' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '7') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 8, N'8', N'8-Condom promotion and provision', 8, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '8' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '8') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 9, N'9', N'9-Educational subsidies', 9, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '9' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '9') 
					INSERT [dbo].[lst_dreams_service_other] ([dso_sid], [dso_id], [dso_name], [dso_order], [dso_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 10, N'10', N'10-Combined Socio-Economic Approaches', 10, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '10' IN (SELECT dso_id FROM [lst_dreams_service_other] WHERE dso_id = '10') 
	                SET IDENTITY_INSERT [dbo].[lst_dreams_service_other] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 49, N'lst_dreams_service_other', N'dso', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_service_other' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_service_other') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion DREAMS Service Other

            #region DREAMS Session
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_session_action')
                BEGIN                     
					CREATE TABLE [dbo].[lst_dreams_session_action](
						[dsa_sid] [int] IDENTITY(1,1) NOT NULL,
						[dsa_id] [varchar](50) NOT NULL,
						[dsa_name] [varchar](500) NOT NULL,
						[dsa_order] [int] NOT NULL,
						[dsa_active] [bit] NOT NULL,
						[lng_id] [char](2) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
					 CONSTRAINT [PK_lst_dreams_session_action] PRIMARY KEY CLUSTERED 
					(
						[dsa_sid] ASC
					)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
					) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_dreams_session_action] ON 																																																   
	                INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1. Call Again', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dsa_id FROM [lst_dreams_session_action] WHERE dsa_id = '1') 
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2. Engage peer', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dsa_id FROM [lst_dreams_session_action] WHERE dsa_id = '2') 
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3. Agreed to come next time', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dsa_id FROM [lst_dreams_session_action] WHERE dsa_id = '3') 
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'4. Drop from program', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT dsa_id FROM [lst_dreams_session_action] WHERE dsa_id = '4') 
					INSERT [dbo].[lst_dreams_session_action] ([dsa_sid], [dsa_id], [dsa_name], [dsa_order], [dsa_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 5, N'Other', N'5. Other (specify)', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'Other' IN (SELECT dsa_id FROM [lst_dreams_session_action] WHERE dsa_id = 'Other') 
					SET IDENTITY_INSERT [dbo].[lst_dreams_session_action] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 53, N'lst_dreams_session_action', N'dsa', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_session_action' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_session_action') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
				END

				IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_session_followup')
                BEGIN 
                    CREATE TABLE [dbo].[lst_dreams_session_followup](
						[dsf_sid] [int] IDENTITY(1,1) NOT NULL,
						[dsf_id] [varchar](50) NOT NULL,
						[dsf_name] [varchar](500) NOT NULL,
						[dsf_order] [int] NOT NULL,
						[dsf_active] [bit] NOT NULL,
						[lng_id] [char](2) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
					 CONSTRAINT [PK_lst_dreams_session_followup] PRIMARY KEY CLUSTERED 
					(
						[dsf_sid] ASC
					)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
					) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup] ON 																																																   
	                INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1. Away working', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = '1') 
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2. Away in School', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = '2') 
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3. Refused', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = '3') 
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'4. Visiting', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = '4') 
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 5, N'5', N'5. Out-migrated (left sub-county)', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = '5') 
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 6, N'6', N'6. Dead', 6, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '6' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = '6') 
					INSERT [dbo].[lst_dreams_session_followup] ([dsf_sid], [dsf_id], [dsf_name], [dsf_order], [dsf_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 7, N'Other', N'7. Other (specify)', 7, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'Other' IN (SELECT dsf_id FROM [lst_dreams_session_followup] WHERE dsf_id = 'Other') 
	                SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 54, N'lst_dreams_session_followup', N'dsf', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_session_followup' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_session_followup') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END 
				
				IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_dreams_session_followup_method')
                BEGIN 
                    CREATE TABLE [dbo].[lst_dreams_session_followup_method](
						[dsfm_sid] [int] IDENTITY(1,1) NOT NULL,
						[dsfm_id] [varchar](50) NOT NULL,
						[dsfm_name] [varchar](500) NOT NULL,
						[dsfm_order] [int] NOT NULL,
						[dsfm_active] [bit] NOT NULL,
						[lng_id] [char](2) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
					 CONSTRAINT [PK_lst_dreams_session_followup_method] PRIMARY KEY CLUSTERED 
					(
						[dsfm_sid] ASC
					)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
					) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup_method] ON 																																																   
	                INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1. Phone call', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT dsfm_id FROM [lst_dreams_session_followup_method] WHERE dsfm_id = '1') 
					INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2. Peer methods', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT dsfm_id FROM [lst_dreams_session_followup_method] WHERE dsfm_id = '2') 
					INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3. Home Visits', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT dsfm_id FROM [lst_dreams_session_followup_method] WHERE dsfm_id = '3') 
					INSERT [dbo].[lst_dreams_session_followup_method] ([dsfm_sid], [dsfm_id], [dsfm_name], [dsfm_order], [dsfm_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'Other', N'4. Other specify', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT 'Other' IN (SELECT dsfm_id FROM [lst_dreams_session_followup_method] WHERE dsfm_id = 'Other') 
					SET IDENTITY_INSERT [dbo].[lst_dreams_session_followup_method] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 55, N'lst_dreams_session_followup_method', N'dsfm', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_dreams_session_followup_method' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_dreams_session_followup_method') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion DREAMS Session

            #region GBV Type
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_gbv_type')
                BEGIN 
                    CREATE TABLE [dbo].[lst_gbv_type](
	                    [gbv_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [gbv_id] [varchar](50) NOT NULL,
	                    [gbv_name] [varchar](500) NOT NULL,
	                    [gbv_order] [int] NOT NULL,
	                    [gbv_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_gbv_type] PRIMARY KEY CLUSTERED 
                    (
	                    [gbv_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 

	                SET IDENTITY_INSERT [dbo].[lst_gbv_type] ON 																																																   
	                INSERT [dbo].[lst_gbv_type] ([gbv_sid], [gbv_id], [gbv_name], [gbv_order], [gbv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1-Physical', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT gbv_id FROM [lst_gbv_type] WHERE gbv_id = '1') 
	                INSERT [dbo].[lst_gbv_type] ([gbv_sid], [gbv_id], [gbv_name], [gbv_order], [gbv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2-Sexual', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT gbv_id FROM [lst_gbv_type] WHERE gbv_id = '2') 
	                INSERT [dbo].[lst_gbv_type] ([gbv_sid], [gbv_id], [gbv_name], [gbv_order], [gbv_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3-Psychological', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT gbv_id FROM [lst_gbv_type] WHERE gbv_id = '3') 
	                SET IDENTITY_INSERT [dbo].[lst_gbv_type] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 50, N'lst_gbv_type', N'gbv', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_gbv_type' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_gbv_type') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion GBV Type

            #region PCA Type
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_pca_type')
                BEGIN 
                    CREATE TABLE [dbo].[lst_pca_type](
	                    [pca_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [pca_id] [varchar](50) NOT NULL,
	                    [pca_name] [varchar](500) NOT NULL,
	                    [pca_order] [int] NOT NULL,
	                    [pca_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_pca_type] PRIMARY KEY CLUSTERED 
                    (
	                    [pca_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 

	                SET IDENTITY_INSERT [dbo].[lst_pca_type] ON 																																													
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'1 = Only Child Attended', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT pca_id FROM [lst_pca_type] WHERE pca_id = '1') 
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'2 = Only Parent Attended', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT pca_id FROM [lst_pca_type] WHERE pca_id = '2') 
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'3 = Both Attended', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT pca_id FROM [lst_pca_type] WHERE pca_id = '3') 
                    INSERT [dbo].[lst_pca_type] ([pca_sid], [pca_id], [pca_name], [pca_order], [pca_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'X = Both Didn''t Attend', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT pca_id FROM [lst_pca_type] WHERE pca_id = '4') 
	                SET IDENTITY_INSERT [dbo].[lst_pca_type] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 52, N'lst_pca_type', N'pca', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_pca_type' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_pca_type') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion PCA Type

            #region PVC Service
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_pvc_service')
                BEGIN 
                    CREATE TABLE [dbo].[lst_pvc_service](
	                    [pvcs_sid] [int] IDENTITY(1,1) NOT NULL,
	                    [pvcs_id] [varchar](50) NOT NULL,
	                    [pvcs_name] [varchar](500) NOT NULL,
	                    [pvcs_order] [int] NOT NULL,
	                    [pvcs_active] [bit] NOT NULL,
	                    [lng_id] [char](2) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_lst_pvc_service] PRIMARY KEY CLUSTERED 
                    (
	                    [pvcs_sid] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY] 

	                SET IDENTITY_INSERT [dbo].[lst_pvc_service] ON 																																																   
	                INSERT [dbo].[lst_pvc_service] ([pvcs_sid], [pvcs_id], [pvcs_name], [pvcs_order], [pvcs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'PEP', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT pvcs_id FROM [lst_pvc_service] WHERE pvcs_id = '1') 
	                INSERT [dbo].[lst_pvc_service] ([pvcs_sid], [pvcs_id], [pvcs_name], [pvcs_order], [pvcs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'Linked to Police', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT pvcs_id FROM [lst_pvc_service] WHERE pvcs_id = '2') 
	                INSERT [dbo].[lst_pvc_service] ([pvcs_sid], [pvcs_id], [pvcs_name], [pvcs_order], [pvcs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'Psychosocial Counselling', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT pvcs_id FROM [lst_pvc_service] WHERE pvcs_id = '3') 
	                SET IDENTITY_INSERT [dbo].[lst_pvc_service] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 51, N'lst_pvc_service', N'pvcs', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_pvc_service' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_pvc_service') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion PVC Service

            #region Yes No Don't Know
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no_dont_know')
                BEGIN
	                CREATE TABLE [dbo].[lst_yes_no_dont_know](
		                [ynd_sid] [int] IDENTITY(1,1) NOT NULL,
		                [ynd_id] [varchar](50) NOT NULL,
		                [ynd_name] [varchar](500) NOT NULL,
		                [ynd_order] [int] NOT NULL,
		                [ynd_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_yes_no_dont_know] PRIMARY KEY CLUSTERED 
	                (
		                [ynd_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].[lst_yes_no_dont_know] ON 
	                INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'0', N'2. No', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '0' IN (SELECT ynd_id FROM [lst_yes_no_dont_know] WHERE ynd_id = '0') 
	                INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'1', N'1. Yes', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT ynd_id FROM [lst_yes_no_dont_know] WHERE ynd_id = '1') 
	                INSERT [dbo].[lst_yes_no_dont_know] ([ynd_sid], [ynd_id], [ynd_name], [ynd_order], [ynd_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'2', N'8. Don''t Know', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT ynd_id FROM [lst_yes_no_dont_know] WHERE ynd_id = '2') 
	                SET IDENTITY_INSERT [dbo].[lst_yes_no_dont_know] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 48, N'lst_yes_no_dont_know', N'ynd', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_yes_no_dont_know' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_yes_no_dont_know') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END  ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Yes No Don't Know
            #endregion List Tables

            #region Message
            strSQL = @"SET IDENTITY_INSERT [dbo].[lt_message] ON 
                INSERT [dbo].[lt_message] ([ltm_sid], [ltm_id], [ltm_text], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 34, N'61', N'New...', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '61' IN (SELECT ltm_id FROM lt_message WHERE ltm_id = '61') 
                SET IDENTITY_INSERT [dbo].[lt_message] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Message

            #region Permissions
            strSQL = @"INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '44', 'Manage DREAMS Partner Tracking', 44, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '44' IN (SELECT prm_id FROM um_permission WHERE prm_id = '44') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '45', 'View DREAMS Post Violence Care', 45, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '45' IN (SELECT prm_id FROM um_permission WHERE prm_id = '45') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '46', 'Manage DREAMS Post Violence Care', 46, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '46' IN (SELECT prm_id FROM um_permission WHERE prm_id = '46') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '47', 'View DREAMS SINOVUYO Attendance Register', 47, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '47' IN (SELECT prm_id FROM um_permission WHERE prm_id = '47') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '48', 'Manage DREAMS SINOVUYO Attendance Register', 48, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '48' IN (SELECT prm_id FROM um_permission WHERE prm_id = '48')  
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '49', 'View DREAMS Stepping Stones Attendance Register', 49, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '49' IN (SELECT prm_id FROM um_permission WHERE prm_id = '49') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '50', 'Manage DREAMS Stepping Stones Attendance Register', 50, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '50' IN (SELECT prm_id FROM um_permission WHERE prm_id = '50') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '51', 'Manage DREAMS SINOVUYO Missed Session', 51, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '51' IN (SELECT prm_id FROM um_permission WHERE prm_id = '51') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '52', 'Manage DREAMS Stepping Stones Missed Session', 52, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '52' IN (SELECT prm_id FROM um_permission WHERE prm_id = '52') 
                INSERT INTO um_permission (prm_id, prm_name, prm_order, prm_active, aps_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update) SELECT '53', 'Manage DREAMS HTC Register', 53, 1, '', '1', '1', GETDATE(), GETDATE() WHERE NOT '53' IN (SELECT prm_id FROM um_permission WHERE prm_id = '53') ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Permissions

            #region Upload Table
            strSQL = @"INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'45', N'drm_htc_register_upload', N'dhr_sid', 45, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'45' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '45') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'46', N'drm_partner_upload', N'dp_sid', 46, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'46' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '46') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'47', N'drm_partner_tracking_upload', N'dpt_sid', 47, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'47' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '47') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'48', N'drm_partner_tracking_service_upload', N'dpts_sid', 48, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'48' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '48') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'49', N'drm_post_violence_care_upload', N'dpvc_sid', 49, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'49' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '49') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'50', N'drm_post_violence_care_line_upload', N'dpvcl_sid', 50, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'50' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '50') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'51', N'drm_post_violence_care_line_dreams_service_upload', N'dpvclds_sid', 51, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'51' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '51') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'52', N'drm_post_violence_care_line_service_upload', N'dpvcls_sid', 52, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'52' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '52') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'53', N'drm_sinovuyo_missed_session_upload', N'dsms_sid', 53, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'53' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '53') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'54', N'drm_sinovuyo_register_upload', N'dsr_sid', 54, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'54' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '54') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'55', N'drm_sinovuyo_register_line_upload', N'dsrl_sid', 55, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'55' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '55') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'56', N'drm_stepping_stones_missed_session_upload', N'dssms_sid', 56, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'56' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '56') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'57', N'drm_stepping_stones_register_upload', N'dssr_sid', 57, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'57' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '57') 
                INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'58', N'drm_stepping_stones_register_line_upload', N'dssrl_sid', 58, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT N'58' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '58') ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion Upload Table
        }
        #endregion Version 1.6

        #region Version 2.0
        private static void Version20(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Import Data
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_import_data')
                BEGIN 
                    CREATE TABLE [dbo].[um_import_data](
	                    [impd_id] [varchar](50) NOT NULL,
	                    [impd_processed] [bit] NOT NULL,
	                    [dst_id] [varchar](50) NOT NULL,
	                    [sct_id] [varchar](50) NOT NULL,
	                    [ifl_id] [varchar](50) NOT NULL,
	                    [usr_id_create] [varchar](50) NOT NULL,
	                    [usr_id_update] [varchar](50) NOT NULL,
	                    [usr_date_create] [datetime] NOT NULL,
	                    [usr_date_update] [datetime] NOT NULL,
                     CONSTRAINT [PK_um_import_data] PRIMARY KEY CLUSTERED 
                    (
	                    [impd_id] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]

	                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'03989ac0-24bc-4432-bed9-8930305533bc', 0, N'17', N'115', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'04bb64df-fdce-42c5-94e9-8262e420bee9', 0, N'17', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0590eb41-12c3-48fc-8b4e-999d051200e4', 0, N'2', N'197', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'065066e8-dc3c-4a6a-a842-294fb9a20383', 0, N'13', N'181', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0680ac4d-6e7a-4be2-bd87-16d26c8df810', 0, N'14', N'240', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0a4e8f65-4945-425e-951d-9da8dedd601c', 0, N'5', N'98', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0b4f3233-6c06-46db-8c1e-f24d2c172576', 0, N'4', N'211', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0ce3168b-a092-4785-9e0b-31686f7e72f6', 0, N'6', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'0e76b0a1-9c06-4966-9cb6-ae9ad10528c6', 0, N'3', N'16', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'110d4fba-620e-4bb4-9784-21265e4c4914', 0, N'9', N'214', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'11517f2e-4269-4e55-b9cc-3e26c8508bd4', 0, N'10', N'123', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'14651785-253c-4f06-8165-c7b13b97ca43', 0, N'7', N'121', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1480ea61-a53c-41ec-a320-0c848207853b', 0, N'4', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'15a30f84-80e0-4c75-97a2-093be7fd9c9b', 0, N'17', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'15fa03ab-e607-4dfa-929c-09532c988308', 0, N'8', N'188', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'16366e41-1862-4c2e-b8c8-dd73be9fe743', 0, N'9', N'279', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'18d71699-78cb-413d-bfe4-12dcbbdcd4dc', 0, N'7', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'18ff95a4-5f3f-4076-950d-acd2147058c7', 0, N'16', N'124', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1a3cb578-d179-4e0a-a0aa-19161dd9249e', 0, N'7', N'121', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1b0ac259-a673-4e5f-8288-a4255ee9ff37', 0, N'15', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1d3189e7-7551-4342-bd50-36f1320c20e3', 0, N'9', N'279', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1de50e7b-fd32-44d8-9cdc-2e45c8f75953', 0, N'3', N'132', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1f805454-d4db-4862-9c9e-1cd6782d055d', 0, N'14', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'1f86e61d-e88b-4999-91a5-87ffe45908f8', 0, N'17', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'209316e4-9e97-4db1-9a45-ec2c060f4bc7', 0, N'11', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'21b8e9e4-ce11-4bd2-bc00-23ffc62e2b70', 0, N'17', N'265', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2217bed3-b069-41a0-8cb4-9ddd70410260', 0, N'13', N'277', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2357005f-3e22-4521-b27b-3e6b77a18ae8', 0, N'16', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'23e530d4-fd25-486a-aab8-99aecc3180ed', 0, N'8', N'184', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'249b2639-bc3d-4b5e-92ef-3f5ac376d8fb', 0, N'11', N'166', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'24f4b63c-bd27-4bd5-8130-b198525ed3ac', 0, N'2', N'73', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'252722d5-f20b-40c1-8270-3e0b034cf785', 0, N'6', N'213', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'25ef3485-d333-46d2-88f5-f46b4a320d9e', 0, N'2', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2667e271-6472-4053-b842-6ff706905d5b', 0, N'15', N'110', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2a0e96f0-c145-46db-a22f-eef5ceef9e4d', 0, N'3', N'152', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2a27a3af-0a7b-4b64-9864-546733a3d822', 0, N'9', N'274', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2a2ce973-cb9d-4131-ba61-3e7dda05c9e6', 0, N'3', N'10', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2d881e10-99db-45d4-a949-7b21ee260fc9', 0, N'11', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2fc25ecd-d564-48ed-9c38-2c858bd6b1e4', 0, N'1', N'171', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'2fde6977-a7ea-4973-8fd8-7aa544a23296', 0, N'2', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'30879d3d-ee0e-41aa-a8ad-144ca76c230c', 0, N'6', N'129', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'30b867fb-f2f4-4d1d-9472-b2f7bc4c950b', 0, N'5', N'7', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'31929e04-8fd7-46b3-870c-3f3c423bc3f8', 0, N'1', N'161', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'332265da-9362-4824-80bb-5cc4a7b1b20e', 0, N'11', N'33', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3359f0ae-27bc-46fe-88d2-723cbd148d6b', 0, N'9', N'278', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'35095ee2-4976-43ae-bc68-e31749a2fb58', 0, N'13', N'277', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3635b754-5469-4121-a27f-b5edba06ad08', 0, N'11', N'117', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'39ec9819-fad5-4df4-a822-fe46e80b6840', 0, N'16', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3a7836e3-c54c-4c2a-8506-78cb585ddb56', 0, N'10', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3b8f8093-ec9c-4bc8-9eba-4236e5934ae6', 0, N'15', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3ba214ea-b8a1-4fd3-a4bf-c6260ff41943', 0, N'8', N'188', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3d3453f7-becb-4a21-a5d2-2a7ed59c7730', 0, N'16', N'17', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'3e1e6f7f-5795-4ced-92e4-6d11f5479239', 0, N'15', N'47', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4076dbd5-82ce-4b27-82c1-2547a956d04f', 0, N'12', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'40b8c14f-8470-419e-8946-6a0206447135', 0, N'17', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'40fd82cc-263e-4ce3-a327-7dbeace9b67d', 0, N'5', N'95', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'418870af-056b-4892-981a-e92d774cd610', 0, N'11', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'437ea4bd-0e85-4775-be6a-c72ec73021a5', 0, N'4', N'243', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'43c42afc-5c2c-426c-99a4-93addef48d8c', 0, N'1', N'59', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'44d40925-ff12-42b7-8c13-6a9dd8342b83', 0, N'13', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4578ff40-9c63-48b7-92a4-67c0187fac41', 0, N'3', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'474a3078-ebbb-40e5-af8f-dbc5d83e16c1', 0, N'6', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'487950a9-9cd2-4619-a112-13e6f80a27ca', 0, N'10', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4a41adc7-ae1d-4cce-af0d-5ca545645f1a', 0, N'9', N'191', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4be218f2-bb07-4f77-9d55-ddce32c41c22', 0, N'4', N'189', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4c32cadc-8bde-4821-8814-8e9ba869fa0d', 0, N'17', N'265', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4e0d55ad-b94c-4b6d-820f-07e17c41b8ef', 0, N'4', N'52', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'4e5ec9f7-8191-4f23-ba19-7c5fa3f3ab9a', 0, N'8', N'151', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'516413f4-2975-49a0-87ee-24abce2102dc', 0, N'4', N'227', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5334200c-d90e-47c8-8e98-3dfb2cfc6b1d', 0, N'11', N'166', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'53d494bc-8c7f-47df-96d5-d730e0fdd4a1', 0, N'9', N'276', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5498aa86-d7a8-4497-87aa-d90d60d0877c', 0, N'7', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5527e8f5-5731-4fb1-b57c-21b1eadb96df', 0, N'8', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'55570cf3-3d94-41dd-a12f-1e44668ef007', 0, N'2', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'556adad4-931c-4882-a90b-dbe3715f633d', 0, N'5', N'112', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'55e3da0f-5fda-400c-9473-9ad4d800ecb2', 0, N'1', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'574fe5ed-ac2c-4251-9cf3-1420e5fbbfd0', 0, N'2', N'197', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5cd47872-7324-448f-ac9e-7d46957c086b', 0, N'16', N'124', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5e657d00-0815-47d4-8fee-1ee61ea9f3b1', 0, N'16', N'237', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'5f4e75b6-0fc4-4739-be61-36b9e752abed', 0, N'6', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'600a7948-51b8-4d1a-937c-0929c6b701d1', 0, N'9', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'601553a6-39bf-4402-9778-978b8b12098e', 0, N'14', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'607eaa8a-39d0-4a8c-a76a-8d8dbb0f908e', 0, N'12', N'94', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'619dd332-165b-460b-87ce-caf300d5d1c5', 0, N'10', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'62b657db-b259-4514-91c6-0bef46cb883f', 0, N'12', N'94', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'66b14f8c-2f0a-4c0d-87e6-f6634f462c05', 0, N'0', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'67291bbc-47c9-48f8-aeaa-6d57109711eb', 0, N'6', N'218', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'676e9bb6-a97e-4022-8ee8-c1e2ee4ae99a', 0, N'10', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'67d4ad3e-410b-4f9b-8f5d-ac1667fda3da', 0, N'6', N'218', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'68be806b-e908-466e-858e-7adaec1b1916', 0, N'16', N'35', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'69a3a347-e5bf-4566-9135-4c3fb95a581c', 0, N'14', N'61', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'69d47301-8068-4db3-bfca-31b33510a5c1', 0, N'8', N'201', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6e84ea82-a616-4338-b42d-56b8d6022863', 0, N'4', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'6eb498a3-2f71-4e7a-afc9-33501eafe339', 0, N'8', N'184', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7060bc91-9c15-4452-b71b-25b3f8dfa841', 0, N'3', N'132', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7081e16b-f529-4c60-be79-bece7fb93c1b', 0, N'9', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'71d3ed5b-4e2e-4ec0-b249-abf4e53adf22', 0, N'9', N'276', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'72b91292-6c1d-4fbd-8b89-89341e9c8c6b', 0, N'8', N'105', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'756991c0-338d-43b5-8bfe-509f911a6879', 0, N'8', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'768faea8-e19b-4dd7-9391-b078bc93e792', 0, N'15', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'77611d20-7ca5-4cca-a54e-d687474b80cc', 0, N'11', N'33', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7801c014-4e8a-4146-8e38-ea4eeeee08df', 0, N'13', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'78f6221c-670c-4037-9635-9a0161e8d6cb', 0, N'5', N'98', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'79ec2814-2203-45a2-9f6f-fdb063c293c3', 0, N'3', N'164', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7a9f4147-f663-4cea-86ca-0633c299c337', 0, N'3', N'10', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7af03cf8-54ce-467e-ac25-cb2af29d4662', 0, N'11', N'32', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7b4851f3-4336-4048-9517-888f21625c9a', 0, N'6', N'216', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7bd91072-eab9-41e6-9cb8-5fe9e8b3426f', 0, N'6', N'216', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7d094155-7aea-431a-931c-7806d8899301', 0, N'4', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7d6c1a8e-09ea-48f2-b42c-9f27ec6c49c6', 0, N'11', N'136', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7e017c1d-aaef-4c34-acab-9d71189ccdeb', 0, N'7', N'199', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7ed9f2c9-5354-4b31-aa33-621ae418d34a', 0, N'15', N'77', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'7ef63f9d-e736-41cc-95e1-2939b52de369', 0, N'11', N'167', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'801d768b-398c-4b64-bf9f-0149ebc91699', 0, N'17', N'87', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'826c2426-5941-4f7f-8054-f0ee5c77e195', 0, N'6', N'213', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'83596c1f-bedf-4f94-9f8f-4341c41993e7', 0, N'13', N'27', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8394a7d6-d50c-4188-97b0-0d0d346a592f', 0, N'4', N'211', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'83e32a1d-f783-43a1-8423-7446a39b69d8', 0, N'5', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'84116b9a-75b4-460d-87fd-a59b0261c01b', 0, N'9', N'274', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'85d1ab66-2f16-4ec3-871d-f64ef43ef8ea', 0, N'10', N'275', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'86de2ec9-ac2d-4705-846d-9ef16e52138d', 0, N'7', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8a6c1cd3-c05e-4e22-b657-13038e858e08', 0, N'4', N'189', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8b4135a2-5181-405b-a0a4-22dac4b448a9', 0, N'13', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8bcedf03-b7a1-448c-9177-f2e010b99880', 0, N'16', N'224', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8cf05579-a761-4920-bd81-e34598064429', 0, N'3', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8cf4f145-4d62-409c-8502-7fe475912347', 0, N'11', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8d184ae9-9e0b-4ebf-a4a5-f4c46a61d3d8', 0, N'14', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8d4ffa08-a5a3-4c10-8175-349356281744', 0, N'16', N'35', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8d5875d8-f2c4-4b49-9057-4c9a437f7d55', 0, N'15', N'110', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'8d70cb31-c737-4257-b505-e70c2002c157', 0, N'1', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9208a68c-9391-4327-9c22-3d62cc5b5307', 0, N'12', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'922a2087-10ef-4418-a69a-c185a645cfd9', 0, N'9', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9240a267-da25-4075-8129-a6e27e6f0cd6', 0, N'17', N'115', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'96383427-f345-4789-aa58-f95f6fcaa3eb', 0, N'13', N'27', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9683cdd7-b4c2-4739-85bd-4516fad688d6', 0, N'5', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'97057c73-5ba0-4531-8a42-8c2a546fd810', 0, N'4', N'243', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'973ae36f-3dd8-41f1-9b73-f6647e769673', 0, N'3', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'980948e7-5faf-4864-81c7-796622c58415', 0, N'17', N'209', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9950224a-a26d-4694-aab1-f3addf5b9eed', 0, N'5', N'112', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'99935d77-9594-4600-921c-00a324a45c26', 0, N'1', N'161', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9bab8363-63f4-400c-9c83-c64ebb6fa3e9', 0, N'14', N'240', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9bddb1d2-3da3-42af-9c3f-5ba1c7df61a3', 0, N'8', N'40', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9e5c02b8-4376-4af0-bce7-76c6558a4b2e', 0, N'6', N'42', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9f8b8664-1434-44c3-9b39-345ce6e84286', 0, N'15', N'146', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'9fb0003c-567f-41f5-bb75-2985c42d24bd', 0, N'14', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a074286e-3fbf-43f2-9809-75d5fde31a41', 0, N'5', N'7', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a0801ae1-5e0c-4e7c-8dd8-58a5a1ce7394', 0, N'10', N'123', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a28af256-7c2a-4981-915c-8523c7d44b5c', 0, N'16', N'17', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a438fb2e-815d-4909-86bb-1143dda75995', 0, N'9', N'214', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a51b43bb-2f69-459f-ba37-7e43751cb00c', 0, N'14', N'61', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a5d93e82-d3c4-4217-8dc1-0e6a583f7a36', 0, N'3', N'152', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a686aded-18ab-4fd2-a165-c9d4d6baa69a', 0, N'8', N'149', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a6fc8406-3f88-4ed9-8fb3-ff6d593d66c1', 0, N'17', N'209', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a7814421-b45b-4774-86da-6f39f3f019f8', 0, N'4', N'52', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'a9afa5e8-f8fa-42a7-93a4-92a69e5a8def', 0, N'10', N'125', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'acf557e5-d58e-4977-81da-4a021c91cc6d', 0, N'7', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'ad2e383b-19ce-4e38-b062-fa28fabecef0', 0, N'16', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'af1290cc-3dc9-41fd-b182-466743fadf92', 0, N'8', N'105', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'b09f6881-b4bb-4a53-a997-42ba7b3a1c20', 0, N'13', N'181', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'b22b24cc-c051-43d8-a718-a2e65b0a63de', 0, N'9', N'278', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'b43e8907-1d16-4e3c-8b15-01e520b2bac6', 0, N'1', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'ba29b969-a605-451f-94c8-e4b803fe5664', 0, N'15', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'bb0c1b67-7512-46a8-90f4-b34260bb1049', 0, N'8', N'58', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'bbac53ce-be44-492c-9d16-5f7cc4396089', 0, N'14', N'128', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'bbc735bb-0eaf-4cdb-b369-198e56d8349a', 0, N'12', N'90', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'bbebdc7b-9a4c-4109-86a2-93498fbcb505', 0, N'2', N'183', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'bc7ef346-d7dd-4df9-a93b-24ea0a90c324', 0, N'7', N'230', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'bc9d0ec3-fd49-466c-813a-34897fe36786', 0, N'16', N'224', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c130755d-5f76-4055-9823-fee6f92d0821', 0, N'6', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c140d397-5cc1-47b7-ae00-7a31a62a9ffc', 0, N'5', N'95', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c3189269-6d7f-48b1-b275-4ccf326c2892', 0, N'5', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c66a5099-442a-4602-8e49-a839154adbf3', 0, N'12', N'238', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c6f875a5-2f78-402b-97fa-a050b2845e90', 0, N'3', N'133', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c71330a7-357d-4a29-be16-69a9fa072a0a', 0, N'6', N'129', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c779a8ac-b2d4-4802-be63-7f299ab6eb0e', 0, N'3', N'133', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c7ab481b-b27a-45b9-9fa7-aa87b7f8dce3', 0, N'4', N'227', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c7f886df-eddf-4d18-8a46-1103d27d9ea2', 0, N'2', N'101', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c8e8f155-0f56-477b-adc6-d8a0da752ccf', 0, N'11', N'32', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c9164370-0457-4783-afed-1f699549dde0', 0, N'9', N'191', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c9ae5be5-ee1b-4224-869e-42013360ad61', 0, N'8', N'151', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'c9f3b719-eb1a-4e55-9725-74cc64c0de83', 0, N'5', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'ca01f7b6-f0dd-4a4c-96fc-8734b3a0ca41', 0, N'12', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'cb8331cb-3e44-4666-adc2-78eaea4abede', 0, N'17', N'87', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'cbe859db-e0db-4f73-bc03-5b1516c15dd5', 0, N'2', N'183', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'cd40f66e-354b-4c28-9d0c-155a6c4367fe', 0, N'16', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'cde56ff1-4425-4a52-8a9c-a519474f947a', 0, N'7', N'199', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'ce3eb0af-16d3-4e6e-97d4-d073d17aaa9e', 0, N'15', N'47', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'cfacfae4-3a07-4a4e-a782-ebe1fede140b', 0, N'13', N'187', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd0374b21-1d76-44a6-8bbe-3e23dfa9498e', 0, N'15', N'146', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd1a98286-b79a-4361-baa6-dd9bdb3c180c', 0, N'8', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd249eac3-6b6b-4487-b0e5-8de37c6a1286', 0, N'16', N'237', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd282ca42-1e78-469d-84aa-4b909b585283', 0, N'12', N'177', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd2870257-96d6-454c-8c52-7ced905a112f', 0, N'3', N'164', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd343d7c8-7190-4a80-82f5-2a67a9f6f77c', 0, N'2', N'', N'5', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd349b141-a42e-4c15-be2f-79767cf96f7f', 0, N'9', N'41', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd424211d-0706-4bc3-a3b5-e728c04b0799', 0, N'2', N'73', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd479d6a5-0169-47b9-b8ec-9ac14db594ae', 0, N'1', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'd77bcaa9-7940-4a89-b2dc-ed2e0e10832a', 0, N'11', N'9', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'db7da7ce-8494-4399-9c89-41d8c36a3a5a', 0, N'12', N'238', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'db8e02c4-a703-4bdb-a01b-07cf122e833c', 0, N'9', N'', N'3', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'dbcf5ca8-dba6-4872-90e6-defd6054279f', 0, N'7', N'230', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'dbed9775-3764-4f99-af3b-f1d509449d4c', 0, N'12', N'', N'1', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'dcb8fa16-d888-4a91-b08f-181e1504ecf3', 0, N'13', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'dcde6414-559c-4657-9efe-3dc0f2cafeb7', 0, N'3', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'dd5c790d-a8e8-45d8-9c07-40bc176ae4a1', 0, N'8', N'40', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e1b3b2ce-0219-4ef6-a822-b78ffa446a42', 0, N'11', N'117', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e247ef7f-1a65-4210-8e3e-52f82bcb8a53', 0, N'1', N'171', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e3b1de97-e778-40bc-a1a7-5ec71d810f64', 0, N'13', N'187', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e54f2a33-849d-4a13-8165-02520a2f8dac', 0, N'11', N'136', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e66bf84c-bdb5-4a30-9a02-70bf6c68a26d', 0, N'6', N'42', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e7bcd3d3-2dd6-4adc-bb87-f42eb7ef339e', 0, N'8', N'149', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'e88c80bc-a850-4864-8809-5e6d84142ef5', 0, N'10', N'275', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'edd737a9-20df-4e39-8d6e-acf6d8032877', 0, N'12', N'90', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'edfb1e82-c302-42ef-87a5-410bda061bf4', 0, N'8', N'58', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'ee103490-3228-4c06-a075-6d943994c5a5', 0, N'12', N'177', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'efcd57ce-dd7b-4750-9d46-2f5ee555b5ce', 0, N'4', N'', N'6', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'f4412e87-07c7-45e1-8f39-112cd7f28151', 0, N'1', N'59', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'f45a43f6-917c-4fca-b300-fc3002f97e20', 0, N'11', N'9', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'f4a0120b-bf3d-4d36-b6a3-1d007983e982', 0, N'10', N'125', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'f6590048-9d53-4ced-8c32-9fbbee4da42d', 0, N'15', N'77', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'f68da94b-ea34-40de-96b7-c516ef650199', 0, N'14', N'128', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'f6b5b2bb-563d-4596-b373-cfc3e6726686', 0, N'8', N'201', N'4', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'fb7a2587-8b33-4a8a-ac6c-9f659983511f', 0, N'2', N'101', N'2', N'1', N'1', GETDATE(), GETDATE())
                    INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) VALUES (N'fbda2180-a571-45fe-9479-63b942804b5c', 0, N'9', N'41', N'2', N'1', N'1', GETDATE(), GETDATE())
	            END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Import Data
        }
        #endregion Version 2.0

        #region Version 2.1
        private static void Version21(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Import Data
            strSQL = @"INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'03bf4d0d-476c-472c-a36e-3c72cccad25a', impd_processed, N'15', N'146', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '15' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'03c03e82-2679-4154-bbdd-bc4d23a24549', impd_processed, N'6', N'42', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '6' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0466cb9d-ae42-4527-9882-11c24137915c', impd_processed, N'6', N'213', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '6' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'06cc92bd-1594-4b0d-a82b-4a128bb48a68', impd_processed, N'3', N'164', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '3' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0a1d5296-0146-4019-b866-3f9603c9abab', impd_processed, N'9', N'278', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0a20a433-7101-4fab-b2ee-e8a3cac9489d', impd_processed, N'11', N'32', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0a632374-bdc3-430d-a193-e9c899ccee43', impd_processed, N'15', N'47', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '15' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0ac0d472-d55e-4ddb-abc6-b048238916da', impd_processed, N'6', N'129', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '6' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0b6214b3-39d2-4683-bfe4-fa6798659e45', impd_processed, N'2', N'101', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '2' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0b68689a-0edb-4dc2-bd40-fce5be0b3d4b', impd_processed, N'16', N'17', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '16' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'0fbf464d-af87-4c76-9d1a-0682ca217f0a', impd_processed, N'1', N'161', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '1' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'10a131c8-83ba-450a-a4a5-1512b1f74637', impd_processed, N'12', N'177', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '12' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'13112ed5-77a9-4626-ad57-4c135b5dcc58', impd_processed, N'16', N'35', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '16' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'156ad644-ff17-469e-a121-68119093865a', impd_processed, N'13', N'187', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '13' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'1bca213e-ebfa-4a35-9ef2-16749e837c6a', impd_processed, N'2', N'183', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '2' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'1cd48108-124c-4202-8cac-699f3a2d072b', impd_processed, N'5', N'95', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '5' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'1f61f1db-a821-4b42-addf-0f799f8de8dc', impd_processed, N'4', N'211', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '4' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'205aac3c-5d7f-497d-8092-019bf8d62f1e', impd_processed, N'8', N'188', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'2092e282-d2d5-4ae7-bb73-4f9817efc4e9', impd_processed, N'1', N'171', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '1' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'2697e1ad-14dc-489f-a8ed-d0fde8b1e1d0', impd_processed, N'8', N'58', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'26e1dd4d-47e7-4b93-8bbf-85274257cb2a', impd_processed, N'10', N'275', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '10' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'26f96aef-fcd8-471e-8df4-5326586bf410', impd_processed, N'10', N'123', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '10' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'2cee0195-1de0-4d6f-ae4f-8bc58f1d35e7', impd_processed, N'4', N'243', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '4' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'2deb5731-5604-4ea7-96a0-6c3ec333b04f', impd_processed, N'8', N'201', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'369a108a-8d99-45e6-a66a-5d56f7f37414', impd_processed, N'3', N'132', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '3' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'3c922b16-4da3-41cb-85a6-6086bb187d95', impd_processed, N'16', N'237', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '16' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'3eb370cc-1b4b-450e-a429-68d7835ce466', impd_processed, N'17', N'87', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '17' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'3ebd21e7-bcb8-480e-a323-8633fbc4044f', impd_processed, N'8', N'105', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'4872a998-823d-4e3e-8479-2e9e602e9042', impd_processed, N'8', N'149', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'4c524c18-7d35-444e-9a96-309d4900132d', impd_processed, N'3', N'152', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '3' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'4d5a2a0f-f58b-4b64-8fcc-bb5f715c5c70', impd_processed, N'12', N'90', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '12' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'57a64be3-3f2b-4caa-a828-5b1443035b1c', impd_processed, N'6', N'216', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '6' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'6394d09c-722b-4713-81ac-f0fa05f1e252', impd_processed, N'14', N'240', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '14' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'653c230f-186d-4903-a3d3-23298c874513', impd_processed, N'16', N'124', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '16' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'662e51e7-23b6-4700-a2ec-f8091167bf46', impd_processed, N'4', N'227', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '4' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'6add0dff-786d-45cc-8434-002d64541942', impd_processed, N'9', N'279', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'6f78c59d-718d-472e-b2de-58f4491a4791', impd_processed, N'14', N'128', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '14' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'7999a4e2-cb86-4496-9020-175ec7c4371a', impd_processed, N'9', N'191', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'79b827c8-8241-4fe6-8908-063fca164a7f', impd_processed, N'11', N'136', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'7a59408e-e8ea-47c6-b0d9-0281a2b62c0c', impd_processed, N'8', N'40', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'7ab735d4-d807-4825-b61b-16e2f79e0820', impd_processed, N'9', N'274', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'7c578240-1c76-4b81-83e0-b9bd49778d1c', impd_processed, N'9', N'41', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'7e6aa923-7b21-4a6c-8b85-416cea0ec536', impd_processed, N'2', N'197', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '2' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'7efafac1-a860-4b6c-b82f-06a915ba0cc0', impd_processed, N'1', N'59', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '1' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'820b9465-1e9c-442a-a8e0-923fd5c41f4f', impd_processed, N'10', N'125', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '10' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'82a4bb77-9ae4-4f2b-a6a6-b77d29668c00', impd_processed, N'16', N'224', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '16' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'8435a641-6e2d-4d1e-9e97-8a465484afae', impd_processed, N'9', N'276', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'8d0b9320-428b-4843-8ef9-542eacc21af9', impd_processed, N'12', N'94', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '12' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'8d3db8cf-0572-477e-b2d8-693945a54f77', impd_processed, N'15', N'77', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '15' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'8f1ab6e2-c6b6-4204-938a-1b42146fc9bb', impd_processed, N'17', N'115', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '17' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'92c6b633-3f80-42d4-8b24-a32a73a1fb8a', impd_processed, N'9', N'214', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '9' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'967e0c5d-8389-40dc-b7a4-277b5f5134d9', impd_processed, N'6', N'218', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '6' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'9a01de8f-c43a-4905-859a-925e0a456ed7', impd_processed, N'7', N'199', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '7' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'9a3de539-257c-4f4e-96d2-86deb9e1259a', impd_processed, N'5', N'112', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '5' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'9bac768f-1442-4ddb-876a-b84815f3c7dc', impd_processed, N'3', N'133', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '3' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'9cbb2b0c-4ff6-49dd-89da-c402cb8f3623', impd_processed, N'7', N'230', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '7' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'a1ef4a75-9f8c-4e2b-8467-a5b7b60e9dde', impd_processed, N'11', N'9', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'a2848b43-63f3-42b7-b085-334a0877b215', impd_processed, N'17', N'265', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '17' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'add9f7a8-9243-4fc5-b724-c298659f0887', impd_processed, N'5', N'98', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '5' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'ae5360d4-80fc-41bf-9eab-f835ec260809', impd_processed, N'5', N'7', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '5' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'af0024b9-4b85-4d71-9894-c51377bb7779', impd_processed, N'15', N'110', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '15' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'b02fbdd6-318f-4459-a73c-aff87e61e981', impd_processed, N'12', N'238', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '12' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'bbae0f30-816b-491b-8e0f-af830eb163f7', impd_processed, N'4', N'189', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '4' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'c0cb1c02-8c5b-4ed3-bce2-cfb69ead90b0', impd_processed, N'14', N'61', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '14' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'c28d5a32-409f-477e-8313-1a27fdb7a4e1', impd_processed, N'7', N'121', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '7' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'c2c5509c-7af1-4524-a81b-40156d96a0a0', impd_processed, N'11', N'167', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'c74d48da-c8ae-41ba-8068-4a0ba5382e17', impd_processed, N'11', N'33', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'd259b05f-57df-4031-84a5-0bd2cc6f50c6', impd_processed, N'17', N'209', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '17' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'd350fbea-29fa-400c-938a-a650179899f2', impd_processed, N'3', N'16', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '3' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'd7a294f7-4929-44f9-9df2-fc748e52125e', impd_processed, N'11', N'166', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'd7efe38d-78ef-4516-a11f-513cfb4e3469', impd_processed, N'2', N'73', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '2' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'dec3637e-8fee-4ae0-9852-5759a58bb668', impd_processed, N'3', N'10', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '3' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'e2877a5e-6218-4cee-a2a8-1db357526928', impd_processed, N'11', N'117', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '11' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'e484ebca-a4b8-4e11-a1cb-26db73b9ba9b', impd_processed, N'13', N'181', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '13' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'ed734de3-debe-42b9-b869-108f32c68abf', impd_processed, N'8', N'184', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'f17efcdc-616a-4e83-a7f7-378fb309e227', impd_processed, N'13', N'277', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '13' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'f5c36bf7-581e-4102-adf8-29812ddf3454', impd_processed, N'8', N'151', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '8' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'fecb17d4-a820-4c5e-ac1c-8345eeb47686', impd_processed, N'13', N'27', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '13' AND sct_id = '' AND ifl_id = '5' 
                INSERT [dbo].[um_import_data] ([impd_id], [impd_processed], [dst_id], [sct_id], [ifl_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'ffb5716e-f580-45af-96c3-212111258e09', impd_processed, N'4', N'52', ifl_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update FROM um_import_data WHERE dst_id = '4' AND sct_id = '' AND ifl_id = '5' 

                DELETE FROM um_import_data WHERE impd_id = N'55e3da0f-5fda-400c-9473-9ad4d800ecb2'
                DELETE FROM um_import_data WHERE impd_id = N'd343d7c8-7190-4a80-82f5-2a67a9f6f77c'
                DELETE FROM um_import_data WHERE impd_id = N'973ae36f-3dd8-41f1-9b73-f6647e769673'
                DELETE FROM um_import_data WHERE impd_id = N'7d094155-7aea-431a-931c-7806d8899301'
                DELETE FROM um_import_data WHERE impd_id = N'9683cdd7-b4c2-4739-85bd-4516fad688d6'
                DELETE FROM um_import_data WHERE impd_id = N'474a3078-ebbb-40e5-af8f-dbc5d83e16c1'
                DELETE FROM um_import_data WHERE impd_id = N'acf557e5-d58e-4977-81da-4a021c91cc6d'
                DELETE FROM um_import_data WHERE impd_id = N'5527e8f5-5731-4fb1-b57c-21b1eadb96df'
                DELETE FROM um_import_data WHERE impd_id = N'7081e16b-f529-4c60-be79-bece7fb93c1b'
                DELETE FROM um_import_data WHERE impd_id = N'676e9bb6-a97e-4022-8ee8-c1e2ee4ae99a'
                DELETE FROM um_import_data WHERE impd_id = N'209316e4-9e97-4db1-9a45-ec2c060f4bc7'
                DELETE FROM um_import_data WHERE impd_id = N'ca01f7b6-f0dd-4a4c-96fc-8734b3a0ca41'
                DELETE FROM um_import_data WHERE impd_id = N'44d40925-ff12-42b7-8c13-6a9dd8342b83'
                DELETE FROM um_import_data WHERE impd_id = N'9fb0003c-567f-41f5-bb75-2985c42d24bd'
                DELETE FROM um_import_data WHERE impd_id = N'3b8f8093-ec9c-4bc8-9eba-4236e5934ae6'
                DELETE FROM um_import_data WHERE impd_id = N'cd40f66e-354b-4c28-9d0c-155a6c4367fe'
                DELETE FROM um_import_data WHERE impd_id = N'04bb64df-fdce-42c5-94e9-8262e420bee9' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Import Data
        }
        #endregion Version 2.1

        #region Version 2.2
        private static void Version22(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Ward
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_ward] ON
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1557, N'1557', N'Kirasa', 1556, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1557' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1557')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1558, N'1558', N'Kayanja', 1558, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1558' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1558')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1559, N'1559', N'Kiyanja', 1559, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1559' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1559')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1560, N'1560', N'Mutagata', 1560, 1, N'168', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1560' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1560')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1561, N'1561', N'Mugarama', 1561, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1561' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1561')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1562, N'1562', N'Imara', 1562, 1, N'200', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1562' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1562')
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Ward
        }
        #endregion Version 2.2

        #region Version 2.3
        private static void Version23(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Sub County
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_sub_county] ON
                    INSERT [dbo].[lst_sub_county] ([sct_sid], [sct_id], [sct_name], [sct_order], [sct_active], [dst_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1557, N'280', UPPER(N'Bbanda'), 280, 1, N'13', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '280' IN (SELECT sct_id FROM lst_sub_county WHERE sct_id = '280')
                    SET IDENTITY_INSERT [dbo].[lst_sub_county] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Sub County

            #region Update Ward
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_ward] ON
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1563, N'1563', UPPER(N'Bbanda'), 1563, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1563' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1563')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1564, N'1564', UPPER(N'Buzibazi'), 1564, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1564' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1564')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1565, N'1565', UPPER(N'Kayanga'), 1565, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1565' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1565')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1566, N'1566', UPPER(N'Kanyale'), 1566, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1566' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1566')
                    INSERT [dbo].[lst_ward] ([wrd_sid], [wrd_id], [wrd_name], [wrd_order], [wrd_active], [sct_id], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1567, N'1567', UPPER(N'Mpongo'), 1567, 1, N'280', N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1567' IN (SELECT wrd_id FROM lst_ward WHERE wrd_id = '1567')
                    SET IDENTITY_INSERT [dbo].[lst_ward] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Ward
        }
        #endregion Version 2.3

        #region Version 2.4
        private static void Version24(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Apprenticeship Partner
            strSQL = @"INSERT [dbo].[lst_apprenticeship_partner] ([apt_id], [apt_name], [apt_order], [apt_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'393', N'C-Bird', 393, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '393' IN (SELECT apt_id FROM [lst_apprenticeship_partner] WHERE apt_id = '393')";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Apprenticeship Partner

            #region Update Disability Type
            strSQL = @"UPDATE lst_disability_type SET dtp_name = 'Mental Disability' WHERE dtp_id = '1' AND dtp_name = 'MD'
                UPDATE lst_disability_type SET dtp_name = 'Physical Disability' WHERE dtp_id = '2' AND dtp_name = 'PD' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Disability Type

            #region Update Education Level
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_education_level] ON
                INSERT [dbo].[lst_education_level] ([edu_sid], [edu_id], [edu_name], [edu_order], [edu_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 17, N'17', N'Never', 17, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '17' IN (SELECT edu_id FROM [lst_education_level] WHERE edu_id = '17')
                SET IDENTITY_INSERT [dbo].[lst_education_level] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Education Level

            #region Update HIV Type
            strSQL = @"UPDATE lst_hiv_status SET hst_name = 'Positive' WHERE hst_id = '1' AND hst_name = '+'
                UPDATE lst_hiv_status SET hst_name = 'Negative' WHERE hst_id = '2' AND hst_name = '-'
                UPDATE lst_hiv_status SET hst_name = 'Unknown' WHERE hst_id = '3' AND hst_name = '?' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update HIV Type

            #region Update Marital Status
            strSQL = @"UPDATE lst_marital_status SET mst_name = 'Married' WHERE mst_id = '1' AND mst_name = 'M'
                UPDATE lst_marital_status SET mst_name = 'Single' WHERE mst_id = '2' AND mst_name = 'S' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Marital Status

            #region Update Profession
            strSQL = @"UPDATE lst_profession SET prf_name = 'Student' WHERE prf_id = '1' AND prf_name = 'S'
                UPDATE lst_profession SET prf_name = 'Working' WHERE prf_id = '2' AND prf_name = 'W'
                UPDATE lst_profession SET prf_name = 'Unemployed' WHERE prf_id = '3' AND prf_name = 'UE'
                UPDATE lst_profession SET prf_name = 'Not Applicable' WHERE prf_id = '4' AND prf_name = 'NA' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Profession

            #region Update Protection
            strSQL = @"UPDATE lst_protection SET prt_name = 'Physical Abuse' WHERE prt_id = '1' AND prt_name = 'PA'
                UPDATE lst_protection SET prt_name = 'Early Pregnancy' WHERE prt_id = '2' AND prt_name = 'EP'
                UPDATE lst_protection SET prt_name = 'Early Marriage' WHERE prt_id = '3' AND prt_name = 'EM'
                UPDATE lst_protection SET prt_name = 'Sexual Abuse' WHERE prt_id = '4' AND prt_name = 'SA' ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_protection] ON
                INSERT [dbo].[lst_protection] ([prt_sid], [prt_id], [prt_name], [prt_order], [prt_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 5, N'5', N'Not Applicable', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT prt_id FROM lst_protection WHERE prt_id = '5')
                SET IDENTITY_INSERT [dbo].[lst_protection] OFF ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Protection
        }
        #endregion Version 2.4

        #region Version 2.5
        private static void Version25(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Update Protection
            strSQL = @"INSERT [dbo].[lst_financial_year] ([fy_id], [fy_name], [fy_order], [fy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'3', N'2017 - 2018', 4, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT fy_id FROM lst_financial_year WHERE fy_id = '3')
                INSERT [dbo].[lst_financial_year] ([fy_id], [fy_name], [fy_order], [fy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'4', N'2018 - 2019', 3, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT fy_id FROM lst_financial_year WHERE fy_id = '4')
                INSERT [dbo].[lst_financial_year] ([fy_id], [fy_name], [fy_order], [fy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'5', N'2019 - 2020', 2, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT fy_id FROM lst_financial_year WHERE fy_id = '5')
                INSERT [dbo].[lst_financial_year] ([fy_id], [fy_name], [fy_order], [fy_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT N'6', N'2020 - 2021', 1, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '6' IN (SELECT fy_id FROM lst_financial_year WHERE fy_id = '6')
                UPDATE lst_financial_year SET fy_order = 5 WHERE fy_id = '1' AND fy_order = 1
                UPDATE lst_financial_year SET fy_order = 6 WHERE fy_id = '2' AND fy_order = 2 ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update Protection
        }
        #endregion Version 2.5

        #region Version 2.6
        private static void Version26(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Insert Record Type
            strSQL = @"INSERT INTO lst_record_type (rtp_id, rtp_name, rtp_order, rtp_active, lng_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update)
                SELECT '5', 'Home Visit (Archive)', 5, 1, 'EN', '1', '1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT rtp_id FROM lst_record_type WHERE rtp_id = '5') ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Insert Record Type

            #region Data Tables
            #region Household Home Visit
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_home_visit')
                BEGIN
					CREATE TABLE [dbo].[hh_household_home_visit](
						[hhv_id] [varchar](50) NOT NULL,
						[hhv_date] [datetime] NOT NULL,
						[hhv_date_next_visit] [datetime] NOT NULL,
						[hhv_household_income] [int] NOT NULL,
						[hhv_comments] [varchar](max) NOT NULL,
						[hhv_next_steps] [varchar](max) NOT NULL,
						[hhv_swk_code] [varchar](50) NOT NULL,
						[hhv_visitor_tel] [varchar](50) NOT NULL,
						[am_id] [varchar](50) NOT NULL,
						[hvhs_id] [varchar](50) NOT NULL,
						[hvr_id] [varchar](50) NOT NULL,
						[hh_id] [varchar](50) NOT NULL,
						[hhm_id] [varchar](50) NOT NULL,
						[hnr_id_visitor] [varchar](50) NOT NULL,
						[swk_id] [varchar](50) NOT NULL,
						[swk_id_visitor] [varchar](50) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
						[ofc_id] [varchar](50) NOT NULL,
					 CONSTRAINT [PK_hh_household_home_visit] PRIMARY KEY CLUSTERED 
					(
						[hhv_id] ASC
					)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
					) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_home_visit_upload')
                BEGIN
					CREATE TABLE [dbo].[hh_household_home_visit_upload](
	                    [hhv_sid] [int] IDENTITY(1,1) NOT NULL,
						[hhv_id] [varchar](50) NOT NULL,
						[hhv_date] [datetime] NOT NULL,
						[hhv_date_next_visit] [datetime] NOT NULL,
						[hhv_household_income] [int] NOT NULL,
						[hhv_comments] [varchar](max) NOT NULL,
						[hhv_next_steps] [varchar](max) NOT NULL,
						[hhv_swk_code] [varchar](50) NOT NULL,
						[hhv_visitor_tel] [varchar](50) NOT NULL,
						[am_id] [varchar](50) NOT NULL,
						[hvhs_id] [varchar](50) NOT NULL,
						[hvr_id] [varchar](50) NOT NULL,
						[hh_id] [varchar](50) NOT NULL,
						[hhm_id] [varchar](50) NOT NULL,
						[hnr_id_visitor] [varchar](50) NOT NULL,
						[swk_id] [varchar](50) NOT NULL,
						[swk_id_visitor] [varchar](50) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
						[ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
					 CONSTRAINT [PK_hh_household_home_visit_upload] PRIMARY KEY CLUSTERED 
					(
						[hhv_sid] ASC
					)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
					) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_insert] ON [dbo].[hh_household_home_visit] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_upload]
                        ([hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                    FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_update] ON [dbo].[hh_household_home_visit] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE([hhv_id]) OR UPDATE([hhv_date]) OR UPDATE([hhv_date_next_visit]) OR UPDATE([hhv_household_income]) OR UPDATE([hhv_comments]) OR UPDATE([hhv_next_steps]) OR UPDATE([hhv_swk_code]) OR UPDATE([hhv_visitor_tel]) OR UPDATE([am_id]) OR UPDATE([hvhs_id]) OR UPDATE([hvr_id]) OR UPDATE([hh_id]) OR UPDATE([hhm_id]) OR UPDATE([hnr_id_visitor]) OR UPDATE([swk_id]) OR UPDATE([swk_id_visitor]))
	                BEGIN
	                    INSERT INTO [dbo].[hh_household_home_visit_upload]
                            ([hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor],
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                    SELECT [hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor], 
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
                        FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_delete] ON [dbo].[hh_household_home_visit] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_upload]
                        ([hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                    FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion Household Home Visit

            #region Household Home Visit Member
            #region Tables
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_home_visit_member')
                BEGIN
					CREATE TABLE [dbo].[hh_household_home_visit_member](
						[hhvm_id] [varchar](50) NOT NULL,
						[hhm_id] [varchar](50) NOT NULL,
						[hhv_id] [varchar](50) NOT NULL,
						[hst_id] [varchar](50) NOT NULL,	
						[yn_id_hhm_active] [varchar](50) NOT NULL,
						[yn_id_edu_sensitised] [varchar](50) NOT NULL,
						[yn_id_es_aflateen] [varchar](50) NOT NULL,
						[yn_id_es_agro] [varchar](50) NOT NULL,
						[yn_id_es_apprenticeship] [varchar](50) NOT NULL,
						[yn_id_es_silc] [varchar](50) NOT NULL,
						[yn_id_fsn_nutrition] [varchar](50) NOT NULL,
						[yn_id_fsn_referred] [varchar](50) NOT NULL,
						[yn_id_fsn_wash] [varchar](50) NOT NULL,	
						[ynna_id_edu_enrolled] [varchar](50) NOT NULL,
						[ynna_id_edu_support] [varchar](50) NOT NULL,
						[ynna_id_fsn_education] [varchar](50) NOT NULL,
						[ynna_id_fsn_support] [varchar](50) NOT NULL,
						[ynna_id_hhp_adhering] [varchar](50) NOT NULL,
						[ynna_id_hhp_art] [varchar](50) NOT NULL,
						[ynna_id_hhp_referred] [varchar](50) NOT NULL,
						[ynna_id_pro_birth_certificate] [varchar](50) NOT NULL,
						[ynna_id_pro_birth_registration] [varchar](50) NOT NULL,
						[ynna_id_pro_child_abuse] [varchar](50) NOT NULL,
						[ynna_id_pro_child_labour] [varchar](50) NOT NULL,
						[ynna_id_pro_reintegrated] [varchar](50) NOT NULL,
						[ynna_id_ps_parenting] [varchar](50) NOT NULL,
						[ynna_id_ps_support] [varchar](50) NOT NULL,
						[ynna_id_ps_violence] [varchar](50) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
						[ofc_id] [varchar](50) NOT NULL,
					 CONSTRAINT [PK_hh_household_home_visit_member] PRIMARY KEY CLUSTERED 
					(
						[hhvm_id] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'hh_household_home_visit_member_upload')
                BEGIN
					CREATE TABLE [dbo].[hh_household_home_visit_member_upload](
	                    [hhvm_sid] [int] IDENTITY(1,1) NOT NULL,
						[hhvm_id] [varchar](50) NOT NULL,
						[hhm_id] [varchar](50) NOT NULL,
						[hhv_id] [varchar](50) NOT NULL,
						[hst_id] [varchar](50) NOT NULL,	
						[yn_id_hhm_active] [varchar](50) NOT NULL,
						[yn_id_edu_sensitised] [varchar](50) NOT NULL,
						[yn_id_es_aflateen] [varchar](50) NOT NULL,
						[yn_id_es_agro] [varchar](50) NOT NULL,
						[yn_id_es_apprenticeship] [varchar](50) NOT NULL,
						[yn_id_es_silc] [varchar](50) NOT NULL,
						[yn_id_fsn_nutrition] [varchar](50) NOT NULL,
						[yn_id_fsn_referred] [varchar](50) NOT NULL,
						[yn_id_fsn_wash] [varchar](50) NOT NULL,	
						[ynna_id_edu_enrolled] [varchar](50) NOT NULL,
						[ynna_id_edu_support] [varchar](50) NOT NULL,
						[ynna_id_fsn_education] [varchar](50) NOT NULL,
						[ynna_id_fsn_support] [varchar](50) NOT NULL,
						[ynna_id_hhp_adhering] [varchar](50) NOT NULL,
						[ynna_id_hhp_art] [varchar](50) NOT NULL,
						[ynna_id_hhp_referred] [varchar](50) NOT NULL,
						[ynna_id_pro_birth_certificate] [varchar](50) NOT NULL,
						[ynna_id_pro_birth_registration] [varchar](50) NOT NULL,
						[ynna_id_pro_child_abuse] [varchar](50) NOT NULL,
						[ynna_id_pro_child_labour] [varchar](50) NOT NULL,
						[ynna_id_pro_reintegrated] [varchar](50) NOT NULL,
						[ynna_id_ps_parenting] [varchar](50) NOT NULL,
						[ynna_id_ps_support] [varchar](50) NOT NULL,
						[ynna_id_ps_violence] [varchar](50) NOT NULL,
						[usr_id_create] [varchar](50) NOT NULL,
						[usr_id_update] [varchar](50) NOT NULL,
						[usr_date_create] [datetime] NOT NULL,
						[usr_date_update] [datetime] NOT NULL,
						[ofc_id] [varchar](50) NOT NULL,
	                    [trg_action] [int] NOT NULL,
					 CONSTRAINT [PK_hh_household_home_visit_member_upload] PRIMARY KEY CLUSTERED 
					(
						[hhvm_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Tables

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_member_insert] ON [dbo].[hh_household_home_visit_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_member_upload]
                        ([hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1
                    FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_member_update] ON [dbo].[hh_household_home_visit_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE([hhvm_id]) OR UPDATE([hhm_id]) OR UPDATE([hhv_id]) OR UPDATE([hst_id]) OR UPDATE([yn_id_hhm_active]) OR UPDATE([yn_id_edu_sensitised]) OR UPDATE([yn_id_es_aflateen]) OR UPDATE([yn_id_es_agro]) OR UPDATE([yn_id_es_apprenticeship]) OR UPDATE([yn_id_es_silc]) OR UPDATE([yn_id_fsn_nutrition]) OR UPDATE([yn_id_fsn_referred]) OR UPDATE([yn_id_fsn_wash]) OR UPDATE([ynna_id_edu_enrolled]) OR UPDATE([ynna_id_edu_support]) OR UPDATE([ynna_id_fsn_education]) OR UPDATE([ynna_id_fsn_support]) OR UPDATE([ynna_id_hhp_adhering]) OR UPDATE([ynna_id_hhp_art]) OR UPDATE([ynna_id_hhp_referred]) OR UPDATE([ynna_id_pro_birth_certificate]) OR UPDATE([ynna_id_pro_birth_registration]) OR UPDATE([ynna_id_pro_child_abuse]) OR UPDATE([ynna_id_pro_child_labour]) OR UPDATE([ynna_id_pro_reintegrated]) OR UPDATE([ynna_id_ps_parenting]) OR UPDATE([ynna_id_ps_support]) OR UPDATE([ynna_id_ps_violence]))
	                BEGIN
	                    INSERT INTO [dbo].[hh_household_home_visit_member_upload]
                            ([hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                    SELECT [hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2
                        FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_member_delete] ON [dbo].[hh_household_home_visit_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_member_upload]
                        ([hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action])
	                SELECT [hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3
                    FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion Household Home Visit Member
            #endregion Data Tables

            #region List Tables
            #region Average Meals
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_average_meals')
                BEGIN
	                CREATE TABLE [dbo].[lst_average_meals](
		                [am_sid] [int] IDENTITY(1,1) NOT NULL,
		                [am_id] [varchar](50) NOT NULL,
		                [am_name] [varchar](500) NOT NULL,
		                [am_order] [int] NOT NULL,
		                [am_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_average_meals] PRIMARY KEY CLUSTERED 
	                (
		                [am_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].lst_average_meals ON 																																																   
	                INSERT [dbo].[lst_average_meals] ([am_sid], [am_id], [am_name], [am_order], [am_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'One', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT am_id FROM [lst_average_meals] WHERE am_id = '1') 
	                INSERT [dbo].[lst_average_meals] ([am_sid], [am_id], [am_name], [am_order], [am_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'Two', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT am_id FROM [lst_average_meals] WHERE am_id = '2') 
	                INSERT [dbo].[lst_average_meals] ([am_sid], [am_id], [am_name], [am_order], [am_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'Three', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT am_id FROM [lst_average_meals] WHERE am_id = '3') 
	                INSERT [dbo].[lst_average_meals] ([am_sid], [am_id], [am_name], [am_order], [am_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'Not everyday', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT am_id FROM [lst_average_meals] WHERE am_id = '4') 
					SET IDENTITY_INSERT [dbo].[lst_average_meals] OFF
					
					SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 56, N'lst_average_meals', N'am', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_average_meals' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_average_meals') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Average Meals

            #region Home Visit Household Status
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_home_visit_household_status')
                BEGIN
	                CREATE TABLE [dbo].[lst_home_visit_household_status](
		                [hvhs_sid] [int] IDENTITY(1,1) NOT NULL,
		                [hvhs_id] [varchar](50) NOT NULL,
		                [hvhs_name] [varchar](500) NOT NULL,
		                [hvhs_order] [int] NOT NULL,
		                [hvhs_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_home_visit_household_status] PRIMARY KEY CLUSTERED 
	                (
		                [hvhs_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].lst_home_visit_household_status ON 																																																   
	                INSERT [dbo].[lst_home_visit_household_status] ([hvhs_sid], [hvhs_id], [hvhs_name], [hvhs_order], [hvhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'Active', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT hvhs_id FROM [lst_home_visit_household_status] WHERE hvhs_id = '1') 
	                INSERT [dbo].[lst_home_visit_household_status] ([hvhs_sid], [hvhs_id], [hvhs_name], [hvhs_order], [hvhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'Graduated', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT hvhs_id FROM [lst_home_visit_household_status] WHERE hvhs_id = '2') 
	                INSERT [dbo].[lst_home_visit_household_status] ([hvhs_sid], [hvhs_id], [hvhs_name], [hvhs_order], [hvhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'Transferred to another location', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT hvhs_id FROM [lst_home_visit_household_status] WHERE hvhs_id = '3') 
	                INSERT [dbo].[lst_home_visit_household_status] ([hvhs_sid], [hvhs_id], [hvhs_name], [hvhs_order], [hvhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 4, N'4', N'Exited at will', 4, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '4' IN (SELECT hvhs_id FROM [lst_home_visit_household_status] WHERE hvhs_id = '4') 
	                INSERT [dbo].[lst_home_visit_household_status] ([hvhs_sid], [hvhs_id], [hvhs_name], [hvhs_order], [hvhs_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 5, N'5', N'Lost to follow up', 5, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '5' IN (SELECT hvhs_id FROM [lst_home_visit_household_status] WHERE hvhs_id = '5') 
					SET IDENTITY_INSERT [dbo].[lst_home_visit_household_status] OFF
					
					SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 57, N'lst_home_visit_household_status', N'hvhs', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_home_visit_household_status' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_home_visit_household_status') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Home Visit Household Status

            #region Home Visit Reason
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_home_visit_reason')
                BEGIN
	                CREATE TABLE [dbo].[lst_home_visit_reason](
		                [hvr_sid] [int] IDENTITY(1,1) NOT NULL,
		                [hvr_id] [varchar](50) NOT NULL,
		                [hvr_name] [varchar](500) NOT NULL,
		                [hvr_order] [int] NOT NULL,
		                [hvr_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_home_visit_reason] PRIMARY KEY CLUSTERED 
	                (
		                [hvr_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].lst_home_visit_reason ON 																																																   
	                INSERT [dbo].[lst_home_visit_reason] ([hvr_sid], [hvr_id], [hvr_name], [hvr_order], [hvr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'Regular monthly visit', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT hvr_id FROM [lst_home_visit_reason] WHERE hvr_id = '1') 
	                INSERT [dbo].[lst_home_visit_reason] ([hvr_sid], [hvr_id], [hvr_name], [hvr_order], [hvr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'2', N'Follow up', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT hvr_id FROM [lst_home_visit_reason] WHERE hvr_id = '2') 
	                INSERT [dbo].[lst_home_visit_reason] ([hvr_sid], [hvr_id], [hvr_name], [hvr_order], [hvr_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'3', N'Mobilization of specific activities', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT hvr_id FROM [lst_home_visit_reason] WHERE hvr_id = '3') 
					SET IDENTITY_INSERT [dbo].[lst_home_visit_reason] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 58, N'lst_home_visit_reason', N'hvr', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_home_visit_reason' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_home_visit_reason') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Home Visit Reason

            #region Yes No Not Applicable
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_yes_no_not_applicable')
                BEGIN
	                CREATE TABLE [dbo].[lst_yes_no_not_applicable](
		                [ynna_sid] [int] IDENTITY(1,1) NOT NULL,
		                [ynna_id] [varchar](50) NOT NULL,
		                [ynna_name] [varchar](500) NOT NULL,
		                [ynna_order] [int] NOT NULL,
		                [ynna_active] [bit] NOT NULL,
		                [lng_id] [char](2) NOT NULL,
		                [usr_id_create] [varchar](50) NOT NULL,
		                [usr_id_update] [varchar](50) NOT NULL,
		                [usr_date_create] [datetime] NOT NULL,
		                [usr_date_update] [datetime] NOT NULL,
	                 CONSTRAINT [PK_lst_yes_no_not_applicable] PRIMARY KEY CLUSTERED 
	                (
		                [ynna_sid] ASC
	                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	                ) ON [PRIMARY]

	                SET IDENTITY_INSERT [dbo].lst_yes_no_not_applicable ON 																																																   
	                INSERT [dbo].[lst_yes_no_not_applicable] ([ynna_sid], [ynna_id], [ynna_name], [ynna_order], [ynna_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 1, N'1', N'Yes', 1, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '1' IN (SELECT ynna_id FROM [lst_yes_no_not_applicable] WHERE ynna_id = '1') 
	                INSERT [dbo].[lst_yes_no_not_applicable] ([ynna_sid], [ynna_id], [ynna_name], [ynna_order], [ynna_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 2, N'0', N'No', 2, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '2' IN (SELECT ynna_id FROM [lst_yes_no_not_applicable] WHERE ynna_id = '2') 
	                INSERT [dbo].[lst_yes_no_not_applicable] ([ynna_sid], [ynna_id], [ynna_name], [ynna_order], [ynna_active], [lng_id], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update]) SELECT 3, N'2', N'Not Applicable', 3, 1, N'EN', N'1', N'1', GETDATE(), GETDATE() WHERE NOT '3' IN (SELECT ynna_id FROM [lst_yes_no_not_applicable] WHERE ynna_id = '3') 
					SET IDENTITY_INSERT [dbo].[lst_yes_no_not_applicable] OFF

	                SET IDENTITY_INSERT [dbo].[lt_table] ON 
	                INSERT [dbo].[lt_table] ([lt_sid], [lt_name], [lt_prefix], [lt_parent_table], [lt_meta_data], [lt_has_active], [lt_has_order], [lt_has_language], [lt_has_parent], [lt_can_add]) SELECT 59, N'lst_yes_no_not_applicable', N'ynna', N'', 1, 1, 1, 1, 0, 1 WHERE NOT 'lst_yes_no_not_applicable' IN (SELECT lt_name FROM lt_table WHERE lt_name = 'lst_yes_no_not_applicable') 
	                SET IDENTITY_INSERT [dbo].[lt_table] OFF 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Yes No Not Applicable
            #endregion List Tables

            #region Data Transfer
            strSQL = @"INSERT INTO lst_sync_upload (sul_id, sul_name, sul_key, sul_order, sul_active, usr_id_create, usr_id_update, usr_date_create, usr_date_update)
                SELECT '59', 'hh_household_home_visit_upload', 'hhv_sid', 59, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '59' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '59') 
                INSERT INTO lst_sync_upload (sul_id, sul_name, sul_key, sul_order, sul_active, usr_id_create, usr_id_update, usr_date_create, usr_date_update)
                SELECT '60', 'hh_household_home_visit_member_upload', 'hhvm_sid', 60, 1, N'1', N'1', GETDATE(), GETDATE() WHERE NOT '60' IN (SELECT sul_id FROM lst_sync_upload WHERE sul_id = '60') ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Data Transfer
        }
        #endregion Version 2.6

        #region Version 3.0
        private static void Version30(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            //#region Household Status List Correction
            //strSQL = @"UPDATE um_import_data SET impd_processed = 0 ";
            //dbCon.ExecuteNonQuery(strSQL);
            //#endregion Household Status List Correction

            #region Household Status List Correction
            strSQL = @"UPDATE lst_household_status_reason SET hhsr_id = '2' WHERE hhsr_sid = 2 AND hhsr_id = '1' " +
                "UPDATE lst_household_status_reason SET hhsr_id = '3' WHERE hhsr_sid = 3 AND hhsr_id = '1' ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Household Status List Correction

        }
        #endregion Version 3.0

        #region Version 3.1
        private static void Version31(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            //#region Household Status List Correction
            //strSQL = @"UPDATE um_import_data SET impd_processed = 0 ";
            //dbCon.ExecuteNonQuery(strSQL);
            //#endregion Household Status List Correction

            //add district ID column to dat tables
            #region Add district_id column to datatables
            #region BenActivityTraining
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_activity_training')) " +
            "BEGIN " +
                "ALTER TABLE ben_activity_training ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region ben_activity_training_participant
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_activity_training_participant')) " +
            "BEGIN " +
                "ALTER TABLE ben_activity_training_participant ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_activity_training_participant

            #region ben_activity_training_participant_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_activity_training_participant_upload')) " +
            "BEGIN " +
                "ALTER TABLE ben_activity_training_participant_upload ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region ben_activity_training_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_activity_training_upload')) " +
            "BEGIN " +
                "ALTER TABLE ben_activity_training_upload ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_activity_training_upload

            #region ben_apprenticeship_register_line
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_apprenticeship_register_line')) " +
            "BEGIN " +
                "ALTER TABLE ben_apprenticeship_register_line ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_apprenticeship_register_line

            #region ben_apprenticeship_register_line_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_apprenticeship_register_line_upload')) " +
            "BEGIN " +
                "ALTER TABLE ben_apprenticeship_register_line_upload ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_apprenticeship_register_line_upload

            #region ben_girl_education_register
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_girl_education_register')) " +
            "BEGIN " +
                "ALTER TABLE ben_girl_education_register ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_girl_education_register

            #region ben_girl_education_register_child
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_girl_education_register_child')) " +
            "BEGIN " +
                "ALTER TABLE ben_girl_education_register_child ADD district_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_girl_education_register_child

            #region ben_girl_education_register_child_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_girl_education_register_child_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_girl_education_register_child_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_girl_education_register_child_upload

            #region ben_girl_education_register_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_girl_education_register_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_girl_education_register_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_girl_education_register_upload

            #region ben_service_register
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_service_register')) " +
    "BEGIN " +
        "ALTER TABLE ben_service_register ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register

            #region ben_service_register_line
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_service_register_line')) " +
    "BEGIN " +
        "ALTER TABLE ben_service_register_line ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_line

            #region ben_service_register_line_social_economic
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_service_register_line_social_economic')) " +
    "BEGIN " +
        "ALTER TABLE ben_service_register_line_social_economic ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_line_social_economic

            #region ben_service_register_line_social_economic_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_service_register_line_social_economic_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_service_register_line_social_economic_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_line_social_economic_upload

            #region ben_service_register_line_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_service_register_line_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_service_register_line_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_line_upload

            #region ben_service_register_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_service_register_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_service_register_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_upload

            #region ben_value_chain_register
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_value_chain_register')) " +
    "BEGIN " +
        "ALTER TABLE ben_value_chain_register ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_value_chain_register

            #region ben_value_chain_register_actor
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_value_chain_register_actor')) " +
    "BEGIN " +
        "ALTER TABLE ben_value_chain_register_actor ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_value_chain_register_actor

            #region ben_value_chain_register_actor_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_value_chain_register_actor_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_value_chain_register_actor_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_value_chain_register_actor_upload

            #region ben_value_chain_register_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'ben_value_chain_register_upload')) " +
    "BEGIN " +
        "ALTER TABLE ben_value_chain_register_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_value_chain_register_upload

            #region drm_enrollment
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment

            #region drm_enrollment_member
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_member')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_member ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member

            #region drm_enrollment_member_segment
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_member_segment')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_member_segment ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member_segment

            #region drm_enrollment_member_segment_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_member_segment_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_member_segment_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member_segment_upload

            #region drm_enrollment_member_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_member_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_member_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member_upload

            #region drm_enrollment_member_visit
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_member_visit')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_member_visit ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member_visit

            #region drm_enrollment_member_visit_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_member_visit_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_member_visit_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member_visit_upload

            #region drm_enrollment_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_enrollment_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_enrollment_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_upload

            #region drm_htc_register
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_htc_register')) " +
    "BEGIN " +
        "ALTER TABLE drm_htc_register ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_htc_register

            #region drm_htc_register_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_htc_register_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_htc_register_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_htc_register_upload

            #region drm_member
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_member')) " +
    "BEGIN " +
        "ALTER TABLE drm_member ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_member

            #region drm_member_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_member_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_member_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_member_upload

            #region drm_partner
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_partner')) " +
    "BEGIN " +
        "ALTER TABLE drm_partner ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner

            #region drm_partner_tracking
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_partner_tracking')) " +
    "BEGIN " +
        "ALTER TABLE drm_partner_tracking ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner_tracking

            #region drm_partner_tracking_service
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_partner_tracking_service')) " +
    "BEGIN " +
        "ALTER TABLE drm_partner_tracking_service ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner_tracking_service

            #region drm_partner_tracking_service_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_partner_tracking_service_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_partner_tracking_service_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner_tracking_service_upload

            #region drm_partner_tracking_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_partner_tracking_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_partner_tracking_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner_tracking_upload

            #region drm_partner_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_partner_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_partner_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner_upload

            #region drm_post_violence_care
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care

            #region drm_post_violence_care_line
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_line')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_line ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line

            #region drm_post_violence_care_line_dreams_service
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_line_dreams_service')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_line_dreams_service ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line_dreams_service

            #region drm_post_violence_care_line_dreams_service_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_line_dreams_service_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_line_dreams_service_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line_dreams_service_upload

            #region drm_post_violence_care_line_service
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_line_service')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_line_service ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line_service

            #region drm_post_violence_care_line_service_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_line_service_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_line_service_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line_service_upload

            #region drm_post_violence_care_line_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_line_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_line_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line_upload

            #region drm_post_violence_care_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_post_violence_care_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_post_violence_care_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_upload

            #region drm_sinovuyo_missed_session
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_sinovuyo_missed_session')) " +
    "BEGIN " +
        "ALTER TABLE drm_sinovuyo_missed_session ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_missed_session

            #region drm_sinovuyo_missed_session_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_sinovuyo_missed_session_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_sinovuyo_missed_session_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_missed_session_upload

            #region drm_sinovuyo_register
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_sinovuyo_register')) " +
    "BEGIN " +
        "ALTER TABLE drm_sinovuyo_register ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_register

            #region drm_sinovuyo_register_line
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_sinovuyo_register_line')) " +
    "BEGIN " +
        "ALTER TABLE drm_sinovuyo_register_line ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_register_line

            #region drm_sinovuyo_register_line_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_sinovuyo_register_line_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_sinovuyo_register_line_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_register_line_upload

            #region drm_sinovuyo_register_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_sinovuyo_register_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_sinovuyo_register_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_register_upload

            #region drm_stepping_stones_missed_session
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_stepping_stones_missed_session')) " +
    "BEGIN " +
        "ALTER TABLE drm_stepping_stones_missed_session ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_stepping_stones_missed_session

            #region drm_stepping_stones_missed_session_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_stepping_stones_missed_session_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_stepping_stones_missed_session_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_stepping_stones_missed_session_upload

            #region drm_stepping_stones_register
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_stepping_stones_register')) " +
    "BEGIN " +
        "ALTER TABLE drm_stepping_stones_register ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_stepping_stones_register

            #region drm_stepping_stones_register_line
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_stepping_stones_register_line')) " +
    "BEGIN " +
        "ALTER TABLE drm_stepping_stones_register_line ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_stepping_stones_register_line

            #region drm_stepping_stones_register_line_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_stepping_stones_register_line_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_stepping_stones_register_line_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_stepping_stones_register_line_upload

            #region drm_stepping_stones_register_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'drm_stepping_stones_register_upload')) " +
    "BEGIN " +
        "ALTER TABLE drm_stepping_stones_register_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_stepping_stones_register_upload

            #region hh_home_visit
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_home_visit')) " +
    "BEGIN " +
        "ALTER TABLE hh_home_visit ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit

            #region hh_home_visit_service
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_home_visit_service')) " +
    "BEGIN " +
        "ALTER TABLE hh_home_visit_service ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit_service

            #region hh_home_visit_service_previous
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_home_visit_service_previous')) " +
    "BEGIN " +
        "ALTER TABLE hh_home_visit_service_previous ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit_service_previous

            #region hh_home_visit_service_previous_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_home_visit_service_previous_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_home_visit_service_previous_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit_service_previous_upload

            #region hh_home_visit_service_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_home_visit_service_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_home_visit_service_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit_service_upload

            #region hh_home_visit_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_home_visit_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_home_visit_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit_upload

            #region hh_household
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household')) " +
    "BEGIN " +
        "ALTER TABLE hh_household ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household

            #region hh_household_assessment
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_assessment')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_assessment ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_assessment

            #region hh_household_assessment_member
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_assessment_member')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_assessment_member ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_assessment_member

            #region hh_household_assessment_member_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_assessment_member_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_assessment_member_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_assessment_member_upload

            #region hh_household_assessment_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_assessment_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_assessment_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_assessment_upload

            #region hh_household_home_visit
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_home_visit')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_home_visit ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_home_visit

            #region hh_household_home_visit_member
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_home_visit_member ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_home_visit_member

            #region hh_household_home_visit_member_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_home_visit_member_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_home_visit_member_upload

            #region hh_household_home_visit_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_home_visit_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_home_visit_upload

            #region hh_household_member
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_member')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_member ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_member

            #region hh_household_member_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_member_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_member_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_member_upload

            #region hh_household_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_household_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_household_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_upload

            #region hh_ovc_identification_prioritization
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_ovc_identification_prioritization')) " +
    "BEGIN " +
        "ALTER TABLE hh_ovc_identification_prioritization ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_ovc_identification_prioritization

            #region hh_ovc_identification_prioritization_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_ovc_identification_prioritization_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_ovc_identification_prioritization_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_ovc_identification_prioritization_upload

            #region hh_referral
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_referral')) " +
    "BEGIN " +
        "ALTER TABLE hh_referral ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_referral

            #region hh_referral_service_provided
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_referral_service_provided')) " +
    "BEGIN " +
        "ALTER TABLE hh_referral_service_provided ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_referral_service_provided

            #region hh_referral_service_provided_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_referral_service_provided_upload')) " +
    "BEGIN " +
        "ALTER TABLE hh_referral_service_provided_upload ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_referral_service_provided_upload

            #region hh_referral_service_referred
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'hh_referral_service_referred')) " +
    "BEGIN " +
        "ALTER TABLE hh_referral_service_referred ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_referral_service_referred

            #region [dbo].[hh_referral_service_referred_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[hh_referral_service_referred_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[hh_referral_service_referred_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[hh_referral_service_referred_upload]

            #region [dbo].[hh_referral_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[hh_referral_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[hh_referral_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[hh_referral_upload]

            #region [dbo].[prt_alternative_care_panel]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_alternative_care_panel]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_alternative_care_panel] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_alternative_care_panel]

            #region [dbo].[prt_alternative_care_panel_district]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_alternative_care_panel_district]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_alternative_care_panel_district] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_alternative_care_panel_district]

            #region [dbo].[prt_alternative_care_panel_district_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_alternative_care_panel_district_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_alternative_care_panel_district_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_alternative_care_panel_district_upload]

            #region [dbo].[prt_alternative_care_panel_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_alternative_care_panel_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_alternative_care_panel_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_alternative_care_panel_upload]

            #region [dbo].[prt_cbsd_resource_allocation]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_resource_allocation]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_resource_allocation] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_resource_allocation]

            #region [dbo].[prt_cbsd_resource_allocation_district]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_resource_allocation_district]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_resource_allocation_district] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_resource_allocation_district]

            #region [dbo].[prt_cbsd_resource_allocation_district_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_resource_allocation_district_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_resource_allocation_district_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_resource_allocation_district_upload]

            #region [dbo].[prt_cbsd_resource_allocation_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_resource_allocation_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_resource_allocation_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_resource_allocation_upload]

            #region [dbo].[prt_cbsd_staff_appraisal_tracking]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_staff_appraisal_tracking]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_staff_appraisal_tracking] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_staff_appraisal_tracking]

            #region [dbo].[prt_cbsd_staff_appraisal_tracking_line]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_staff_appraisal_tracking_line]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_line] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_staff_appraisal_tracking_line]

            #region [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]

            #region [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_cbsd_staff_appraisal_tracking_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_cbsd_staff_appraisal_tracking_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_cbsd_staff_appraisal_tracking_upload]

            #region [dbo].[prt_district_ovc_checklist]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_district_ovc_checklist]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_district_ovc_checklist] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_district_ovc_checklist]

            #region [dbo].[prt_district_ovc_checklist_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_district_ovc_checklist_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_district_ovc_checklist_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_district_ovc_checklist_upload]

            #region [dbo].[prt_institutional_care_summary]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_institutional_care_summary]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_institutional_care_summary] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_institutional_care_summary]

            #region [dbo].[prt_institutional_care_summary_line]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_institutional_care_summary_line]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_institutional_care_summary_line] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_institutional_care_summary_line]

            #region [dbo].[prt_institutional_care_summary_line_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_institutional_care_summary_line_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_institutional_care_summary_line_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_institutional_care_summary_line_upload]

            #region [dbo].[prt_institutional_care_summary_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[prt_institutional_care_summary_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[prt_institutional_care_summary_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[prt_institutional_care_summary_upload]

            #region [dbo].[silc_financial_register]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_financial_register]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_financial_register] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_financial_register]

            #region [dbo].[silc_financial_register_group]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_financial_register_group]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_financial_register_group] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_financial_register_group]

            #region [dbo].[silc_financial_register_group_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_financial_register_group_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_financial_register_group_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_financial_register_group_upload]

            #region [dbo].[silc_financial_register_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_financial_register_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_financial_register_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_financial_register_upload]

            #region [dbo].[silc_group]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_group]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_group] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_group]

            #region [dbo].[silc_group_member]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_group_member]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_group_member] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_group_member]

            #region [dbo].[silc_group_member_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_group_member_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_group_member_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_group_member_upload]

            #region [dbo].[silc_group_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_group_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_group_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_group_upload]

            #region [dbo].[silc_savings_register]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_savings_register]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_savings_register] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_savings_register]

            #region [dbo].[silc_savings_register_member]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_savings_register_member]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_savings_register_member] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_savings_register_member]

            #region [dbo].[silc_savings_register_member_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_savings_register_member_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_savings_register_member_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_savings_register_member_upload]

            #region [dbo].[silc_savings_register_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[silc_savings_register_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[silc_savings_register_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[silc_savings_register_upload]

            #region [dbo].[swm_social_worker]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[swm_social_worker]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[swm_social_worker] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[swm_social_worker]

            #region [dbo].[swm_social_worker_upload]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[swm_social_worker_upload]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[swm_social_worker_upload] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[swm_social_worker_upload]

            #region [dbo].[um_office]
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
            "WHERE[name] = N'district_id' AND[object_id] = OBJECT_ID(N'[dbo].[um_office]')) " +
    "BEGIN " +
        "ALTER TABLE [dbo].[um_office] ADD district_id Nvarchar(50) NULL " +
    "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion [dbo].[um_office]


            #endregion Add district_id column to datatables

            //add new columns to hh_household_home_visit_member table
            #region Home visit tool

            //Economic strengthening new columns
            #region main Table
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                       "WHERE[name] = N'yn_id_es_caregiver_group' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member')) " +
                "BEGIN " +
                   "ALTER TABLE hh_household_home_visit_member ADD yn_id_es_caregiver_group varchar(50) NULL " +
                "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                      "WHERE[name] = N'ynna_id_es_other_lending_group' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member')) " +
               "BEGIN " +
                  "ALTER TABLE hh_household_home_visit_member ADD ynna_id_es_other_lending_group varchar(50) NULL " +
               "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion main Table

            #region upload table
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                      "WHERE[name] = N'yn_id_es_caregiver_group' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member_upload')) " +
               "BEGIN " +
                  "ALTER TABLE hh_household_home_visit_member_upload ADD yn_id_es_caregiver_group varchar(50) NULL " +
               "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                     "WHERE[name] = N'ynna_id_es_other_lending_group' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member_upload')) " +
              "BEGIN " +
                 "ALTER TABLE hh_household_home_visit_member_upload ADD ynna_id_es_other_lending_group varchar(50) NULL " +
              "END";
            dbCon.ExecuteNonQuery(strSQL);

            // Education new columns
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                       "WHERE[name] = N'ynna_id_edu_attend_school_regularly' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member')) " +
                "BEGIN " +
                   "ALTER TABLE hh_household_home_visit_member ADD ynna_id_edu_attend_school_regularly varchar(50) NULL " +
                "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                       "WHERE[name] = N'ynna_id_edu_attend_school_regularly' AND[object_id] = OBJECT_ID(N'hh_household_home_visit_member_upload')) " +
                "BEGIN " +
                   "ALTER TABLE hh_household_home_visit_member_upload ADD ynna_id_edu_attend_school_regularly varchar(50) NULL " +
                "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion upload table

            #endregion  Home visit tool

            //Alter datatable triggers to include district id
            #region Update Trigers

            #region BenActivityTraining
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_insert] ON [dbo].[ben_activity_training] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_upload]
                        ([at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_update] ON [dbo].[ben_activity_training] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(at_id) OR UPDATE(at_activity) OR UPDATE(at_training_for) OR UPDATE(at_training_point) OR UPDATE(at_date_begin) OR UPDATE(at_date_end) OR UPDATE(at_days) OR UPDATE(at_session) OR UPDATE(at_coordinator) OR UPDATE(at_coordinator_tel) OR UPDATE(cso_id) OR UPDATE(ttp_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_activity_training_upload]
                           ([at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_delete] ON [dbo].[ben_activity_training] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_upload]
                        ([at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [at_id], [at_activity], [at_training_for], [at_training_point], [at_date_begin], [at_date_end], [at_days], [at_session], [at_coordinator], [at_coordinator_tel], [cso_id], [ttp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion CreateBenActivityTraining

            #region ben_activity_training_participant_upload
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_participant_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_participant_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_participant_insert] ON [dbo].[ben_activity_training_participant] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_participant_upload]
                        ([atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_participant_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_participant_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_participant_update] ON [dbo].[ben_activity_training_participant] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(atp_id) OR UPDATE(atp_name) OR UPDATE(atp_year_of_birth) OR UPDATE(atp_days) OR UPDATE(at_id) OR UPDATE(gnd_id) OR UPDATE(hhm_id) OR UPDATE(mtp_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_activity_training_participant_upload]
                           ([atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_activity_training_participant_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_activity_training_participant_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_activity_training_participant_delete] ON [dbo].[ben_activity_training_participant] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_activity_training_participant_upload]
                        ([atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [atp_id], [atp_name], [atp_year_of_birth], [atp_days], [at_id], [gnd_id], [hhm_id], [mtp_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion  ben_activity_training_participant_upload

            #region ben_apprenticeship_register_line_upload
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_register_line_insert] ON [dbo].[ben_apprenticeship_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_register_line_upload]
                        ([aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_register_line_update] ON [dbo].[ben_apprenticeship_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(aprl_id) OR UPDATE(aprl_enterprise) OR UPDATE(aprl_date_begin) OR UPDATE(aprl_date_complete) OR UPDATE(apr_id) OR UPDATE(hhm_id) OR UPDATE(apt_id) OR UPDATE(cso_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_apprenticeship_register_line_upload]
                           ([aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_apprenticeship_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_apprenticeship_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_apprenticeship_register_line_delete] ON [dbo].[ben_apprenticeship_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_apprenticeship_register_line_upload]
                        ([aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [aprl_id], [aprl_enterprise], [aprl_date_begin], [aprl_date_complete], [apr_id], [hhm_id], [apt_id], [cso_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_apprenticeship_register_line_upload

            #region ben_girl_education_register_upload

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_insert] ON [dbo].[ben_girl_education_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_upload]
                        ([ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_update] ON [dbo].[ben_girl_education_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ger_id) OR UPDATE(ger_contact_details) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(sct_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_girl_education_register_upload]
                           ([ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id],  
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id],  
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_delete] ON [dbo].[ben_girl_education_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_upload]
                        ([ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ger_id], [ger_contact_details], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_girl_education_register_upload

            #region ben_girl_education_register_child

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_child_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_child_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_child_insert] ON [dbo].[ben_girl_education_register_child] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_child_upload]
                        ([gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_child_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_child_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_child_update] ON [dbo].[ben_girl_education_register_child] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(gerc_id) OR UPDATE(gerc_support_institution) OR UPDATE(edu_id) OR UPDATE(fst_id) OR UPDATE(ger_id) OR UPDATE(hhm_id) OR UPDATE(hhm_id_caregiver))
	                BEGIN
		                INSERT INTO [dbo].[ben_girl_education_register_child_upload]
                           ([gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_girl_education_register_child_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_girl_education_register_child_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_girl_education_register_child_delete] ON [dbo].[ben_girl_education_register_child] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_girl_education_register_child_upload]
                        ([gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [gerc_id], [gerc_support_institution], [edu_id], [fst_id], [ger_id], [hhm_id], [hhm_id_caregiver], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_girl_education_register_child

            #region ben_service_register
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_insert] ON [dbo].[ben_service_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_upload]
                        ([svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_update] ON [dbo].[ben_service_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(svr_id) OR UPDATE(svr_contact_details) OR UPDATE(cso_id) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_service_register_upload]
                           ([svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_delete] ON [dbo].[ben_service_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_upload]
                        ([svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [svr_id], [svr_contact_details], [cso_id], [dst_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register

            #region ben_service_register_line
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_insert] ON [dbo].[ben_service_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_upload]
                        ([svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_update] ON [dbo].[ben_service_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(svrl_id) OR UPDATE(svrl_eco_strength_other) OR UPDATE(hhm_id) OR UPDATE(yn_id_agricalture_advisory) OR UPDATE(yn_id_apprentice_skills) OR UPDATE(yn_id_basic_care) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_case_handled) OR UPDATE(yn_id_eco_strength_other) OR UPDATE(yn_id_newly_enrolled) OR UPDATE(yn_id_parenting) OR UPDATE(yn_id_psych_support) OR UPDATE(yn_id_reintegrated) OR UPDATE(yn_id_silc_intervention) OR UPDATE(svr_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_service_register_line_upload]
                           ([svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
		                SELECT [svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
			                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_delete] ON [dbo].[ben_service_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_upload]
                        ([svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [svrl_id], [svrl_eco_strength_other], [hhm_id], [yn_id_agricalture_advisory], [yn_id_apprentice_skills], [yn_id_basic_care], [yn_id_birth_registration], [yn_id_case_handled], [yn_id_eco_strength_other], [yn_id_newly_enrolled], [yn_id_parenting], [yn_id_psych_support], [yn_id_reintegrated], [yn_id_silc_intervention], [svr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_line

            #region ben_service_register_line_social_economic

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_social_economic_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_social_economic_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_social_economic_insert] ON [dbo].[ben_service_register_line_social_economic] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_social_economic_upload]
                        ([svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_service_register_line_social_economic_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_service_register_line_social_economic_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_service_register_line_social_economic_delete] ON [dbo].[ben_service_register_line_social_economic] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_service_register_line_social_economic_upload]
                        ([svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [svrlse_id], [svrl_id], [sec_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_service_register_line_social_economic

            #region ben_value_chain_register 

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_insert] ON [dbo].[ben_value_chain_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_upload]
                        ([vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_update] ON [dbo].[ben_value_chain_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(vcr_id) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(sct_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_value_chain_register_upload]
							([vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_delete] ON [dbo].[ben_value_chain_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_upload]
                        ([vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [vcr_id], [cso_id], [fy_id], [qy_id], [sct_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_value_chain_register

            #region ben_value_chain_register_actor

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_actor_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_actor_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_actor_insert] ON [dbo].[ben_value_chain_register_actor] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_actor_upload]
                        ([vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_actor_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_actor_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_actor_update] ON [dbo].[ben_value_chain_register_actor] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(vcra_id) OR UPDATE(vcra_commodity) OR UPDATE(vcra_bds_service) OR UPDATE(vcra_id_price) OR UPDATE(vcra_id_qty) OR UPDATE(vcra_id_revenue) OR UPDATE(vcra_pb_price) OR UPDATE(vcra_pb_qty) OR UPDATE(vcra_pb_revenue) OR UPDATE(hhm_id) OR UPDATE(vcr_id))
	                BEGIN
		                INSERT INTO [dbo].[ben_value_chain_register_actor_upload]
							([vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_value_chain_register_actor_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_value_chain_register_actor_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_value_chain_register_actor_delete] ON [dbo].[ben_value_chain_register_actor] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_value_chain_register_actor_upload]
                        ([vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [vcra_id], [vcra_commodity], [vcra_bds_service], [vcra_id_price], [vcra_id_qty], [vcra_id_revenue], [vcra_pb_price], [vcra_pb_qty], [vcra_pb_revenue], [hhm_id], [vcr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion ben_value_chain_register_actor

            #region drm_enrollment

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_insert] ON [dbo].[drm_enrollment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_upload]
                        ([de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_update] ON [dbo].[drm_enrollment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(de_id) OR UPDATE(dst_id) OR UPDATE(flt_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_enrollment_upload]
							([de_id], [dst_id], [flt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [de_id], [dst_id], [flt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_delete] ON [dbo].[drm_enrollment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_upload]
                        ([de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [de_id], [dst_id], [flt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment

            #region drm_enrollment_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_insert] ON [dbo].[drm_enrollment_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_upload]
                        ([dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_update] ON [dbo].[drm_enrollment_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dem_id) OR UPDATE(dem_sn) OR UPDATE(de_id) OR UPDATE(dm_id) OR UPDATE(est_id) OR UPDATE(pst_id) OR UPDATE(sst_id) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_married) OR UPDATE(yn_id_partner) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_ts))
	                BEGIN
		                INSERT INTO [dbo].[drm_enrollment_member_upload]
							([dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_delete] ON [dbo].[drm_enrollment_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_upload]
                        ([dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dem_id], [dem_sn], [de_id], [dm_id], [est_id], [pst_id], [sst_id], [yn_id_disability], [yn_id_given_birth], [yn_id_married], [yn_id_partner], [yn_id_pregnant], [yn_id_ts], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_enrollment_member

            #region drm_enrollment_member_segment

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_segment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_segment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_segment_insert] ON [dbo].[drm_enrollment_member_segment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_segment_upload]
                        ([dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_segment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_segment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_segment_delete] ON [dbo].[drm_enrollment_member_segment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_segment_upload]
                        ([dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dems_id], [dem_id], [sgm_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_enrollment_member_segment

            #region drm_enrollment_member_visit

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_visit_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_visit_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_visit_insert] ON [dbo].[drm_enrollment_member_visit] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_visit_upload]
                        ([demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_visit_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_visit_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_visit_update] ON [dbo].[drm_enrollment_member_visit] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(demv_id) OR UPDATE(demv_comment) OR UPDATE(demv_referral) OR UPDATE(demv_date) OR UPDATE(dem_id) OR UPDATE(vst_id) OR UPDATE(yn_id_anc) OR UPDATE(yn_id_art) OR UPDATE(yn_id_cmnc) OR UPDATE(yn_id_condom_promotion) OR UPDATE(yn_id_contraceptive_mix) OR UPDATE(yn_id_hiv_testing) OR UPDATE(yn_id_parenting_program) OR UPDATE(yn_id_post_violence_care) OR UPDATE(yn_id_school_based_prevention) OR UPDATE(yn_id_social_economic) OR UPDATE(yn_id_vmmc))
	                BEGIN
		                INSERT INTO [dbo].[drm_enrollment_member_visit_upload]
							([demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_enrollment_member_visit_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_enrollment_member_visit_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_enrollment_member_visit_delete] ON [dbo].[drm_enrollment_member_visit] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_enrollment_member_visit_upload]
                        ([demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [demv_id], [demv_comment], [demv_referral], [demv_date], [dem_id], [vst_id], [yn_id_anc], [yn_id_art], [yn_id_cmnc], [yn_id_condom_promotion], [yn_id_contraceptive_mix], [yn_id_hiv_testing], [yn_id_parenting_program], [yn_id_post_violence_care], [yn_id_school_based_prevention], [yn_id_social_economic], [yn_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_enrollment_member_visit

            #region drm_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_member_insert] ON [dbo].[drm_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_member_upload]
                        ([dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_member_update] ON [dbo].[drm_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dm_id) OR UPDATE(dm_first_name) OR UPDATE(dm_last_name) OR UPDATE(dm_id_no) OR UPDATE(dm_village) OR UPDATE(dm_phone) OR UPDATE(dm_status_reason) OR UPDATE(dm_active) OR UPDATE(dm_dob) OR UPDATE(dm_registration) OR UPDATE(etp_id) OR UPDATE(hhm_id) OR UPDATE(mtp_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_member_upload]
							([dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_member_delete] ON [dbo].[drm_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_member_upload]
                        ([dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dm_id], [dm_first_name], [dm_last_name], [dm_id_no], [dm_village], [dm_phone], [dm_status_reason], [dm_active], [dm_dob], [dm_registration], [etp_id], [hhm_id], [mtp_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion  drm_member

            #region drm_htc_register

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_insert] ON [dbo].[drm_htc_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_htc_register_upload]
                        ([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_update] ON [dbo].[drm_htc_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dhr_id) OR UPDATE(dhr_result_01) OR UPDATE(dhr_result_01_date) OR UPDATE(dhr_result_02) OR UPDATE(dhr_result_02_date) OR UPDATE(dhr_result_03) OR UPDATE(dhr_result_03_date) OR UPDATE(dhr_result_04) OR UPDATE(dhr_result_04_date) OR UPDATE(dhr_result_05) OR UPDATE(dhr_result_05_date) OR UPDATE(dm_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_htc_register_upload]
							([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_htc_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_htc_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_htc_register_delete] ON [dbo].[drm_htc_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_htc_register_upload]
                        ([dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id],  
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dhr_id], [dhr_result_01], [dhr_result_01_date], [dhr_result_02], [dhr_result_02_date], [dhr_result_03], [dhr_result_03_date], [dhr_result_04], [dhr_result_04_date], [dhr_result_05], [dhr_result_05_date], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_htc_register

            #region drm_partner

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_insert] ON [dbo].[drm_partner] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_upload]
                        ([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_update] ON [dbo].[drm_partner] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dp_id) OR UPDATE(dp_first_name) OR UPDATE(dp_last_name) OR UPDATE(dm_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_partner_upload]
							([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_delete] ON [dbo].[drm_partner] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_upload]
                        ([dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dp_id], [dp_first_name], [dp_last_name], [dm_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_partner

            #region drm_partner_tracking

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_insert] ON [dbo].[drm_partner_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_upload]
                        ([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_update] ON [dbo].[drm_partner_tracking] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpt_id) OR UPDATE(dpt_date) OR UPDATE(dpt_dptp_other) OR UPDATE(dpt_phone) OR UPDATE(dpt_address) OR UPDATE(dpt_service) OR UPDATE(dp_id) OR UPDATE(dptp_id) OR UPDATE(hst_id) OR UPDATE(yn_id_traced) OR UPDATE(ynd_id_vmmc))
	                BEGIN
		                INSERT INTO [dbo].[drm_partner_tracking_upload]
							([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_delete] ON [dbo].[drm_partner_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_upload]
                        ([dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dpt_id], [dpt_date], [dpt_dptp_other], [dpt_phone], [dpt_address], [dpt_service], [dp_id], [dptp_id], [hst_id], [yn_id_traced], [ynd_id_vmmc], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_partner_tracking

            #region drm_partner_tracking_service

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_service_insert] ON [dbo].[drm_partner_tracking_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_service_upload]
                        ([dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_partner_tracking_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_partner_tracking_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_partner_tracking_service_delete] ON [dbo].[drm_partner_tracking_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_partner_tracking_service_upload]
                        ([dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dpts_id], [dpt_id], [dsrv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_partner_tracking_service

            #region drm_post_violence_care

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_insert] ON [dbo].[drm_post_violence_care] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_upload]
                        ([dpvc_id], [flt_id], [sct_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvc_id], [flt_id], [sct_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_update] ON [dbo].[drm_post_violence_care] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpvc_id) OR UPDATE(flt_id) OR UPDATE(sct_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_post_violence_care_upload]
							([dpvc_id], [flt_id], [sct_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dpvc_id], [flt_id], [sct_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_delete] ON [dbo].[drm_post_violence_care] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_upload]
                        ([dpvc_id],  [flt_id], [sct_id],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvc_id],  [flt_id], [sct_id],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_post_violence_care

            #region drm_post_violence_care_line
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_insert] ON [dbo].[drm_post_violence_care_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
                        ([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_update] ON [dbo].[drm_post_violence_care_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dpvcl_id) OR UPDATE(dpvcl_referred_from) OR UPDATE(dpvcl_date) OR UPDATE(dm_id) OR UPDATE(dpvc_id) OR UPDATE(gbv_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
							([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_delete] ON [dbo].[drm_post_violence_care_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_upload]
                        ([dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvcl_id], [dpvcl_referred_from], [dpvcl_date], [dm_id], [dpvc_id], [gbv_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line

            #region drm_post_violence_care_line_dreams_service

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_dreams_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_insert] ON [dbo].[drm_post_violence_care_line_dreams_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_dreams_service_upload]
                        ([dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_dreams_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_dreams_service_delete] ON [dbo].[drm_post_violence_care_line_dreams_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_dreams_service_upload]
                        ([dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvclds_id], [dpvcl_id], [dso_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion  drm_post_violence_care_line_dreams_service

            #region drm_post_violence_care_line_service

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_service_insert] ON [dbo].[drm_post_violence_care_line_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_service_upload]
                        ([dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_post_violence_care_line_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_post_violence_care_line_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_post_violence_care_line_service_delete] ON [dbo].[drm_post_violence_care_line_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_post_violence_care_line_service_upload]
                        ([dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [dpvcls_id], [dpvcl_id], [pvcs_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_post_violence_care_line_service

            #region drm_sinovuyo_missed_session

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_insert] ON [dbo].[drm_sinovuyo_missed_session] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
                        ([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_update] ON [dbo].[drm_sinovuyo_missed_session] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsms_id) OR UPDATE(dsms_contact) OR UPDATE(dsms_date) OR UPDATE(dsms_date_followup) OR UPDATE(dsms_action_other) OR UPDATE(dsms_followup_other) OR UPDATE(dsms_followup_method_other) OR UPDATE(dm_id) OR UPDATE(dsa_id) OR UPDATE(dsf_id) OR UPDATE(dsfm_id) OR UPDATE(yn_id_followup))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
							([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_missed_session_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_missed_session_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_missed_session_delete] ON [dbo].[drm_sinovuyo_missed_session] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_missed_session_upload]
                        ([dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dsms_id], [dsms_contact], [dsms_date], [dsms_date_followup], [dsms_action_other], [dsms_followup_other], [dsms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_missed_session

            #region drm_sinovuyo_register

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_insert] ON [dbo].[drm_sinovuyo_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
                        ([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_update] ON [dbo].[drm_sinovuyo_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsr_id) OR UPDATE(dsr_facilitator) OR UPDATE(dsr_group) OR UPDATE(dsr_village) OR UPDATE(dsr_date) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
							([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_delete] ON [dbo].[drm_sinovuyo_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_upload]
                        ([dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dsr_id], [dsr_facilitator], [dsr_group], [dsr_village], [dsr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion drm_sinovuyo_register

            #region drm_sinovuyo_register_line

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_insert] ON [dbo].[drm_sinovuyo_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
                        ([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_update] ON [dbo].[drm_sinovuyo_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dsrl_id) OR UPDATE(dsrl_contact) OR UPDATE(dm_id) OR UPDATE(dsr_id) OR UPDATE(pca_id_01) OR UPDATE(pca_id_02) OR UPDATE(pca_id_03) OR UPDATE(pca_id_04) OR UPDATE(pca_id_05) OR UPDATE(pca_id_06) OR UPDATE(pca_id_07) OR UPDATE(pca_id_08) OR UPDATE(pca_id_09) OR UPDATE(pca_id_10) OR UPDATE(pca_id_11) OR UPDATE(pca_id_12) OR UPDATE(pca_id_13) OR UPDATE(pca_id_14))
	                BEGIN
		                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
							([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_sinovuyo_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_sinovuyo_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_sinovuyo_register_line_delete] ON [dbo].[drm_sinovuyo_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_sinovuyo_register_line_upload]
                        ([dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dsrl_id], [dsrl_contact], [dm_id], [dsr_id], [pca_id_01], [pca_id_02], [pca_id_03], [pca_id_04], [pca_id_05], [pca_id_06], [pca_id_07], [pca_id_08], [pca_id_09], [pca_id_10], [pca_id_11], [pca_id_12], [pca_id_13], [pca_id_14], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_sinovuyo_register_line

            #region drm_stepping_stones_missed_session

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_insert] ON [dbo].[drm_stepping_stones_missed_session] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
                        ([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_update] ON [dbo].[drm_stepping_stones_missed_session] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssms_id) OR UPDATE(dssms_contact) OR UPDATE(dssms_date) OR UPDATE(dssms_date_followup) OR UPDATE(dssms_action_other) OR UPDATE(dssms_followup_other) OR UPDATE(dssms_followup_method_other) OR UPDATE(dm_id) OR UPDATE(dsa_id) OR UPDATE(dsf_id) OR UPDATE(dsfm_id) OR UPDATE(yn_id_followup))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
							([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_missed_session_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_missed_session_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_missed_session_delete] ON [dbo].[drm_stepping_stones_missed_session] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_missed_session_upload]
                        ([dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dssms_id], [dssms_contact], [dssms_date], [dssms_date_followup], [dssms_action_other], [dssms_followup_other], [dssms_followup_method_other], [dm_id], [dsa_id], [dsf_id], [dsfm_id], [yn_id_followup], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_stepping_stones_missed_session

            #region drm_stepping_stones_register

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_insert] ON [dbo].[drm_stepping_stones_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
                        ([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_update] ON [dbo].[drm_stepping_stones_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssr_id) OR UPDATE(dssr_facilitator) OR UPDATE(dssr_group) OR UPDATE(dssr_village) OR UPDATE(dssr_date) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
							([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_delete] ON [dbo].[drm_stepping_stones_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_upload]
                        ([dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dssr_id], [dssr_facilitator], [dssr_group], [dssr_village], [dssr_date], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_stepping_stones_register

            #region drm_stepping_stones_register_line

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_insert] ON [dbo].[drm_stepping_stones_register_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
                        ([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_update] ON [dbo].[drm_stepping_stones_register_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(dssrl_id) OR UPDATE(dssrl_contact) OR UPDATE(dm_id) OR UPDATE(dssr_id) OR UPDATE(yn_id_m1) OR UPDATE(yn_id_m2) OR UPDATE(yn_id_m3) OR UPDATE(yn_id_sa) OR UPDATE(yn_id_sb) OR UPDATE(yn_id_sc) OR UPDATE(yn_id_sd) OR UPDATE(yn_id_se) OR UPDATE(yn_id_sf) OR UPDATE(yn_id_sg) OR UPDATE(yn_id_sh) OR UPDATE(yn_id_si) OR UPDATE(yn_id_sj))
	                BEGIN
		                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
							([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'drm_stepping_stones_register_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[drm_stepping_stones_register_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[drm_stepping_stones_register_line_delete] ON [dbo].[drm_stepping_stones_register_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[drm_stepping_stones_register_line_upload]
                        ([dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [dssrl_id], [dssrl_contact], [dm_id], [dssr_id], [yn_id_m1], [yn_id_m2], [yn_id_m3], [yn_id_sa], [yn_id_sb], [yn_id_sc], [yn_id_sd], [yn_id_se], [yn_id_sf], [yn_id_sg], [yn_id_sh], [yn_id_si], [yn_id_sj],  
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion drm_stepping_stones_register_line

            #region hh_home_visit

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_insert] ON [dbo].[hh_home_visit] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_upload]
                        ([hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_update] ON [dbo].[hh_home_visit] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hv_id) OR UPDATE(hv_number_of_children) OR UPDATE(hv_date) OR UPDATE(hv_previous_visit_date) OR UPDATE(hv_previous_visit_purpose) OR UPDATE(hv_previous_visit_service) OR UPDATE(hv_actions) OR UPDATE(hv_findings) OR UPDATE(hv_next_steps) OR UPDATE(hv_girl_name) OR UPDATE(hv_girl_age) OR UPDATE(hv_girl_education_type) OR UPDATE(edu_id) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(swk_id) OR UPDATE(yn_id_consumption_program) OR UPDATE(yn_id_girl_education_support) OR UPDATE(yn_id_improvement_plan) OR UPDATE(yn_id_previous_visit) OR UPDATE(yn_id_referral) OR UPDATE(yn_id_referral_completed))
	                BEGIN
		                INSERT INTO [dbo].[hh_home_visit_upload]
							([hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_delete] ON [dbo].[hh_home_visit] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_upload]
                        ([hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hv_id], [hv_number_of_children], [hv_date], [hv_previous_visit_date], [hv_previous_visit_purpose], [hv_previous_visit_service], [hv_actions], [hv_findings], [hv_next_steps], [hv_girl_name], [hv_girl_age], [hv_girl_education_type], [edu_id], [hh_id], [hhm_id], [swk_id], [yn_id_consumption_program], [yn_id_girl_education_support], [yn_id_improvement_plan], [yn_id_previous_visit], [yn_id_referral], [yn_id_referral_completed], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_home_visit

            #region hh_home_visit_service
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_insert] ON [dbo].[hh_home_visit_service] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_upload]
                        ([hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_delete] ON [dbo].[hh_home_visit_service] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_upload]
                        ([hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [hvs_id], [hv_id], [shv_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_home_visit_service

            #region hh_home_visit_service_previous

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_previous_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_previous_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_previous_insert] ON [dbo].[hh_home_visit_service_previous] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_previous_upload]
                        ([hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_home_visit_service_previous_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_home_visit_service_previous_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_home_visit_service_previous_delete] ON [dbo].[hh_home_visit_service_previous] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_home_visit_service_previous_upload]
                        ([hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [hvsp_id], [hv_id], [shvp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_home_visit_service_previous

            #region hh_household

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_insert] ON [dbo].[hh_household] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_upload]
                        ([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_update] ON [dbo].[hh_household] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hh_id) OR UPDATE(hh_code) OR UPDATE(hh_status_reason) OR UPDATE(hh_tel) OR UPDATE(hh_village) OR UPDATE(hhs_id) OR UPDATE(hhsr_id) OR UPDATE(swk_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_upload]
							([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_delete] ON [dbo].[hh_household] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_upload]
                        ([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household

            #region hh_household_home_visit
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_insert] ON [dbo].[hh_household_home_visit] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_upload]
                        ([hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                    FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_update] ON [dbo].[hh_household_home_visit] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE([hhv_id]) OR UPDATE([hhv_date]) OR UPDATE([hhv_date_next_visit]) OR UPDATE([hhv_household_income]) OR UPDATE([hhv_comments]) OR UPDATE([hhv_next_steps]) OR UPDATE([hhv_swk_code]) OR UPDATE([hhv_visitor_tel]) OR UPDATE([am_id]) OR UPDATE([hvhs_id]) OR UPDATE([hvr_id]) OR UPDATE([hh_id]) OR UPDATE([hhm_id]) OR UPDATE([hnr_id_visitor]) OR UPDATE([swk_id]) OR UPDATE([swk_id_visitor]))
	                BEGIN
	                    INSERT INTO [dbo].[hh_household_home_visit_upload]
                            ([hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor],
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                    SELECT [hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor], 
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
                        FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_delete] ON [dbo].[hh_household_home_visit] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_upload]
                        ([hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor],
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhv_id], [hhv_date], [hhv_date_next_visit], [hhv_household_income], [hhv_comments], [hhv_next_steps], [hhv_swk_code], [hhv_visitor_tel], [am_id], [hvhs_id], [hvr_id], [hh_id], [hhm_id], [hnr_id_visitor], [swk_id], [swk_id_visitor], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                    FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_home_visit

            #region hh_household_assessment

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_insert] ON [dbo].[hh_household_assessment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_update] ON [dbo].[hh_household_assessment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hha_id) OR UPDATE(hha_comments) OR UPDATE(hha_date) OR UPDATE(hha_num_of_meals) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(icc_id) OR UPDATE(ics_id) OR UPDATE(osn_id_disagreement) OR UPDATE(swk_id) OR UPDATE(yn_id_child_separation) OR UPDATE(yn_id_financial_savings) OR UPDATE(yn_id_food_body_building) OR UPDATE(yn_id_food_energy) OR UPDATE(yn_id_food_protective) OR UPDATE(ynna_id_expenses_food) OR UPDATE(ynna_id_expenses_health) OR UPDATE(ynna_id_expenses_school) OR UPDATE(ynns_id_assets) OR UPDATE(yns_id_latrine))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_upload]
							([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_delete] ON [dbo].[hh_household_assessment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household_assessment

            #region hh_household_assessment_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_insert] ON [dbo].[hh_household_assessment_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_member_upload]
                        ([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_update] ON [dbo].[hh_household_assessment_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ham_id) OR UPDATE(ham_first_name) OR UPDATE(ham_last_name) OR UPDATE(ham_year_of_birth) OR UPDATE(dtp_id) OR UPDATE(edu_id) OR UPDATE(gnd_id) OR UPDATE(hha_id) OR UPDATE(hhm_id) OR UPDATE(hst_id) OR UPDATE(mst_id) OR UPDATE(prf_id) OR UPDATE(prt_id) OR UPDATE(yn_id_art) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_caregiver) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_hoh) OR UPDATE(yn_id_immun) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_school))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_member_upload]
							([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_delete] ON [dbo].[hh_household_assessment_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_member_upload]
                        ([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household_assessment_member

            #region hh_household_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_member_insert] ON [dbo].[hh_household_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_member_upload]
                        ([hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_member_update] ON [dbo].[hh_household_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hhm_id) OR UPDATE(hhm_first_name) OR UPDATE(hhm_last_name) OR UPDATE(hhm_number) OR UPDATE(hhm_year_of_birth) OR UPDATE(dtp_id) OR UPDATE(edu_id) OR UPDATE(gnd_id) OR UPDATE(hh_id) OR UPDATE(hst_id) OR UPDATE(mst_id) OR UPDATE(prf_id) OR UPDATE(prt_id) OR UPDATE(yn_id_art) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_caregiver) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_hoh) OR UPDATE(yn_id_immun) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_school))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_member_upload]
							([hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_member_delete] ON [dbo].[hh_household_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_member_upload]
                        ([hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [hhm_id], [hhm_first_name], [hhm_last_name], [hhm_number], [hhm_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hh_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_member

            #region hh_household_home_visit_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_member_insert] ON [dbo].[hh_household_home_visit_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_member_upload]
                        ([hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[yn_id_es_caregiver_group],[ynna_id_edu_attend_school_regularly],[ynna_id_es_other_lending_group])
	                SELECT [hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],[yn_id_es_caregiver_group],[ynna_id_edu_attend_school_regularly],[ynna_id_es_other_lending_group]
                    FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_member_update] ON [dbo].[hh_household_home_visit_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE([hhvm_id]) OR UPDATE([hhm_id]) OR UPDATE([hhv_id]) OR UPDATE([hst_id]) OR UPDATE([yn_id_hhm_active]) OR UPDATE([yn_id_edu_sensitised]) OR UPDATE([yn_id_es_aflateen]) OR UPDATE([yn_id_es_agro]) OR UPDATE([yn_id_es_apprenticeship]) OR UPDATE([yn_id_es_silc]) OR UPDATE([yn_id_fsn_nutrition]) OR UPDATE([yn_id_fsn_referred]) OR UPDATE([yn_id_fsn_wash]) OR UPDATE([ynna_id_edu_enrolled]) OR UPDATE([ynna_id_edu_support]) OR UPDATE([ynna_id_fsn_education]) OR UPDATE([ynna_id_fsn_support]) OR UPDATE([ynna_id_hhp_adhering]) OR UPDATE([ynna_id_hhp_art]) OR UPDATE([ynna_id_hhp_referred]) OR UPDATE([ynna_id_pro_birth_certificate]) OR UPDATE([ynna_id_pro_birth_registration]) OR UPDATE([ynna_id_pro_child_abuse]) OR UPDATE([ynna_id_pro_child_labour]) OR UPDATE([ynna_id_pro_reintegrated]) OR UPDATE([ynna_id_ps_parenting]) OR UPDATE([ynna_id_ps_support]) OR UPDATE([ynna_id_ps_violence]))
	                BEGIN
	                    INSERT INTO [dbo].[hh_household_home_visit_member_upload]
                            ([hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[yn_id_es_caregiver_group],[ynna_id_edu_attend_school_regularly],[ynna_id_es_other_lending_group])
	                    SELECT [hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                    [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],[yn_id_es_caregiver_group],[ynna_id_edu_attend_school_regularly],[ynna_id_es_other_lending_group]
                        FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_home_visit_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_home_visit_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_home_visit_member_delete] ON [dbo].[hh_household_home_visit_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_home_visit_member_upload]
                        ([hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[yn_id_es_caregiver_group],[ynna_id_edu_attend_school_regularly],[ynna_id_es_other_lending_group])
	                SELECT [hhvm_id], [hhm_id], [hhv_id], [hst_id], [yn_id_hhm_active], [yn_id_edu_sensitised], [yn_id_es_aflateen], [yn_id_es_agro], [yn_id_es_apprenticeship], [yn_id_es_silc], [yn_id_fsn_nutrition], [yn_id_fsn_referred], [yn_id_fsn_wash], [ynna_id_edu_enrolled], [ynna_id_edu_support], [ynna_id_fsn_education], [ynna_id_fsn_support], [ynna_id_hhp_adhering], [ynna_id_hhp_art], [ynna_id_hhp_referred], [ynna_id_pro_birth_certificate], [ynna_id_pro_birth_registration], [ynna_id_pro_child_abuse], [ynna_id_pro_child_labour], [ynna_id_pro_reintegrated], [ynna_id_ps_parenting], [ynna_id_ps_support], [ynna_id_ps_violence], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],[yn_id_es_caregiver_group],[ynna_id_edu_attend_school_regularly],[ynna_id_es_other_lending_group]
                    FROM deleted
                END";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household_home_visit_member

            #region hh_ovc_identification_prioritization

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_insert] ON [dbo].[hh_ovc_identification_prioritization] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
                        ([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_update] ON [dbo].[hh_ovc_identification_prioritization] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(oip_id) OR UPDATE(oip_comments) OR UPDATE(oip_date) OR UPDATE(oip_18_above_female) OR UPDATE(oip_18_above_male) OR UPDATE(oip_18_below_female) OR UPDATE(oip_18_below_male) OR UPDATE(oip_hiv_adult) OR UPDATE(oip_hiv_children) OR UPDATE(oip_cp_month) OR UPDATE(oip_interviewer_tel) OR UPDATE(cso_id) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(swk_id) OR UPDATE(yn_id_children) OR UPDATE(yn_id_cp_abuse) OR UPDATE(yn_id_cp_abuse_physical) OR UPDATE(yn_id_cp_abuse_sexual) OR UPDATE(yn_id_cp_marriage_teen_parent) OR UPDATE(yn_id_cp_neglected) OR UPDATE(yn_id_cp_no_birth_register) OR UPDATE(yn_id_cp_orphan) OR UPDATE(yn_id_cp_pregnancy) OR UPDATE(yn_id_cp_referred) OR UPDATE(yn_id_edu_referred) OR UPDATE(yn_id_es_child_headed) OR UPDATE(yn_id_es_disability) OR UPDATE(yn_id_es_employment) OR UPDATE(yn_id_es_expense) OR UPDATE(yn_id_es_referred) OR UPDATE(yn_id_fsn_meals) OR UPDATE(yn_id_fsn_malnourished) OR UPDATE(yn_id_fsn_referred) OR UPDATE(yn_id_hwss_hiv_positive) OR UPDATE(yn_id_hwss_hiv_status) OR UPDATE(yn_id_hwss_referred) OR UPDATE(yn_id_hwss_shelter) OR UPDATE(yn_id_hwss_water) OR UPDATE(yn_id_psbc_referred) OR UPDATE(yn_id_psbc_stigmatized) OR UPDATE(ynna_id_edu_missed_school) OR UPDATE(ynna_id_edu_not_enrolled))
	                BEGIN
		                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
							([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_delete] ON [dbo].[hh_ovc_identification_prioritization] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
                        ([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_ovc_identification_prioritization

            #region hh_referral

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_insert] ON [dbo].[hh_referral] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_upload]
                        ([rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_update] ON [dbo].[hh_referral] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(rfr_id) OR UPDATE(rfr_serial_no) OR UPDATE(rfr_ra_location) OR UPDATE(rfr_ra_tel) OR UPDATE(rfr_ra_email) OR UPDATE(rfr_ra_person_name) OR UPDATE(rfr_ra_person_title) OR UPDATE(rfr_ra_person_tel) OR UPDATE(rfr_ra_person_email) OR UPDATE(rfr_ra_date) OR UPDATE(rfr_cd_case_no) OR UPDATE(rfr_cd_nature) OR UPDATE(rfr_cd_perpetrator) OR UPDATE(rfr_cd_perpetrator_relationship) OR UPDATE(rfr_cd_date_occured) OR UPDATE(rfr_cd_other) OR UPDATE(rfr_cd_accompany_name) OR UPDATE(rfr_cd_accompany_tel) OR UPDATE(rfr_cd_accompany_email) OR UPDATE(rfr_cd_accompany_relationship) OR UPDATE(rfr_cd_guardian_name) OR UPDATE(rfr_cd_guardian_tel) OR UPDATE(rfr_cd_guardian_village) OR UPDATE(rfr_service_before) OR UPDATE(rfr_service_referral) OR UPDATE(rfr_service_discussion) OR UPDATE(rfr_ar_name) OR UPDATE(rfr_ar_location) OR UPDATE(rfr_ar_contact_name) OR UPDATE(rfr_ar_contact_tel) OR UPDATE(rfr_ar_contact_email) OR UPDATE(rfr_fb_agency_name) OR UPDATE(rfr_fb_person_name) OR UPDATE(rfr_fb_person_title) OR UPDATE(rfr_fb_location) OR UPDATE(rfr_fb_tel) OR UPDATE(rfr_fb_email) OR UPDATE(rfr_fb_date) OR UPDATE(rfr_fb_id_no) OR UPDATE(rfr_fb_case_no) OR UPDATE(rfr_fb_service) OR UPDATE(rfr_fb_other) OR UPDATE(hhm_id) OR UPDATE(prt_cso_id_ra) OR UPDATE(wrd_id_guardian) OR UPDATE(yn_id_discussion) OR UPDATE(yn_id_helpline))
	                BEGIN
		                INSERT INTO [dbo].[hh_referral_upload]
							([rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_delete] ON [dbo].[hh_referral] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_upload]
                        ([rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [rfr_id], [rfr_serial_no], [rfr_ra_location], [rfr_ra_tel], [rfr_ra_email], [rfr_ra_person_name], [rfr_ra_person_title], [rfr_ra_person_tel], [rfr_ra_person_email], [rfr_ra_date], [rfr_cd_case_no], [rfr_cd_nature], [rfr_cd_perpetrator], [rfr_cd_perpetrator_relationship], [rfr_cd_date_occured], [rfr_cd_other], [rfr_cd_accompany_name], [rfr_cd_accompany_tel], [rfr_cd_accompany_email], [rfr_cd_accompany_relationship], [rfr_cd_guardian_name], [rfr_cd_guardian_tel], [rfr_cd_guardian_village], [rfr_service_before], [rfr_service_referral], [rfr_service_discussion], [rfr_ar_name], [rfr_ar_location], [rfr_ar_contact_name], [rfr_ar_contact_tel], [rfr_ar_contact_email], [rfr_fb_agency_name], [rfr_fb_person_name], [rfr_fb_person_title], [rfr_fb_location], [rfr_fb_tel], [rfr_fb_email], [rfr_fb_date], [rfr_fb_id_no], [rfr_fb_case_no], [rfr_fb_service], [rfr_fb_other], [hhm_id], [prt_cso_id_ra], [wrd_id_guardian], [yn_id_discussion], [yn_id_helpline], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_referral

            #region hh_referral_service_provided

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_provided_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_provided_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_provided_insert] ON [dbo].[hh_referral_service_provided] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_provided_upload]
                        ([rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_provided_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_provided_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_provided_delete] ON [dbo].[hh_referral_service_provided] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_provided_upload]
                        ([rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [rsp_id], [rfr_id], [svp_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_referral_service_provided

            #region hh_referral_service_referred

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_referred_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_referred_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_referred_insert] ON [dbo].[hh_referral_service_referred] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_referred_upload]
                        ([rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_referral_service_referred_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_referral_service_referred_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_referral_service_referred_delete] ON [dbo].[hh_referral_service_referred] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_referral_service_referred_upload]
                        ([rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], [trg_action],[district_id])
	                SELECT [rsr_id], [rfr_id], [svr_id], 
		                [usr_id_create], [usr_date_create], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_referral_service_referred

            #region prt_alternative_care_panel

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_insert] ON [dbo].[prt_alternative_care_panel] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_upload]
                        ([acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_update] ON [dbo].[prt_alternative_care_panel] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(acp_id) OR UPDATE(acp_date) OR UPDATE(fy_id) OR UPDATE(prt_id) OR UPDATE(rgn_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_alternative_care_panel_upload]
							([acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_delete] ON [dbo].[prt_alternative_care_panel] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_upload]
                        ([acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [acp_id], [acp_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_alternative_care_panel

            #region prt_alternative_care_panel_district

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_district_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_district_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_district_insert] ON [dbo].[prt_alternative_care_panel_district] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_district_upload]
                        ([acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_district_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_district_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_district_update] ON [dbo].[prt_alternative_care_panel_district] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(acpd_id) OR UPDATE(acpd_support_extended) OR UPDATE(acp_id) OR UPDATE(dst_id) OR UPDATE(yn_id_established) OR UPDATE(yn_id_functional))
	                BEGIN
		                INSERT INTO [dbo].[prt_alternative_care_panel_district_upload]
							([acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_alternative_care_panel_district_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_alternative_care_panel_district_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_alternative_care_panel_district_delete] ON [dbo].[prt_alternative_care_panel_district] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_alternative_care_panel_district_upload]
                        ([acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [acpd_id], [acpd_support_extended], [acp_id], [dst_id], [yn_id_established], [yn_id_functional], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_alternative_care_panel_district

            #region prt_cbsd_resource_allocation

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_insert] ON [dbo].[prt_cbsd_resource_allocation] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_upload]
                        ([cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_update] ON [dbo].[prt_cbsd_resource_allocation] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(cra_id) OR UPDATE(cra_date) OR UPDATE(fy_id) OR UPDATE(prt_id) OR UPDATE(rgn_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_resource_allocation_upload]
							([cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_delete] ON [dbo].[prt_cbsd_resource_allocation] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_upload]
                        ([cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [cra_id], [cra_date], [fy_id], [prt_id], [rgn_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_cbsd_resource_allocation

            #region prt_cbsd_resource_allocation_district

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_insert] ON [dbo].[prt_cbsd_resource_allocation_district] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
                        ([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_update] ON [dbo].[prt_cbsd_resource_allocation_district] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(crad_id) OR UPDATE(crad_cbsd_budget) OR UPDATE(crad_cbsd_realization) OR UPDATE(crad_district_grant_budget) OR UPDATE(crad_probation_realization) OR UPDATE(crad_probation_share) OR UPDATE(cra_id) OR UPDATE(dst_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
							([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_delete] ON [dbo].[prt_cbsd_resource_allocation_district] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
                        ([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_cbsd_resource_allocation_district

            #region prt_cbsd_staff_appraisal_tracking

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_insert] ON [dbo].[prt_cbsd_staff_appraisal_tracking] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
                        ([csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_update] ON [dbo].[prt_cbsd_staff_appraisal_tracking] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(csat_id) OR UPDATE(csat_date) OR UPDATE(csat_comment) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(prt_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
							([csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_delete] ON [dbo].[prt_cbsd_staff_appraisal_tracking] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_upload]
                        ([csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [csat_id], [csat_date], [csat_comment], [dst_id], [fy_id], [prt_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_cbsd_staff_appraisal_tracking

            #region prt_cbsd_staff_appraisal_tracking_line

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_insert] ON [dbo].[prt_cbsd_staff_appraisal_tracking_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
                        ([csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_update] ON [dbo].[prt_cbsd_staff_appraisal_tracking_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(csatl_id) OR UPDATE(csatl_posts_approved) OR UPDATE(csatl_posts_filled) OR UPDATE(csat_id) OR UPDATE(ss_id) OR UPDATE(yn_id_conducted))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
							([csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_staff_appraisal_tracking_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_staff_appraisal_tracking_line_delete] ON [dbo].[prt_cbsd_staff_appraisal_tracking_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_staff_appraisal_tracking_line_upload]
                        ([csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [csatl_id], [csatl_posts_approved], [csatl_posts_filled], [csat_id], [ss_id], [yn_id_conducted], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_cbsd_staff_appraisal_tracking_line

            #region prt_district_ovc_checklist

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_district_ovc_checklist_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_district_ovc_checklist_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_district_ovc_checklist_insert] ON [dbo].[prt_district_ovc_checklist] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_district_ovc_checklist_upload]
                        ([doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_district_ovc_checklist_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_district_ovc_checklist_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_district_ovc_checklist_update] ON [dbo].[prt_district_ovc_checklist] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(doc_id) OR UPDATE(doc_date) OR UPDATE(doc_cso_report) OR UPDATE(doc_cso_total) OR UPDATE(doc_sub_county_reviewed) OR UPDATE(doc_sub_county_total) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(yn_id_dovcc_actions_taken) OR UPDATE(yn_id_dovcc_minutes) OR UPDATE(yn_id_dovcc_minutes_available) OR UPDATE(yn_id_meetings_held) OR UPDATE(yn_id_membership_constituted) OR UPDATE(yn_id_ovcmis_district) OR UPDATE(yn_id_supervision_reports))
	                BEGIN
		                INSERT INTO [dbo].[prt_district_ovc_checklist_upload]
							([doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_district_ovc_checklist_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_district_ovc_checklist_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_district_ovc_checklist_delete] ON [dbo].[prt_district_ovc_checklist] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_district_ovc_checklist_upload]
                        ([doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [doc_id], [doc_date], [doc_cso_report], [doc_cso_total], [doc_sub_county_reviewed], [doc_sub_county_total], [dst_id], [fy_id], [qy_id], [yn_id_dovcc_actions_taken], [yn_id_dovcc_minutes], [yn_id_dovcc_minutes_available], [yn_id_meetings_held], [yn_id_membership_constituted], [yn_id_ovcmis_district], [yn_id_supervision_reports], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion prt_district_ovc_checklist

            #region prt_institutional_care_summary

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_insert] ON [dbo].[prt_institutional_care_summary] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
                        ([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_update] ON [dbo].[prt_institutional_care_summary] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ics_id) OR UPDATE(ics_date) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
							([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_delete] ON [dbo].[prt_institutional_care_summary] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
                        ([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion prt_institutional_care_summary

            #region prt_institutional_care_summary_line

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_insert] ON [dbo].[prt_institutional_care_summary_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
                        ([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_update] ON [dbo].[prt_institutional_care_summary_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(icsl_id) OR UPDATE(icsl_caregiver_age) OR UPDATE(icsl_caregiver_name) OR UPDATE(icsl_child_age) OR UPDATE(icsl_child_name) OR UPDATE(icsl_contact_tel) OR UPDATE(icsl_contact_village) OR UPDATE(gnd_id_caregiver) OR UPDATE(gnd_id_child) OR UPDATE(ics_id) OR UPDATE(ins_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
							([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_delete] ON [dbo].[prt_institutional_care_summary_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
                        ([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion prt_institutional_care_summary_line

            #region silc_financial_register

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_insert] ON [dbo].[silc_financial_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_upload]
                        ([sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_update] ON [dbo].[silc_financial_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sfr_id) OR UPDATE(sfr_contact_details) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(swk_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_financial_register_upload]
							([sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_delete] ON [dbo].[silc_financial_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_upload]
                        ([sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sfr_id], [sfr_contact_details], [cso_id], [fy_id], [qy_id], [swk_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion silc_financial_register

            #region silc_financial_register_group

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_group_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_group_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_group_insert] ON [dbo].[silc_financial_register_group] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_group_upload]
                        ([sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_group_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_group_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_group_update] ON [dbo].[silc_financial_register_group] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sfrg_id) OR UPDATE(sfrg_members_female) OR UPDATE(sfrg_members_male) OR UPDATE(sfrg_amount_borrowed) OR UPDATE(sfr_id) OR UPDATE(sg_id) OR UPDATE(yn_id_borrowed) OR UPDATE(yn_id_linked))
	                BEGIN
		                INSERT INTO [dbo].[silc_financial_register_group_upload]
							([sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_financial_register_group_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_financial_register_group_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_financial_register_group_delete] ON [dbo].[silc_financial_register_group] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_financial_register_group_upload]
                        ([sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sfrg_id], [sfrg_members_female], [sfrg_members_male], [sfrg_amount_borrowed], [sfr_id], [sg_id], [yn_id_borrowed], [yn_id_linked], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion silc_financial_register_group

            #region silc_group

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_insert] ON [dbo].[silc_group] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_upload]
                        ([sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_update] ON [dbo].[silc_group] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sg_id) OR UPDATE(sg_name))
	                BEGIN
		                INSERT INTO [dbo].[silc_group_upload]
							([sg_id], [sg_name],  
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [sg_id], [sg_name], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_delete] ON [dbo].[silc_group] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_upload]
                        ([sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sg_id], [sg_name], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion silc_group

            #region silc_group_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_member_insert] ON [dbo].[silc_group_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_member_upload]
                        ([sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_member_update] ON [dbo].[silc_group_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(sgm_id) OR UPDATE(sgm_name) OR UPDATE(sgm_status_reason) OR UPDATE(sgm_active) OR UPDATE(hhm_id) OR UPDATE(mtp_id) OR UPDATE(sg_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_group_member_upload]
							([sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_group_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_group_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_group_member_delete] ON [dbo].[silc_group_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_group_member_upload]
                        ([sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [sgm_id], [sgm_name], [sgm_status_reason], [sgm_active], [hhm_id], [mtp_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion silc_group_member

            #region silc_savings_register

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_insert] ON [dbo].[silc_savings_register] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_upload]
                        ([ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_update] ON [dbo].[silc_savings_register] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ssr_id) OR UPDATE(ssr_cycle_number) OR UPDATE(ssr_share_value) OR UPDATE(cso_id) OR UPDATE(fy_id) OR UPDATE(qy_id) OR UPDATE(wrd_id) OR UPDATE(sg_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_savings_register_upload]
							([ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_delete] ON [dbo].[silc_savings_register] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_upload]
                        ([ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ssr_id], [ssr_cycle_number], [ssr_share_value], [cso_id], [fy_id], [qy_id], [wrd_id], [sg_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion silc_savings_register

            #region silc_savings_register_member

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_member_insert] ON [dbo].[silc_savings_register_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_member_upload]
                        ([ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_member_update] ON [dbo].[silc_savings_register_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ssrm_id) OR UPDATE(ssrm_shares_bought_today) OR UPDATE(ssrm_shares_brought_forward) OR UPDATE(ssrm_shares_redeemed) OR UPDATE(ssrm_shares_total) OR UPDATE(ssrm_welfare_fund) OR UPDATE(sgm_id) OR UPDATE(ssr_id))
	                BEGIN
		                INSERT INTO [dbo].[silc_savings_register_member_upload]
							([ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'silc_savings_register_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[silc_savings_register_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[silc_savings_register_member_delete] ON [dbo].[silc_savings_register_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[silc_savings_register_member_upload]
                        ([ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [ssrm_id], [ssrm_shares_bought_today], [ssrm_shares_brought_forward], [ssrm_shares_redeemed], [ssrm_shares_total], [ssrm_welfare_fund], [sgm_id], [ssr_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion silc_savings_register_member

            #region swm_social_worker

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'swm_social_worker_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[swm_social_worker_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[swm_social_worker_insert] ON [dbo].[swm_social_worker] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[swm_social_worker_upload]
                        ([swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'swm_social_worker_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[swm_social_worker_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[swm_social_worker_update] ON [dbo].[swm_social_worker] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(swk_id) OR UPDATE(swk_first_name) OR UPDATE(swk_last_name) OR UPDATE(swk_email) OR UPDATE(swk_phone) OR UPDATE(swk_phone_other) OR UPDATE(swk_status_reason) OR UPDATE(swk_village) OR UPDATE(cso_id) OR UPDATE(hnr_id) OR UPDATE(swk_id_manager) OR UPDATE(sws_id) OR UPDATE(swt_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[swm_social_worker_upload]
							([swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'swm_social_worker_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[swm_social_worker_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[swm_social_worker_delete] ON [dbo].[swm_social_worker] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[swm_social_worker_upload]
                        ([swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
	                SELECT [swk_id], [swk_first_name], [swk_last_name], [swk_email], [swk_phone], [swk_phone_other], [swk_status_reason], [swk_village], [cso_id], [hnr_id], [swk_id_manager], [sws_id], [swt_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion swm_social_worker

            #endregion Update Trigers

            #region New Tables.
            #region um_office_district_download_mapping
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'um_office_district_download_mapping')
                CREATE TABLE[dbo].[um_office_district_download_mapping](" +
             "[record_id] [int] IDENTITY(1,1) NOT NULL,[dst_id] [int] NOT NULL,[download_active] [bit]  NOT NULL," +
            " [usr_date_create][datetime]  NOT NULL," +
            "CONSTRAINT[PK_um_office_district_download_mapping] PRIMARY KEY CLUSTERED([record_id] ASC," +
            "[dst_id] ASC" +
            ")WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON[PRIMARY]" +
            ") ON[PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'um_office_district_download_mapping'
                          and c.name = 'usr_date_create'
                          and s.name = 'dbo') 
                    ALTER TABLE[dbo].[um_office_district_download_mapping] ADD CONSTRAINT[DF_um_office_district_download_mapping_usr_date_create] 
                    DEFAULT(getdate()) FOR[usr_date_create]";
                    dbCon.ExecuteNonQuery(strSQL);

            #endregion um_office_district_download_mapping

            #region lst_linkages_services_provided
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_linkages_services_provided')
                        CREATE TABLE [dbo].[lst_linkages_services_provided](
	                    [record_guid] [nvarchar](100) NOT NULL,
	                    [linkages_service_id] [int] NOT NULL,
	                    [service_name] [nvarchar](100) NOT NULL,
	                    [service_active] [bit] NOT NULL,
	                    [usr_id_create] [varchar](50) NULL,
	                    [usr_id_update] [varchar](50) NULL,
	                    [usr_date_create] [datetime] NULL,
	                    [usr_date_update] [datetime] NULL
                    ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'lst_linkages_services_provided'
                          and c.name = 'record_guid'
                          and s.name = 'dbo') 
                    ALTER TABLE [dbo].[lst_linkages_services_provided] ADD  CONSTRAINT [DF_lst_linkages_services_provided_record_guid]  DEFAULT (newid()) FOR [record_guid]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'lst_linkages_services_provided'
                          and c.name = 'usr_date_create'
                          and s.name = 'dbo') 
                    ALTER TABLE [dbo].[lst_linkages_services_provided] ADD  CONSTRAINT [DF_lst_linkages_services_provided_usr_date_create]  DEFAULT (getdate()) FOR [usr_date_create]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'lst_linkages_services_provided'
                          and c.name = 'usr_date_update'
                          and s.name = 'dbo') 
                    ALTER TABLE [dbo].[lst_linkages_services_provided] ADD  CONSTRAINT [DF_lst_linkages_services_provided_usr_date_update]  DEFAULT (getdate()) FOR [usr_date_update]";
            dbCon.ExecuteNonQuery(strSQL);

            #region insert lookup data
            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_provided 
                                       WHERE linkages_service_id = 1
                                       )
                       BEGIN
                           INSERT INTO [dbo].[lst_linkages_services_provided]( [linkages_service_id],[service_name],[service_active],[usr_id_create],[usr_id_update])
                            VALUES(1,'Caregiver Nutrition Education'   ,1,1 ,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_provided 
                                       WHERE linkages_service_id = 2
                                       )
                       BEGIN  
                           INSERT INTO [dbo].[lst_linkages_services_provided]( [linkages_service_id],[service_name],[service_active],[usr_id_create],[usr_id_update])
                            VALUES(2,'CNutrition Assessment counsiling and support'   ,1,1 ,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_provided 
                                       WHERE linkages_service_id = 3
                                       )
                       BEGIN
                           INSERT INTO [dbo].[lst_linkages_services_provided]( [linkages_service_id],[service_name],[service_active],[usr_id_create],[usr_id_update])
                            VALUES(3,'CChild re-intergrated with family'   ,1,1 ,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_provided 
                                       WHERE linkages_service_id = 4
                                       )
                       BEGIN
                           INSERT INTO [dbo].[lst_linkages_services_provided]( [linkages_service_id],[service_name],[service_active],[usr_id_create],[usr_id_update])
                            VALUES(4,'Withdrawn from child labor'   ,1,1 ,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_provided 
                                       WHERE linkages_service_id = 5
                                       )
                       BEGIN
                           INSERT INTO [dbo].[lst_linkages_services_provided]( [linkages_service_id],[service_name],[service_active],[usr_id_create],[usr_id_update])
                            VALUES(5,'Assisted to handle child abuse or neglect case'   ,1,1 ,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion insert lookup data

            #endregion lst_linkages_services_provided

            #region lst_linkages_services_required
            strSQL = @"IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_linkages_services_required')
                        CREATE TABLE [dbo].[lst_linkages_services_required](
	                    [record_guid] [nvarchar](100) NOT NULL,
	                    [linkages_service_offered_id] [int] NOT NULL,
	                    [service_name] [nvarchar](100) NOT NULL,
	                    [service_active] [bit] NOT NULL,
	                    [usr_id_create] [varchar](50) NULL,
	                    [usr_id_update] [varchar](50) NULL,
	                    [usr_date_create] [datetime] NULL,
	                    [usr_date_update] [datetime] NULL
                    ) ON [PRIMARY] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'lst_linkages_services_required'
                          and c.name = 'record_guid'
                          and s.name = 'dbo') 
                    ALTER TABLE [dbo].[lst_linkages_services_required] ADD  CONSTRAINT [DF_lst_linkages_services_required_record_guid]  DEFAULT (newid()) FOR [record_guid]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'lst_linkages_services_required'
                          and c.name = 'usr_date_create'
                          and s.name = 'dbo') 
                    ALTER TABLE [dbo].[lst_linkages_services_required] ADD  CONSTRAINT [DF_lst_linkages_services_required_usr_date_create]  DEFAULT (getdate()) FOR [usr_date_create]";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"if not exists (
                        select *
                          from sys.all_columns c
                          join sys.tables t on t.object_id = c.object_id
                          join sys.schemas s on s.schema_id = t.schema_id
                          join sys.default_constraints d on c.default_object_id = d.object_id
                        where t.name = 'lst_linkages_services_required'
                          and c.name = 'usr_date_update'
                          and s.name = 'dbo') 
                    ALTER TABLE [dbo].[lst_linkages_services_required] ADD  CONSTRAINT [DF_lst_linkages_services_required_usr_date_update]  DEFAULT (getdate()) FOR [usr_date_update]";
            dbCon.ExecuteNonQuery(strSQL);

            #region insert lookup data
            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_required 
                                       WHERE linkages_service_offered_id = 1
                                       )
                       BEGIN
                           INSERT INTO [dbo].[lst_linkages_services_required]([linkages_service_offered_id],[service_name] ,[service_active],[usr_id_create],[usr_id_update])
                            VALUES( 1 ,'Youth Group' ,1 ,1,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"BEGIN
                       IF NOT EXISTS (SELECT * FROM lst_linkages_services_required 
                                       WHERE linkages_service_offered_id = 2
                                       )
                       BEGIN
                           INSERT INTO [dbo].[lst_linkages_services_required]([linkages_service_offered_id],[service_name] ,[service_active],[usr_id_create],[usr_id_update])
                            VALUES( 2 ,'SILC Group' ,1 ,1,1)
                       END
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion insert lookup data

            #endregion lst_linkages_services_required

            Createhh_household_linkages_tracking(dbCon);

            Createhh_household_linkages_services_required(dbCon);

            Createhh_household_linkages_services_provided(dbCon);

            Createum_office_group_details(dbCon);

            Createhh_household_risk_assessment_header(dbCon);

            Createhh_household_risk_assessment_beneficiaries(dbCon);

            Createhh_household_improvement_plan(dbCon);


            #endregion New Tables.  

            #region Insert new data for sync_upload table

            #region hh_household_linkages_tracking table
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'hh_household_linkages_tracking_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('61','hh_household_linkages_tracking_upload','hhm_linkages_record_guid','61',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household_linkages_tracking table

            #region hh_household_linkages_services_provided_upload
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'hh_household_linkages_services_provided_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('62','hh_household_linkages_services_provided_upload','record_guid','62',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_linkages_services_provided_upload

            #region hh_household_linkages_services_required_upload
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'hh_household_linkages_services_required_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('63','hh_household_linkages_services_required_upload','record_guid','63',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_linkages_services_required_upload

            #region hh_household_risk_assessment_header_upload
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'hh_household_risk_assessment_header_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('64','hh_household_risk_assessment_header_upload','ras_id','64',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_risk_assessment_header_upload

            #region hh_household_risk_assessment_beneficiaries_upload
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'hh_household_risk_assessment_beneficiaries_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('65','hh_household_risk_assessment_beneficiaries_upload','rasm_id','65',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_risk_assessment_beneficiaries_upload

            #region hh_household_improvement_plan_upload
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'hh_household_improvement_plan_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('66','hh_household_improvement_plan_upload','hip_id','66',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_improvement_plan_upload

            #region lst_hiv_status
            strSQL = @"IF NOT EXISTS(SELECT hst_name FROM lst_hiv_status WHERE hst_name = 'Un disclosed')
                    BEGIN
                    INSERT INTO [dbo].[lst_hiv_status]([hst_id],[hst_name],[hst_order],[hst_active],[lng_id],
                    [usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update])
                    VALUES('4','Un disclosed',4,1,'EN' ,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion lst_hiv_status

            #endregion Insert new data for sync_upload table

            #region Update SILC name
            strSQL = "UPDATE lst_linkages_services_required SET service_name = 'SILC Group' WHERE linkages_service_offered_id = 2 ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update SILC name
        }

        #endregion Version 3.1

        #region Version 3.2
        private static void Version32(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region New Tables
            Createsilc_community_training_register(dbCon);
            Createsilc_community_training_register_member(dbCon);
            Createsilc_community_training_register_member_attendance_dates(dbCon);
            Createben_youth_training_inventory(dbCon);
            Createlst_es_trainingType(dbCon);
            Createben_youthgroup_savings_register(dbCon);
            Createben_youthgroup_savings_register_member(dbCon);
            Createben_youthgroup_savings_register_member_amount(dbCon);
            #endregion New Tables

            #region New Districts
            strSQL = @"DELETE FROM lst_district";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstDistrict(dbCon);
            #endregion New Districts

            #region New Sub Counties
            strSQL = @"DELETE FROM lst_sub_county";
            dbCon.ExecuteNonQuery(strSQL);

           
            InsertLstSubCounty(dbCon);
            #endregion New Sub Counties

            #region New Wards
            strSQL = @"DELETE FROM lst_ward";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstWard(dbCon);
            Version22(dbCon);
            #endregion New Wards

            #region Sync Upload Tables
            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 67)
	                  INSERT INTO [dbo].[lst_sync_upload]
                           ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                           ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES ('67','silc_community_training_register_upload','ctr_id',67,1,1,1,GETDATE(),GETDATE())";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 68)
	                 INSERT INTO [dbo].[lst_sync_upload]
                           ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                           ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES ('68','silc_community_training_register_member_upload','ctrm_id',68,1,1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 69)
	                    INSERT INTO [dbo].[lst_sync_upload]
                               ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                               ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                         VALUES ('69','silc_community_training_register_member_attendance_dates_upload','ctrmD_id',69,1,1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 70)
                        BEGIN
	                    INSERT INTO [dbo].[lst_sync_upload]
                               ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                               ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                         VALUES ('70','ben_youth_training_inventory_upload','yti_id',70,1,1,1,GETDATE(),GETDATE())
                        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 71)
	                INSERT INTO [dbo].[lst_sync_upload]
                           ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                           ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES ('71','ben_youthgroup_savings_register_upload','ysr_id',71,1,1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 72)
	                 INSERT INTO [dbo].[lst_sync_upload]
                           ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                           ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES ('72','ben_youthgroup_savings_register_member_upload','ysrm_id',72,1,1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 73)
	              INSERT INTO [dbo].[lst_sync_upload]
                       ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                       ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                 VALUES ('73','ben_youthgroup_savings_register_member_amount_upload','ysrms_id',73,1,1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Sync Upload Tables

            #region Community Training Types
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 1)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(1,'1','Aflateen',1,1,'EN',1,GETDATE(),1,GETDATE())";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 2)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(2,'2','Enterpreneurship',2,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 3)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(3,'3','Agronomy',3,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 4)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(4,'4','Apprenticeship',4,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 5)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(5,'5','Better Parenting',5,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 6)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(6,'6','Faithful House',6,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion Community Training Types

            #region Community Training sessions
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 1)
	                INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
                           ,[usr_date_create] ,[usr_date_update])
                     VALUES (1 ,'1','1','Personal understanding & Exploration',1,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 2)
	                 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
                           ,[usr_date_create] ,[usr_date_update])
                     VALUES (2 ,'2','1','Rights and Responsibilities',2,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 3)
	             INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
                       ,[usr_date_create] ,[usr_date_update])
                 VALUES (3 ,'3','1','Saving and Spending',3,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 4)
	                 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
                           ,[usr_date_create] ,[usr_date_update])
                     VALUES (4 ,'4','1','Planning and Budgeting',4,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 5)
	             INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
                       ,[usr_date_create] ,[usr_date_update])
                 VALUES (5 ,'5','1','Social and Financial Enterprises',5,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 6)
	                  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
                           ,[usr_date_create] ,[usr_date_update])
                     VALUES (6 ,'6','2','Enterpreneurship skills',6,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 7)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (7 ,'7','2','Generating a business idea',7,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 8)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (8 ,'8','2','Marketing',8,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 9)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (9 ,'9','2','SWOT',9,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 10)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (10 ,'10','2','Record keeping',10,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 11)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (11 ,'11','2','Writing a simple Business plan',11,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 12)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (12 ,'12','3','Identification of a Suitable plot',12,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 13)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (13 ,'13','3','Nursery Bed setup/ Preparation',13,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 14)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (14 ,'14','3','Planting seeds in the nursery bed',14,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 15)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (15 ,'15','3','Weeding the nursery',15,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 16)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (16 ,'16','3','Preparation of the main garden ',16,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 17)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (17,'17','3','Transplanting seedlings into the main garden',17,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 18)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (18,'18','3','1st Weeding ',18,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 19)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (19,'19','3','2nd Weeding ',19,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 20)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (20,'20','3','Pruning ',20,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 21)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (21,'21','3','First spraying (fungicide/ pesticide)',21,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 22)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (22,'22','3','First fertilizer application',22,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 23)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (23,'23','3','2nd spraying (Fungicide/ pesticide)',23,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 24)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (24,'24','3','Second Fertilizer application',24,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 25)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (25,'25','3','Organic water and soil conservation techniques',25,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 26)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (26,'26','3','Organic pest and diesease management',26,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 27)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (27,'27','3','Harvesting',27,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 28)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (28,'28','3','Postharvest handling (Drying & Storage',28,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 29)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (29,'29','4','Tailoring',29,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 30)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (30,'30','4','Hair dressing',30,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 31)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (31,'31','4','Carpentry and joinery',31,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 32)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (32,'32','4','Motorvechicle Mechanics',32,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 33)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (33,'33','4','Catering',33,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @" IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 34)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (34,'34','4','Motoycle Mechanics',34,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 35)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (35,'35','4','Welding/Metal Fabrication',35,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 36)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (36,'36','4','Plumbing',36,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 37)
	  INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (37,'37','4','Brick /concrete laying',37,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 38)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (38,'38','4','Crafts',38,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 39)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (39,'39','4','Baking',39,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 40)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (40,'40','5','Parenting Responsibilities',40,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 41)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (41,'41','5','Culture and Social Roles',41,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 42)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (42,'42','5','Parenting Styles',42,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 43)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (43,'43','5','Children’s Temperament',43,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 44)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (44,'44','5','Stages of Development',44,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 45)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (45,'45','5','Changing Needs as Children Grow Oldero',45,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 46)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (46,'46','5','Children with Disabilities',46,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 47)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (47,'47','5','Parent-Child Communication',47,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 48)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (48,'48','5','Good Listening Skills',48,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 49)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (49,'49','5','Offering Praise',49,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 50)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (50,'50','5','Setting Limits',50,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 51)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (51,'51','5','Why Do Children Misbehave?',51,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 52)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (52,'52','5','Good Discipline',52,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 53)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (53,'53','5','Raising Teens Can Be Hard',53,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 54)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (54,'54','5','Treating Girls and Boys Equally',54,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 55)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (55,'55','5','Better Monitoring',55,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 56)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (56,'56','5','Good Role Modeling',56,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 57)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (57,'57','5','Managing Your Own Emotions',57,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 58)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (58,'58','5','Healthy Living through Good Local Nutrition',58,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 59)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (59,'59','5','Know Your HIV Status',59,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 60)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (60,'60','5','Family Care – Not an “Orphanage',60,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 61)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (61,'61','5','Preventing Child Marriage',61,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 62)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (62,'62','5','Pregnancy and Your New Baby',62,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 63)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (63,'63','5','Promoting Your Child’s Education',63,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 64)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (64,'64','6','Three Snapshots of Uganda',64,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 65)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (65,'65','6','A Future Snapshot of Uganda',65,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 66)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (66,'66','6','The Example of Faithful Couples',66,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 67)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (67,'67','6','Our Roles in Sharing the Faithful House Program',67,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 68)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (68,'68','6','Qualities of a Good Facilitator',68,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 69)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (69,'69','6','The Center of the STAR',69,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion Community Training sessions
        }
        #endregion Version 3.2

        #region Version 3.3
        private static void Version33(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Add hh_household_assessment new columns
            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[hh_household_assessment]') 
				 AND ( name  = ' swk_phone  ' OR
					name  = ' caregiver_phone  ' OR
					name  = '_18_years_male ' OR
					name  = '_18_years_female ' OR
					name  = 'below_18_male ' OR
					name  = 'below_18_female ' OR
					name  = 'total_hhm_male ' OR
					name  = 'total_hhm_female ' OR
					name  = 'yn_child_headed ' OR
					name  = 'yn_hh_disabled ' OR
					name  = 'yn_hhm_sick ' OR
					name  = 'yn_hhm_employed ' OR
					name  = 'yn_pay_unexpected_expense ' OR
					name  = 'yn_function_tp_means ' OR
					name  = 'yn_hhm_vocational_skills ' OR
					name  = 'yn_domestic_animals ' OR
					name  = 'yn_hh_access_to_land ' OR
					name  = 'hh_food_source ' OR
					name  = 'hhm_go_hungry_past_month ' OR
					name  = 'yn_caregiver_knows_hiv_status ' OR
					name  = 'yn_children_tested ' OR
					name  = 'yn_eligible_child_on_treatment ' OR
					name  = 'yn_hh_access_water ' OR
					name  = 'yn_hhm_mosquito_net ' OR
					name  = 'yn_hh_access_public_health_facility ' OR
					name  = 'yn_ob_clean_compound ' OR
					name  = 'yn_ob_drying_rack ' OR
					name  = 'yn_ob_garbage_pit ' OR
					name  = 'yn_ob_animal_house ' OR
					name  = 'yn_ob_washing_facility ' OR
					name  = 'hh_stable_shelter ' OR
					name  = 'ynna_children_go_to_school ' OR
					name  = 'total_hh_children_not_go_to_school ' OR
					name  = 'yn_children_sad_unhappy ' OR
					name  = 'yn_cp_repeated_abuse ' OR
					name  = 'yn_cp_child_labour ' OR
					name  = 'yn_cp_sexually_abused ' OR
					name  = 'yn_cp_stigmatised ' OR
					name  = 'hhs_id_visit_from_volunteer ' OR
					name  = 'hhs_id_financial_support ' OR
					name  = 'hhs_id_parenting_counsiling ' OR
					name  = 'hhs_id_early_child_dev ' OR
					name  = 'hhs_id_health_hygiene ' OR
					name  = 'hhs_id_hiv_gbv_prevention ' OR
					name  = 'hhs_id_nutrition_counsiling ' OR
					name  = 'hhs_id_pre_post_partum ' OR
					name  = 'hhs_id_hiv_testing ' OR
					name  = 'hhs_id_couples_counsiling ' OR
					name  = 'hhs_id_birth_certificate ' OR
					name  = 'hhs_id_child_protection ' OR
					name  = 'hhs_id_psychosocial ' OR
					name  = 'hhs_id_food_security ' OR
					name  = 'hhs_id_other ' OR
					name  = 'hhs_id_none ' OR
					name  = 'hhcs_id_savings_groups ' OR
					name  = 'hhcs_id_parenting_program ' OR
					name  = 'hhcs_id_govt_sage_program ' OR
					name  = 'hhcs_id_other_cash_transfer ' OR
					name  = 'hhcs_id_voluntary_hiv_testing ' OR
					name  = 'hhcs_id_food_security_nutrition ' OR
					name  = 'hhcs_id_skills_employ_training ' OR
					name  = 'hhcs_id_entrepreneurship_training ' OR
					name  = 'hhcs_id_other ' OR
					name  = 'hhcs_id_none ' OR
					name  = 'hh_child_abuse_action '
				 )
		)
		BEGIN
		ALTER TABLE hh_household_assessment
			ADD [swk_phone] [varchar](50) DEFAULT '',
			[caregiver_phone] [varchar](50) DEFAULT '',
	        [_18_years_male] [varchar](50) DEFAULT '',
	        [_18_years_female] [varchar](50) DEFAULT '',
	        [below_18_male] [varchar](50) DEFAULT '',
	        [below_18_female] [varchar](50) DEFAULT '',
	        [total_hhm_male] [varchar](50) DEFAULT '',
	        [total_hhm_female] [varchar](50) DEFAULT '',
	        [yn_child_headed] [varchar](50) DEFAULT '',
	        [yn_hh_disabled] [varchar](50) DEFAULT '',
	        [yn_hhm_sick] [varchar](50) DEFAULT '',
	        [yn_hhm_employed] [varchar](50) DEFAULT '',
	        [yn_pay_unexpected_expense] [varchar](50) DEFAULT '',
	        [yn_function_tp_means] [varchar](50) DEFAULT '',
	        [yn_hhm_vocational_skills] [varchar](50) DEFAULT '',
	        [yn_domestic_animals] [varchar](50) DEFAULT '',
	        [yn_hh_access_to_land] [varchar](50) DEFAULT '',
	        [hh_food_source] [varchar](50) DEFAULT '',
	        [hhm_go_hungry_past_month] [varchar](50) DEFAULT '',
	        [yn_caregiver_knows_hiv_status] [varchar](50) DEFAULT '',
	        [yn_children_tested] [varchar](50) DEFAULT '',
	        [yn_eligible_child_on_treatment] [varchar](50) DEFAULT '',
	        [yn_hh_access_water] [varchar](50) DEFAULT '',
	        [yn_hhm_mosquito_net] [varchar](50) DEFAULT '',
	        [yn_hh_access_public_health_facility] [varchar](50) DEFAULT '',
	        [yn_ob_clean_compound] [varchar](50) DEFAULT '',
	        [yn_ob_drying_rack] [varchar](50) DEFAULT '',
	        [yn_ob_garbage_pit] [varchar](50) DEFAULT '',
	        [yn_ob_animal_house] [varchar](50) DEFAULT '',
	        [yn_ob_washing_facility] [varchar](50) DEFAULT '',
	        [hh_stable_shelter] [varchar](50) DEFAULT '',
	        [ynna_children_go_to_school] [varchar](50) DEFAULT '',
	        [total_hh_children_not_go_to_school] [varchar](100) DEFAULT '',
	        [yn_children_sad_unhappy] [varchar](50) DEFAULT '',
	        [yn_cp_repeated_abuse] [varchar](50) DEFAULT '',
	        [yn_cp_child_labour] [varchar](50) DEFAULT '',
	        [yn_cp_sexually_abused] [varchar](50) DEFAULT '',
	        [yn_cp_stigmatised] [varchar](50) DEFAULT '',
	        [hhs_id_visit_from_volunteer] [varchar](50) DEFAULT '',
	        [hhs_id_financial_support] [varchar](50) DEFAULT '',
	        [hhs_id_parenting_counsiling] [varchar](50) DEFAULT '',
	        [hhs_id_early_child_dev] [varchar](50) DEFAULT '',
	        [hhs_id_health_hygiene] [varchar](50) DEFAULT '',
	        [hhs_id_hiv_gbv_prevention] [varchar](50) DEFAULT '',
	        [hhs_id_nutrition_counsiling] [varchar](50) DEFAULT '',
	        [hhs_id_pre_post_partum] [varchar](50) DEFAULT '',
	        [hhs_id_hiv_testing] [varchar](50) DEFAULT '',
	        [hhs_id_couples_counsiling] [varchar](50) DEFAULT '',
	        [hhs_id_birth_certificate] [varchar](50) DEFAULT '',
	        [hhs_id_child_protection] [varchar](50) DEFAULT '',
	        [hhs_id_psychosocial] [varchar](50) DEFAULT '',
	        [hhs_id_food_security] [varchar](50) DEFAULT '',
	        [hhs_id_other] [varchar](100) DEFAULT '',
	        [hhs_id_none] [varchar](50) DEFAULT '',
	        [hhcs_id_savings_groups] [varchar](50) DEFAULT '',
	        [hhcs_id_parenting_program] [varchar](50) DEFAULT '',
	        [hhcs_id_govt_sage_program] [varchar](50) DEFAULT '',
	        [hhcs_id_other_cash_transfer] [varchar](50) DEFAULT '',
	        [hhcs_id_voluntary_hiv_testing] [varchar](50) DEFAULT '',
	        [hhcs_id_food_security_nutrition] [varchar](50) DEFAULT '',
	        [hhcs_id_skills_employ_training] [varchar](50) DEFAULT '',
	        [hhcs_id_entrepreneurship_training] [varchar](50) DEFAULT '',
	        [hhcs_id_other] [varchar](100) DEFAULT '',
	        [hhcs_id_none] [varchar](50) DEFAULT '',
	        [hh_child_abuse_action] [varchar](100) DEFAULT '' 
	END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[hh_household_assessment_upload]') 
				 AND ( name  = ' swk_phone  ' OR
					name  = ' caregiver_phone  ' OR
					name  = '_18_years_male ' OR
					name  = '_18_years_female ' OR
					name  = 'below_18_male ' OR
					name  = 'below_18_female ' OR
					name  = 'total_hhm_male ' OR
					name  = 'total_hhm_female ' OR
					name  = 'yn_child_headed ' OR
					name  = 'yn_hh_disabled ' OR
					name  = 'yn_hhm_sick ' OR
					name  = 'yn_hhm_employed ' OR
					name  = 'yn_pay_unexpected_expense ' OR
					name  = 'yn_function_tp_means ' OR
					name  = 'yn_hhm_vocational_skills ' OR
					name  = 'yn_domestic_animals ' OR
					name  = 'yn_hh_access_to_land ' OR
					name  = 'hh_food_source ' OR
					name  = 'hhm_go_hungry_past_month ' OR
					name  = 'yn_caregiver_knows_hiv_status ' OR
					name  = 'yn_children_tested ' OR
					name  = 'yn_eligible_child_on_treatment ' OR
					name  = 'yn_hh_access_water ' OR
					name  = 'yn_hhm_mosquito_net ' OR
					name  = 'yn_hh_access_public_health_facility ' OR
					name  = 'yn_ob_clean_compound ' OR
					name  = 'yn_ob_drying_rack ' OR
					name  = 'yn_ob_garbage_pit ' OR
					name  = 'yn_ob_animal_house ' OR
					name  = 'yn_ob_washing_facility ' OR
					name  = 'hh_stable_shelter ' OR
					name  = 'ynna_children_go_to_school ' OR
					name  = 'total_hh_children_not_go_to_school ' OR
					name  = 'yn_children_sad_unhappy ' OR
					name  = 'yn_cp_repeated_abuse ' OR
					name  = 'yn_cp_child_labour ' OR
					name  = 'yn_cp_sexually_abused ' OR
					name  = 'yn_cp_stigmatised ' OR
					name  = 'hhs_id_visit_from_volunteer ' OR
					name  = 'hhs_id_financial_support ' OR
					name  = 'hhs_id_parenting_counsiling ' OR
					name  = 'hhs_id_early_child_dev ' OR
					name  = 'hhs_id_health_hygiene ' OR
					name  = 'hhs_id_hiv_gbv_prevention ' OR
					name  = 'hhs_id_nutrition_counsiling ' OR
					name  = 'hhs_id_pre_post_partum ' OR
					name  = 'hhs_id_hiv_testing ' OR
					name  = 'hhs_id_couples_counsiling ' OR
					name  = 'hhs_id_birth_certificate ' OR
					name  = 'hhs_id_child_protection ' OR
					name  = 'hhs_id_psychosocial ' OR
					name  = 'hhs_id_food_security ' OR
					name  = 'hhs_id_other ' OR
					name  = 'hhs_id_none ' OR
					name  = 'hhcs_id_savings_groups ' OR
					name  = 'hhcs_id_parenting_program ' OR
					name  = 'hhcs_id_govt_sage_program ' OR
					name  = 'hhcs_id_other_cash_transfer ' OR
					name  = 'hhcs_id_voluntary_hiv_testing ' OR
					name  = 'hhcs_id_food_security_nutrition ' OR
					name  = 'hhcs_id_skills_employ_training ' OR
					name  = 'hhcs_id_entrepreneurship_training ' OR
					name  = 'hhcs_id_other ' OR
					name  = 'hhcs_id_none ' OR
					name  = 'hh_child_abuse_action '
				 )
		)
		BEGIN
		ALTER TABLE hh_household_assessment_upload
			ADD [swk_phone] [varchar](50) DEFAULT '',
			[caregiver_phone] [varchar](50) DEFAULT '',
	        [_18_years_male] [varchar](50) DEFAULT '',
	        [_18_years_female] [varchar](50) DEFAULT '',
	        [below_18_male] [varchar](50) DEFAULT '',
	        [below_18_female] [varchar](50) DEFAULT '',
	        [total_hhm_male] [varchar](50) DEFAULT '',
	        [total_hhm_female] [varchar](50) DEFAULT '',
	        [yn_child_headed] [varchar](50) DEFAULT '',
	        [yn_hh_disabled] [varchar](50) DEFAULT '',
	        [yn_hhm_sick] [varchar](50) DEFAULT '',
	        [yn_hhm_employed] [varchar](50) DEFAULT '',
	        [yn_pay_unexpected_expense] [varchar](50) DEFAULT '',
	        [yn_function_tp_means] [varchar](50) DEFAULT '',
	        [yn_hhm_vocational_skills] [varchar](50) DEFAULT '',
	        [yn_domestic_animals] [varchar](50) DEFAULT '',
	        [yn_hh_access_to_land] [varchar](50) DEFAULT '',
	        [hh_food_source] [varchar](50) DEFAULT '',
	        [hhm_go_hungry_past_month] [varchar](50) DEFAULT '',
	        [yn_caregiver_knows_hiv_status] [varchar](50) DEFAULT '',
	        [yn_children_tested] [varchar](50) DEFAULT '',
	        [yn_eligible_child_on_treatment] [varchar](50) DEFAULT '',
	        [yn_hh_access_water] [varchar](50) DEFAULT '',
	        [yn_hhm_mosquito_net] [varchar](50) DEFAULT '',
	        [yn_hh_access_public_health_facility] [varchar](50) DEFAULT '',
	        [yn_ob_clean_compound] [varchar](50) DEFAULT '',
	        [yn_ob_drying_rack] [varchar](50) DEFAULT '',
	        [yn_ob_garbage_pit] [varchar](50) DEFAULT '',
	        [yn_ob_animal_house] [varchar](50) DEFAULT '',
	        [yn_ob_washing_facility] [varchar](50) DEFAULT '',
	        [hh_stable_shelter] [varchar](50) DEFAULT '',
	        [ynna_children_go_to_school] [varchar](50) DEFAULT '',
	        [total_hh_children_not_go_to_school] [varchar](100) DEFAULT '',
	        [yn_children_sad_unhappy] [varchar](50) DEFAULT '',
	        [yn_cp_repeated_abuse] [varchar](50) DEFAULT '',
	        [yn_cp_child_labour] [varchar](50) DEFAULT '',
	        [yn_cp_sexually_abused] [varchar](50) DEFAULT '',
	        [yn_cp_stigmatised] [varchar](50) DEFAULT '',
	        [hhs_id_visit_from_volunteer] [varchar](50) DEFAULT '',
	        [hhs_id_financial_support] [varchar](50) DEFAULT '',
	        [hhs_id_parenting_counsiling] [varchar](50) DEFAULT '',
	        [hhs_id_early_child_dev] [varchar](50) DEFAULT '',
	        [hhs_id_health_hygiene] [varchar](50) DEFAULT '',
	        [hhs_id_hiv_gbv_prevention] [varchar](50) DEFAULT '',
	        [hhs_id_nutrition_counsiling] [varchar](50) DEFAULT '',
	        [hhs_id_pre_post_partum] [varchar](50) DEFAULT '',
	        [hhs_id_hiv_testing] [varchar](50) DEFAULT '',
	        [hhs_id_couples_counsiling] [varchar](50) DEFAULT '',
	        [hhs_id_birth_certificate] [varchar](50) DEFAULT '',
	        [hhs_id_child_protection] [varchar](50) DEFAULT '',
	        [hhs_id_psychosocial] [varchar](50) DEFAULT '',
	        [hhs_id_food_security] [varchar](50) DEFAULT '',
	        [hhs_id_other] [varchar](100) DEFAULT '',
	        [hhs_id_none] [varchar](50) DEFAULT '',
	        [hhcs_id_savings_groups] [varchar](50) DEFAULT '',
	        [hhcs_id_parenting_program] [varchar](50) DEFAULT '',
	        [hhcs_id_govt_sage_program] [varchar](50) DEFAULT '',
	        [hhcs_id_other_cash_transfer] [varchar](50) DEFAULT '',
	        [hhcs_id_voluntary_hiv_testing] [varchar](50) DEFAULT '',
	        [hhcs_id_food_security_nutrition] [varchar](50) DEFAULT '',
	        [hhcs_id_skills_employ_training] [varchar](50) DEFAULT '',
	        [hhcs_id_entrepreneurship_training] [varchar](50) DEFAULT '',
	        [hhcs_id_other] [varchar](100) DEFAULT '',
	        [hhcs_id_none] [varchar](50) DEFAULT '',
	        [hh_child_abuse_action] [varchar](100) DEFAULT '' 
	END";

            dbCon.ExecuteNonQuery(strSQL);

            #region Number of meals dataType change
            strSQL = @"ALTER TABLE hh_household_assessment 
                    ALTER COLUMN hha_num_of_meals varchar(50) NULL ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"ALTER TABLE hh_household_assessment_upload
                    ALTER COLUMN hha_num_of_meals varchar(50) NULL ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #endregion Add hh_household_assessment new columns

            #region Update Triggers
            #region hh_household_assessment

            strSQL = @"IF EXISTS (SELECT* FROM sys.objects WHERE [name] = N'hh_household_assessment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_insert] ON [dbo].[hh_household_assessment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_update] ON [dbo].[hh_household_assessment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hha_id) OR UPDATE(hha_comments) OR UPDATE(hha_date) OR UPDATE(hha_num_of_meals) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(icc_id) OR UPDATE(ics_id) OR UPDATE(osn_id_disagreement) OR UPDATE(swk_id) OR UPDATE(yn_id_child_separation) OR UPDATE(yn_id_financial_savings) OR UPDATE(yn_id_food_body_building) OR UPDATE(yn_id_food_energy) OR UPDATE(yn_id_food_protective) OR UPDATE(ynna_id_expenses_food) OR UPDATE(ynna_id_expenses_health) OR UPDATE(ynna_id_expenses_school) OR UPDATE(ynns_id_assets) OR UPDATE(yns_id_latrine))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_upload]
							([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action])
						SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_delete] ON [dbo].[hh_household_assessment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household_assessment
            #endregion Update Triggers
            
            #region lst_hh_hat_services_received

            Createlst_hh_hat_services_received(dbCon);

            #region Insert Data
            strSQL = @"SET IDENTITY_INSERT [dbo].[lst_hh_hat_services_received] ON
	        INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (1,'1','1','Household visits from a volunteer',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (2,'2','1','Direct financial support',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (3,'3','1','Parenting counselling',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (4,'4','1','Early Childhood Development',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (5,'5','1','Health and hygiene',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (6,'6','1','HIV and GBV prevention',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	           INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (7,'7','1','Nutrition counselling',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (8,'8','1','Pre/post-partum counselling',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (9,'9','1','HIV testing',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (10,'10','1','Couples counselling',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (11,'11','1','Support obtaining a birth certificate',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (12,'12','1','Child protection',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (13,'13','1','Psychosocial support/basic needs',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (14,'14','1','Food security',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (15,'15','1','None',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (16,'16','2','Savings groups',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (17,'17','2','Parenting program',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (18,'18','2','Government SAGE program',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (19,'19','2','Any other cash transfer',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (20,'20','2','Voluntary HIV testing/counselling',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (21,'21','2','Food security and Nutrition',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	         INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (22,'22','2','Skills and employment training',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (23,'23','2','Entrepreneurship training',1 ,1,'EN','1','1',GETDATE(),GETDATE())

	          INSERT INTO [dbo].[lst_hh_hat_services_received]([hhs_sid],[hhs_id],[service_type_id],[hhs_name] ,[hhs_order],[hhs_active],[lng_id],[UserId_create],[UserId_update],[User_date_create] ,[User_date_update])
             VALUES (24,'24','2','None',1 ,1,'EN','1','1',GETDATE(),GETDATE())
        SET IDENTITY_INSERT [dbo].[lst_hh_hat_services_received] OFF ";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #endregion lst_hh_hat_services_received

            #region Update New district regions
            strSQL = @"UPDATE lst_district SET rgn_id = 3 WHERE dst_id = 20 OR dst_id = 21";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"UPDATE lst_district SET rgn_id = 2 WHERE dst_id = 18 OR dst_id = 19";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Update New district regions

            #region Set new HAT fields to empty strings

            #region hh_household_assessment
            strSQL = "UPDATE hh_household_assessment SET swk_phone = '' WHERE swk_phone IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  caregiver_phone = '' WHERE caregiver_phone IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  _18_years_male = '' WHERE _18_years_male IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  _18_years_female = '' WHERE _18_years_female IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  below_18_male = '' WHERE below_18_male IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  below_18_female = '' WHERE below_18_female IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  total_hhm_male = '' WHERE total_hhm_male IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  total_hhm_female = '' WHERE total_hhm_female IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_child_headed = '' WHERE yn_child_headed IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hh_disabled = '' WHERE yn_hh_disabled IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hhm_sick = '' WHERE yn_hhm_sick IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hhm_employed = '' WHERE yn_hhm_employed IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_pay_unexpected_expense = '' WHERE yn_pay_unexpected_expense IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_function_tp_means = '' WHERE yn_function_tp_means IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hhm_vocational_skills = '' WHERE yn_hhm_vocational_skills IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_domestic_animals = '' WHERE yn_domestic_animals IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hh_access_to_land = '' WHERE yn_hh_access_to_land IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = " UPDATE hh_household_assessment SET  hh_food_source = '' WHERE hh_food_source IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhm_go_hungry_past_month = '' WHERE hhm_go_hungry_past_month IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_caregiver_knows_hiv_status = '' WHERE yn_caregiver_knows_hiv_status IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_children_tested = '' WHERE yn_children_tested IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_eligible_child_on_treatment = '' WHERE yn_eligible_child_on_treatment IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hh_access_water = '' WHERE yn_hh_access_water IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hhm_mosquito_net = '' WHERE yn_hhm_mosquito_net IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_hh_access_public_health_facility = '' WHERE yn_hh_access_public_health_facility IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_ob_clean_compound = '' WHERE yn_ob_clean_compound IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_ob_drying_rack = '' WHERE yn_ob_drying_rack IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_ob_garbage_pit = '' WHERE yn_ob_garbage_pit IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_ob_animal_house = '' WHERE yn_ob_animal_house IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_ob_washing_facility = '' WHERE yn_ob_washing_facility IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hh_stable_shelter = '' WHERE hh_stable_shelter IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  ynna_children_go_to_school = '' WHERE ynna_children_go_to_school IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  total_hh_children_not_go_to_school = '' WHERE total_hh_children_not_go_to_school IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_children_sad_unhappy = '' WHERE yn_children_sad_unhappy IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_cp_repeated_abuse = '' WHERE yn_cp_repeated_abuse IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_cp_child_labour = '' WHERE yn_cp_child_labour IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_cp_sexually_abused = '' WHERE yn_cp_sexually_abused IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  yn_cp_stigmatised = '' WHERE yn_cp_stigmatised IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_visit_from_volunteer = '' WHERE hhs_id_visit_from_volunteer IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_financial_support = '' WHERE hhs_id_financial_support IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_parenting_counsiling = '' WHERE hhs_id_parenting_counsiling IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_early_child_dev = '' WHERE hhs_id_early_child_dev IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_health_hygiene = '' WHERE hhs_id_health_hygiene IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_hiv_gbv_prevention = '' WHERE hhs_id_hiv_gbv_prevention IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_nutrition_counsiling = '' WHERE hhs_id_nutrition_counsiling IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_pre_post_partum = '' WHERE hhs_id_pre_post_partum IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_hiv_testing = '' WHERE hhs_id_hiv_testing IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_couples_counsiling = '' WHERE hhs_id_couples_counsiling IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_birth_certificate = '' WHERE hhs_id_birth_certificate IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_child_protection = '' WHERE hhs_id_child_protection IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_psychosocial = '' WHERE hhs_id_psychosocial IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_food_security = '' WHERE hhs_id_food_security IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_other = '' WHERE hhs_id_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhs_id_none = '' WHERE hhs_id_none IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_savings_groups = '' WHERE hhcs_id_savings_groups IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_parenting_program = '' WHERE hhcs_id_parenting_program IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_govt_sage_program = '' WHERE hhcs_id_govt_sage_program IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_other_cash_transfer = '' WHERE hhcs_id_other_cash_transfer IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_voluntary_hiv_testing = '' WHERE hhcs_id_voluntary_hiv_testing IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_food_security_nutrition = '' WHERE hhcs_id_food_security_nutrition IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_skills_employ_training = '' WHERE hhcs_id_skills_employ_training IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_entrepreneurship_training = '' WHERE hhcs_id_entrepreneurship_training IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hhcs_id_other = '' WHERE hhcs_id_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = " UPDATE hh_household_assessment SET  hhcs_id_none = '' WHERE hhcs_id_none IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment SET  hh_child_abuse_action = '' WHERE hh_child_abuse_action IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region hh_household_assessment_upload
            strSQL = "UPDATE hh_household_assessment_upload SET swk_phone = '' WHERE swk_phone IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  caregiver_phone = '' WHERE caregiver_phone IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  _18_years_male = '' WHERE _18_years_male IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  _18_years_female = '' WHERE _18_years_female IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  below_18_male = '' WHERE below_18_male IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  below_18_female = '' WHERE below_18_female IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  total_hhm_male = '' WHERE total_hhm_male IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  total_hhm_female = '' WHERE total_hhm_female IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_child_headed = '' WHERE yn_child_headed IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hh_disabled = '' WHERE yn_hh_disabled IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hhm_sick = '' WHERE yn_hhm_sick IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hhm_employed = '' WHERE yn_hhm_employed IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_pay_unexpected_expense = '' WHERE yn_pay_unexpected_expense IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_function_tp_means = '' WHERE yn_function_tp_means IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hhm_vocational_skills = '' WHERE yn_hhm_vocational_skills IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_domestic_animals = '' WHERE yn_domestic_animals IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hh_access_to_land = '' WHERE yn_hh_access_to_land IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = " UPDATE hh_household_assessment_upload SET  hh_food_source = '' WHERE hh_food_source IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhm_go_hungry_past_month = '' WHERE hhm_go_hungry_past_month IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_caregiver_knows_hiv_status = '' WHERE yn_caregiver_knows_hiv_status IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_children_tested = '' WHERE yn_children_tested IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_eligible_child_on_treatment = '' WHERE yn_eligible_child_on_treatment IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hh_access_water = '' WHERE yn_hh_access_water IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hhm_mosquito_net = '' WHERE yn_hhm_mosquito_net IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_hh_access_public_health_facility = '' WHERE yn_hh_access_public_health_facility IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_ob_clean_compound = '' WHERE yn_ob_clean_compound IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_ob_drying_rack = '' WHERE yn_ob_drying_rack IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_ob_garbage_pit = '' WHERE yn_ob_garbage_pit IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_ob_animal_house = '' WHERE yn_ob_animal_house IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_ob_washing_facility = '' WHERE yn_ob_washing_facility IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hh_stable_shelter = '' WHERE hh_stable_shelter IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  ynna_children_go_to_school = '' WHERE ynna_children_go_to_school IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  total_hh_children_not_go_to_school = '' WHERE total_hh_children_not_go_to_school IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_children_sad_unhappy = '' WHERE yn_children_sad_unhappy IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_cp_repeated_abuse = '' WHERE yn_cp_repeated_abuse IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_cp_child_labour = '' WHERE yn_cp_child_labour IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_cp_sexually_abused = '' WHERE yn_cp_sexually_abused IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  yn_cp_stigmatised = '' WHERE yn_cp_stigmatised IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_visit_from_volunteer = '' WHERE hhs_id_visit_from_volunteer IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_financial_support = '' WHERE hhs_id_financial_support IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_parenting_counsiling = '' WHERE hhs_id_parenting_counsiling IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_early_child_dev = '' WHERE hhs_id_early_child_dev IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_health_hygiene = '' WHERE hhs_id_health_hygiene IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_hiv_gbv_prevention = '' WHERE hhs_id_hiv_gbv_prevention IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_nutrition_counsiling = '' WHERE hhs_id_nutrition_counsiling IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_pre_post_partum = '' WHERE hhs_id_pre_post_partum IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_hiv_testing = '' WHERE hhs_id_hiv_testing IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_couples_counsiling = '' WHERE hhs_id_couples_counsiling IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_birth_certificate = '' WHERE hhs_id_birth_certificate IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_child_protection = '' WHERE hhs_id_child_protection IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_psychosocial = '' WHERE hhs_id_psychosocial IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_food_security = '' WHERE hhs_id_food_security IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_other = '' WHERE hhs_id_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhs_id_none = '' WHERE hhs_id_none IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_savings_groups = '' WHERE hhcs_id_savings_groups IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_parenting_program = '' WHERE hhcs_id_parenting_program IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_govt_sage_program = '' WHERE hhcs_id_govt_sage_program IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_other_cash_transfer = '' WHERE hhcs_id_other_cash_transfer IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_voluntary_hiv_testing = '' WHERE hhcs_id_voluntary_hiv_testing IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_food_security_nutrition = '' WHERE hhcs_id_food_security_nutrition IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_skills_employ_training = '' WHERE hhcs_id_skills_employ_training IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_entrepreneurship_training = '' WHERE hhcs_id_entrepreneurship_training IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hhcs_id_other = '' WHERE hhcs_id_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = " UPDATE hh_household_assessment_upload SET  hhcs_id_none = '' WHERE hhcs_id_none IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE hh_household_assessment_upload SET  hh_child_abuse_action = '' WHERE hh_child_abuse_action IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion
            #endregion

            #region Household Assessment member new column
            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[hh_household_assessment_member]') 
				 AND ( name  = 'yn_attained_vocational_skill '))
                BEGIN
                    ALTER TABLE hh_household_assessment_member
			        ADD [yn_attained_vocational_skill] [varchar](50) DEFAULT ''
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[hh_household_assessment_member_upload]') 
				 AND ( name  = 'yn_attained_vocational_skill '))
                BEGIN
                    ALTER TABLE hh_household_assessment_member_upload
			        ADD [yn_attained_vocational_skill] [varchar](50) DEFAULT ''
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment_member SET yn_attained_vocational_skill = '' WHERE yn_attained_vocational_skill IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment_member_upload SET yn_attained_vocational_skill = '' WHERE yn_attained_vocational_skill IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region Update hh_household_assessment_member Triggers
            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_insert] ON [dbo].[hh_household_assessment_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_member_upload]
                        ([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],yn_attained_vocational_skill)
	                SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],yn_attained_vocational_skill
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_update] ON [dbo].[hh_household_assessment_member] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ham_id) OR UPDATE(ham_first_name) OR UPDATE(ham_last_name) OR UPDATE(ham_year_of_birth) OR UPDATE(dtp_id) OR UPDATE(edu_id) OR UPDATE(gnd_id) OR UPDATE(hha_id) OR UPDATE(hhm_id) OR UPDATE(hst_id) OR UPDATE(mst_id) OR UPDATE(prf_id) OR UPDATE(prt_id) OR UPDATE(yn_id_art) OR UPDATE(yn_id_birth_registration) OR UPDATE(yn_id_caregiver) OR UPDATE(yn_id_disability) OR UPDATE(yn_id_given_birth) OR UPDATE(yn_id_hoh) OR UPDATE(yn_id_immun) OR UPDATE(yn_id_pregnant) OR UPDATE(yn_id_school))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_member_upload]
							([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],yn_attained_vocational_skill)
						SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],yn_attained_vocational_skill
	                  FROM inserted
	                END
                END  ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_member_delete] ON [dbo].[hh_household_assessment_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_member_upload]
                        ([ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],yn_attained_vocational_skill)
	                SELECT [ham_id], [ham_first_name], [ham_last_name], [ham_year_of_birth], [dtp_id], [edu_id], [gnd_id], [hha_id], [hhm_id], [hst_id], [mst_id], [prf_id], [prt_id], [yn_id_art], [yn_id_birth_registration], [yn_id_caregiver], [yn_id_disability], [yn_id_given_birth], [yn_id_hoh], [yn_id_immun], [yn_id_pregnant], [yn_id_school], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],yn_attained_vocational_skill
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion Update hh_household_assessment_member Triggers
        }
        #endregion Version 3.3

        #region Version 3.4
        private static void Version34(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region All these should be in version 3.4
            #region New Wakiso Sub Counties
            #region New Sub Counties
            strSQL = @"DELETE FROM lst_sub_county";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstSubCounty(dbCon); //this section will have to be shifted to version control in version 3.4
            #endregion New Sub Counties 
            #endregion New Wakiso Sub Counties

            #region New Wards
            strSQL = @"DELETE FROM lst_ward";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstWard(dbCon);
            Version22(dbCon);
            #endregion New Wards

            #region New Kibale sub counties correction
            InsertTempCSOs(dbCon);
            RemoveDuplicateKyenjojoSubCounties(dbCon);
            #endregion

            #endregion All these should be in version 3.4

            #region Add hh_household_assessment new columns
            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[hh_household_assessment]') 
				 AND ( name  = ' yn_cp_conflict_with_law  ' OR
					name  = ' yn_cp_withheld_meal  ' OR
					name  = 'yn_cp_abusive_language '
				 )
		)
		BEGIN
		ALTER TABLE hh_household_assessment
			ADD [yn_cp_conflict_with_law] [varchar](50) DEFAULT '',
			[yn_cp_withheld_meal] [varchar](50) DEFAULT '',
	        [yn_cp_abusive_language] [varchar](50) DEFAULT ''
	       
	END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[hh_household_assessment_upload]') 
				 AND ( name  = ' yn_cp_conflict_with_law  ' OR
					name  = ' yn_cp_withheld_meal  ' OR
					name  = 'yn_cp_abusive_language '
				 )
		)
		BEGIN
		ALTER TABLE hh_household_assessment_upload
			ADD [yn_cp_conflict_with_law] [varchar](50) DEFAULT '',
			[yn_cp_withheld_meal] [varchar](50) DEFAULT '',
	        [yn_cp_abusive_language] [varchar](50) DEFAULT ''
	END";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion Add hh_household_assessment new columns

            #region Update Triggers
            #region hh_household_assessment

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_insert] ON [dbo].[hh_household_assessment] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action],[yn_cp_conflict_with_law],[yn_cp_withheld_meal],[yn_cp_abusive_language])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action],[yn_cp_conflict_with_law],[yn_cp_withheld_meal],[yn_cp_abusive_language]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_update] ON [dbo].[hh_household_assessment] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hha_id) OR UPDATE(hha_comments) OR UPDATE(hha_date) OR UPDATE(hha_num_of_meals) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(icc_id) OR UPDATE(ics_id) OR UPDATE(osn_id_disagreement) OR UPDATE(swk_id) OR UPDATE(yn_id_child_separation) OR UPDATE(yn_id_financial_savings) OR UPDATE(yn_id_food_body_building) OR UPDATE(yn_id_food_energy) OR UPDATE(yn_id_food_protective) OR UPDATE(ynna_id_expenses_food) OR UPDATE(ynna_id_expenses_health) OR UPDATE(ynna_id_expenses_school) OR UPDATE(ynns_id_assets) OR UPDATE(yns_id_latrine))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_assessment_upload]
							([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action],[yn_cp_conflict_with_law],[yn_cp_withheld_meal],[yn_cp_abusive_language])
						SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action],[yn_cp_conflict_with_law],[yn_cp_withheld_meal],[yn_cp_abusive_language]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_assessment_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_assessment_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_assessment_delete] ON [dbo].[hh_household_assessment] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_assessment_upload]
                        ([hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action],[yn_cp_conflict_with_law],[yn_cp_withheld_meal],[yn_cp_abusive_language])
	                SELECT [hha_id], [hha_comments], [hha_date], [hha_num_of_meals], [hh_id], [hhm_id], [icc_id], [ics_id], [osn_id_disagreement], [swk_id], [yn_id_child_separation], [yn_id_financial_savings], [yn_id_food_body_building], [yn_id_food_energy], [yn_id_food_protective], [yn_id_water], [ynna_id_expenses_food], [ynna_id_expenses_health], [ynna_id_expenses_school], [ynns_id_assets], [yns_id_latrine], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],[swk_phone],[caregiver_phone],[_18_years_male],[_18_years_female],[below_18_male],[below_18_female],[total_hhm_male],[total_hhm_female],[yn_child_headed]
           ,[yn_hh_disabled],[yn_hhm_sick],[yn_hhm_employed],[yn_pay_unexpected_expense],[yn_function_tp_means],[yn_hhm_vocational_skills],[yn_domestic_animals],[yn_hh_access_to_land]
           ,[hh_food_source],[hhm_go_hungry_past_month],[yn_caregiver_knows_hiv_status],[yn_children_tested],[yn_eligible_child_on_treatment],[yn_hh_access_water]
           ,[yn_hhm_mosquito_net] ,[yn_hh_access_public_health_facility],[yn_ob_clean_compound],[yn_ob_drying_rack],[yn_ob_garbage_pit],[yn_ob_animal_house],[yn_ob_washing_facility]
           ,[hh_stable_shelter],[ynna_children_go_to_school],[total_hh_children_not_go_to_school],[yn_children_sad_unhappy],[yn_cp_repeated_abuse],[yn_cp_child_labour],[yn_cp_sexually_abused]
           ,[yn_cp_stigmatised],[hhs_id_visit_from_volunteer],[hhs_id_financial_support],[hhs_id_parenting_counsiling],[hhs_id_early_child_dev],[hhs_id_health_hygiene],[hhs_id_hiv_gbv_prevention]
           ,[hhs_id_nutrition_counsiling],[hhs_id_pre_post_partum],[hhs_id_hiv_testing],[hhs_id_couples_counsiling],[hhs_id_birth_certificate],[hhs_id_child_protection],[hhs_id_psychosocial]
           ,[hhs_id_food_security],[hhs_id_other],[hhs_id_none],[hhcs_id_savings_groups],[hhcs_id_parenting_program],[hhcs_id_govt_sage_program],[hhcs_id_other_cash_transfer],[hhcs_id_voluntary_hiv_testing]
           ,[hhcs_id_food_security_nutrition],[hhcs_id_skills_employ_training],[hhcs_id_entrepreneurship_training],[hhcs_id_other] ,[hhcs_id_none],[hh_child_abuse_action],[yn_cp_conflict_with_law],[yn_cp_withheld_meal],[yn_cp_abusive_language]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion hh_household_assessment
            #endregion Update Triggers 

            #region Update new child protection columns to empty strings
            strSQL = "UPDATE hh_household_assessment SET yn_cp_conflict_with_law = '' WHERE yn_cp_conflict_with_law IS NULL ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment SET yn_cp_withheld_meal = '' WHERE yn_cp_withheld_meal IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment SET yn_cp_abusive_language = '' WHERE yn_cp_abusive_language IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment_upload SET yn_cp_conflict_with_law = '' WHERE yn_cp_conflict_with_law IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment_upload SET yn_cp_withheld_meal = '' WHERE yn_cp_withheld_meal IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_assessment_upload SET yn_cp_abusive_language = '' WHERE yn_cp_abusive_language IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion Update new child protection columns to empty strings

            Createben_education_subsidy_assessment(dbCon);

            #region Insert sync_upload data
            #region ben_education_subsidy_assessment_upload table
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_education_subsidy_assessment_upload')
                    BEGIN
                    INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update])
                    VALUES (N'74', N'ben_education_subsidy_assessment_upload', N'ed_sub_id', 74, 1, N'1', N'1', GETDATE(), GETDATE()) 
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_education_subsidy_assessment_upload table

            #region ben_education_subsidy_assessment_member_upload table
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_education_subsidy_assessment_member_upload')
                    BEGIN
                    INSERT [dbo].[lst_sync_upload] ([sul_id], [sul_name], [sul_key], [sul_order], [sul_active], [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update])
                    VALUES (N'75', N'ben_education_subsidy_assessment_member_upload', N'ed_subm_id', 75, 1, N'1', N'1', GETDATE(), GETDATE()) 
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion ben_education_subsidy_assessment_member_upload table
            #endregion

            #region prt_cbsd_resource_allocation_district new column
            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[prt_cbsd_resource_allocation_district]') 
				 AND ( name  = 'crad_partner_funding'
				 )
		)
		BEGIN
		ALTER TABLE prt_cbsd_resource_allocation_district
			ADD [crad_partner_funding] float 
	        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[prt_cbsd_resource_allocation_district_upload]') 
				 AND ( name  = 'crad_partner_funding'
					
				 )
		)
		BEGIN
		ALTER TABLE prt_cbsd_resource_allocation_district_upload
			ADD [crad_partner_funding] float 
	        END";
            dbCon.ExecuteNonQuery(strSQL);

            #region Remove nulls from newly added column
            strSQL = " UPDATE  prt_cbsd_resource_allocation_district SET [crad_partner_funding] = 0 WHERE [crad_partner_funding] IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = " UPDATE  prt_cbsd_resource_allocation_district_upload SET [crad_partner_funding] = 0 WHERE [crad_partner_funding] IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Remove nulls from newly added column

            #region Update Table Triggers
            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_insert] ON [dbo].[prt_cbsd_resource_allocation_district] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
                        ([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[crad_partner_funding])
	                SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],[crad_partner_funding]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_update] ON [dbo].[prt_cbsd_resource_allocation_district] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(crad_id) OR UPDATE(crad_cbsd_budget) OR UPDATE(crad_cbsd_realization) OR UPDATE(crad_district_grant_budget) OR UPDATE(crad_probation_realization) OR UPDATE(crad_probation_share) OR UPDATE(cra_id) OR UPDATE(dst_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
							([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[crad_partner_funding])
						SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],[crad_partner_funding]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_cbsd_resource_allocation_district_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_cbsd_resource_allocation_district_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_cbsd_resource_allocation_district_delete] ON [dbo].[prt_cbsd_resource_allocation_district] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_cbsd_resource_allocation_district_upload]
                        ([crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],[crad_partner_funding])
	                SELECT [crad_id], [crad_cbsd_budget], [crad_cbsd_realization], [crad_district_grant_budget], [crad_probation_realization], [crad_probation_share], [cra_id], [dst_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],[crad_partner_funding]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion  Update Table Triggers

            #endregion prt_cbsd_resource_allocation_district new column

            #region prt_institutional_care_summary_line new columns
            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[prt_institutional_care_summary_line]') 
				 AND ( name  = 'idst_other' OR
                       name = 'isct_other' OR
                       name = 'iwrd_other'
				 )
		)
		BEGIN
		ALTER TABLE prt_institutional_care_summary_line
			ADD [idst_other] [varchar](50) DEFAULT '',
                [isct_other] [varchar](50) DEFAULT '',
                [iwrd_other] [varchar](50) DEFAULT ''
	        END";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[prt_institutional_care_summary_line_upload]') 
				 AND ( name  = 'idst_other' OR
                       name = 'isct_other' OR
                       name = 'iwrd_other'
				 )
		)
		BEGIN
		ALTER TABLE prt_institutional_care_summary_line_upload
			ADD [idst_other] [varchar](50) DEFAULT '',
                [isct_other] [varchar](50) DEFAULT '',
                [iwrd_other] [varchar](50) DEFAULT ''
	        END";
            dbCon.ExecuteNonQuery(strSQL);

            #region Remove nulls from newly added column
            strSQL = "UPDATE prt_institutional_care_summary_line SET idst_other = '' WHERE idst_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_institutional_care_summary_line SET isct_other = '' WHERE isct_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_institutional_care_summary_line SET iwrd_other = '' WHERE iwrd_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_institutional_care_summary_line_upload SET idst_other = '' WHERE idst_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_institutional_care_summary_line_upload SET isct_other = '' WHERE isct_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_institutional_care_summary_line_upload SET iwrd_other = '' WHERE iwrd_other IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion Remove nulls from newly added column

            #region Update Triggers
            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_insert] ON [dbo].[prt_institutional_care_summary_line] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
                        ([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],idst_other,isct_other,iwrd_other)
	                SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],idst_other,isct_other,iwrd_other
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_update] ON [dbo].[prt_institutional_care_summary_line] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(icsl_id) OR UPDATE(icsl_caregiver_age) OR UPDATE(icsl_caregiver_name) OR UPDATE(icsl_child_age) OR UPDATE(icsl_child_name) OR UPDATE(icsl_contact_tel) OR UPDATE(icsl_contact_village) OR UPDATE(gnd_id_caregiver) OR UPDATE(gnd_id_child) OR UPDATE(ics_id) OR UPDATE(ins_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
							([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],idst_other,isct_other,iwrd_other)
						SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],idst_other,isct_other,iwrd_other
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_line_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_line_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_line_delete] ON [dbo].[prt_institutional_care_summary_line] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_line_upload]
                        ([icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],idst_other,isct_other,iwrd_other)
	                SELECT [icsl_id], [icsl_caregiver_age], [icsl_caregiver_name], [icsl_child_age], [icsl_child_name], [icsl_contact_tel], [icsl_contact_village], [gnd_id_caregiver], [gnd_id_child], [ics_id], [ins_id], [wrd_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],idst_other,isct_other,iwrd_other
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion Update Triggers

            #endregion prt_institutional_care_summary_line new columns

            #region prt_institutional_care_summary
            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[prt_institutional_care_summary]') 
				 AND ( name  = 'prt_id'
				 )
		)
		BEGIN
		ALTER TABLE prt_institutional_care_summary
			ADD [prt_id] [varchar](50) DEFAULT ''
	        END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS (
		  SELECT * 
		  FROM   sys.columns 
		  WHERE  object_id = OBJECT_ID(N'[dbo].[prt_institutional_care_summary_upload]') 
				 AND ( name  = 'prt_id'
				 )
		)
		BEGIN
		ALTER TABLE prt_institutional_care_summary_upload
			ADD [prt_id] [varchar](50) DEFAULT ''
	        END";
            dbCon.ExecuteNonQuery(strSQL);

            #region Remove nulls
            strSQL = "UPDATE prt_institutional_care_summary SET prt_id = '' WHERE prt_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_institutional_care_summary_upload SET prt_id = '' WHERE prt_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Remove nulls

            #region Update Trigers
            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_insert] ON [dbo].[prt_institutional_care_summary] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
                        ([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],prt_id)
	                SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],prt_id
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_update] ON [dbo].[prt_institutional_care_summary] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(ics_id) OR UPDATE(ics_date) OR UPDATE(dst_id) OR UPDATE(fy_id) OR UPDATE(qy_id))
	                BEGIN
		                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
							([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],prt_id)
						SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],prt_id
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_institutional_care_summary_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_institutional_care_summary_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_institutional_care_summary_delete] ON [dbo].[prt_institutional_care_summary] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_institutional_care_summary_upload]
                        ([ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],prt_id)
	                SELECT [ics_id], [ics_date], [dst_id], [fy_id], [qy_id], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],prt_id
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
            #endregion Update Triggers

            #endregion prt_institutional_care_summary

            #region prt_subcounty_ovc_checklist

            Createprt_subcounty_ovc_checklist(dbCon);

            #region SyncUpload
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_sync_upload WHERE sul_order = 76)
	                  INSERT INTO [dbo].[lst_sync_upload]
                           ([sul_id],[sul_name],[sul_key],[sul_order] ,[sul_active]
                           ,[usr_id_create] ,[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES ('76','prt_subcounty_ovc_checklist_upload','soc_id',76,1,1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion SyncUpload

            #region New Apprenticeship Partners
            strSQL = "DELETE FROM lst_apprenticeship_partner";
            dbCon.ExecuteNonQuery(strSQL);
            InsertLstApprenticeshipPartner(dbCon);
            #endregion New Apprenticeship Partners

            #endregion prt_subcounty_ovc_checklist

            #region Add saving to Training Type in community training register
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 7)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(7,'7','Saving',7,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Add saving to Training Type in community training register

            #region Add training sessions
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 70)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (70,'70','7','Understanding  youth saving',70,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 71)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (71,'71','7','Assessing and ranking of youth needs',71,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 72)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (72,'72','7','Setting saving goals',72,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 73)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (73,'73','7','Drawing a business plan',73,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 74)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (74,'74','7','Election of leaders',74,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 75)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (75,'75','7','Making a group constituition',75,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 76)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (76,'76','7','Saving',76,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 77)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (77 ,'77','3','Backyard gardening',77,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Add training sessions

            #region Trim spaces for training register
            strSQL = "UPDATE lst_es_training_type_session SET ttps_name = LTRIM(ttps_name)";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE lst_es_training_type_session SET ttps_name = RTRIM(ttps_name)";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE lst_training_type SET ttp_name = LTRIM(ttp_name)";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = "UPDATE lst_training_type SET ttp_name = RTRIM(ttp_name)";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region CreateAgroenterpriseRankingMatrix
            Createben_ben_agro_enterprise_ranking_matrix(dbCon);

            Createlst_agro_scoring_crops(dbCon);
            Createlst_agro_scoring_parameter(dbCon);
            #endregion CreateAgroenterpriseRankingMatrix

            #region IsertLookups
            Insertlst_agro_scoring_crops(dbCon);
            Insertlst_agro_scoring_parameter(dbCon);
            #endregion InsertLookups

            #region IsertLstsyncupload
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_agro_enterprise_ranking_matrix_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('77','ben_agro_enterprise_ranking_matrix_upload','agro_ent_id',77,1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_agro_enterprise_ranking_matrix_crop_ranking_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('78','ben_agro_enterprise_ranking_matrix_crop_ranking_upload','agro_entm_id',78,1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_apprenticeship_skill_acquisition_tracking_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('79','ben_apprenticeship_skill_acquisition_tracking_upload','asat_id',79,1,1,1,GETDATE(),GETDATE())
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_apprenticeship_skill_acquisition_tracking_skill_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('80','ben_apprenticeship_skill_acquisition_tracking_skill_upload','asatskill_id',80,1,1,1,GETDATE(),GETDATE())
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion IsertLstsyncupload

            #region Creaeteben_apprenticeship_skill_acquisition_tracking
            Createben_apprenticeship_skill_acquisition_tracking(dbCon);
            Createlst_apprenticeship_trade(dbCon);
            Createlst_apprenticeship_trade_skills(dbCon);
            #endregion Creaeteben_apprenticeship_skill_acquisition_tracking

            #region InsertApprenticeshipTrades
            Insertlst_apprenticeship_trade(dbCon);
            Insertlst_apprenticeship_trade_skills(dbCon);
            #endregion InsertApprenticeshipTrades

            InsertHipRecordType(dbCon);
        }

        public static void InsertHipRecordType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables
            #region Insert Record Type
            strSQL = @"INSERT INTO lst_record_type (rtp_id, rtp_name, rtp_order, rtp_active, lng_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update)
                SELECT '6', 'Household Improvement Plan', 6, 1, 'EN', '1', '1', GETDATE(), GETDATE() WHERE NOT '6' IN (SELECT rtp_id FROM lst_record_type WHERE rtp_id = '6') ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Insert Record Type
        }
        #endregion Version 3.4

        public static void EditIdentification_prioritization(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            #region Identification_prioritization
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'ids_id' AND[object_id] = OBJECT_ID(N'hh_ovc_identification_prioritization')) " +
            "BEGIN " +
                "ALTER TABLE hh_ovc_identification_prioritization ADD ids_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                    "WHERE[name] = N'ids_id' AND[object_id] = OBJECT_ID(N'hh_ovc_identification_prioritization_upload')) " +
            "BEGIN " +
                "ALTER TABLE hh_ovc_identification_prioritization_upload ADD ids_id Nvarchar(50) NULL " +
            "END";
            dbCon.ExecuteNonQuery(strSQL);

            #region Triggers

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_insert] ON [dbo].[hh_ovc_identification_prioritization] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
                        ([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],ids_id)
	                SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 1,[district_id],[ids_id]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_update] ON [dbo].[hh_ovc_identification_prioritization] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(oip_id) OR UPDATE(oip_comments) OR UPDATE(oip_date) OR UPDATE(oip_18_above_female) OR UPDATE(oip_18_above_male) OR UPDATE(oip_18_below_female) OR UPDATE(oip_18_below_male) OR UPDATE(oip_hiv_adult) OR UPDATE(oip_hiv_children) OR UPDATE(oip_cp_month) OR UPDATE(oip_interviewer_tel) OR UPDATE(cso_id) OR UPDATE(hh_id) OR UPDATE(hhm_id) OR UPDATE(swk_id) OR UPDATE(yn_id_children) OR UPDATE(yn_id_cp_abuse) OR UPDATE(yn_id_cp_abuse_physical) OR UPDATE(yn_id_cp_abuse_sexual) OR UPDATE(yn_id_cp_marriage_teen_parent) OR UPDATE(yn_id_cp_neglected) OR UPDATE(yn_id_cp_no_birth_register) OR UPDATE(yn_id_cp_orphan) OR UPDATE(yn_id_cp_pregnancy) OR UPDATE(yn_id_cp_referred) OR UPDATE(yn_id_edu_referred) OR UPDATE(yn_id_es_child_headed) OR UPDATE(yn_id_es_disability) OR UPDATE(yn_id_es_employment) OR UPDATE(yn_id_es_expense) OR UPDATE(yn_id_es_referred) OR UPDATE(yn_id_fsn_meals) OR UPDATE(yn_id_fsn_malnourished) OR UPDATE(yn_id_fsn_referred) OR UPDATE(yn_id_hwss_hiv_positive) OR UPDATE(yn_id_hwss_hiv_status) OR UPDATE(yn_id_hwss_referred) OR UPDATE(yn_id_hwss_shelter) OR UPDATE(yn_id_hwss_water) OR UPDATE(yn_id_psbc_referred) OR UPDATE(yn_id_psbc_stigmatized) OR UPDATE(ynna_id_edu_missed_school) OR UPDATE(ynna_id_edu_not_enrolled))
	                BEGIN
		                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
							([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],ids_id)
						SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id],[ids_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_ovc_identification_prioritization_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_ovc_identification_prioritization_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_ovc_identification_prioritization_delete] ON [dbo].[hh_ovc_identification_prioritization] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_ovc_identification_prioritization_upload]
                        ([oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id],ids_id)
	                SELECT [oip_id], [oip_comments], [oip_date], [oip_18_above_female], [oip_18_above_male], [oip_18_below_female], [oip_18_below_male], [oip_hiv_adult], [oip_hiv_children], [oip_cp_month], [oip_interviewer_tel], [cso_id], [hh_id], [hhm_id], [swk_id], [yn_id_children], [yn_id_cp_abuse], [yn_id_cp_abuse_physical], [yn_id_cp_abuse_sexual], [yn_id_cp_marriage_teen_parent], [yn_id_cp_neglected], [yn_id_cp_no_birth_register], [yn_id_cp_orphan], [yn_id_cp_pregnancy], [yn_id_cp_referred], [yn_id_edu_referred], [yn_id_es_child_headed], [yn_id_es_disability], [yn_id_es_employment], [yn_id_es_expense], [yn_id_es_referred], [yn_id_fsn_meals], [yn_id_fsn_malnourished], [yn_id_fsn_referred], [yn_id_hwss_hiv_positive], [yn_id_hwss_hiv_status], [yn_id_hwss_referred], [yn_id_hwss_shelter], [yn_id_hwss_water], [yn_id_psbc_referred], [yn_id_psbc_stigmatized], [ynna_id_edu_missed_school], [ynna_id_edu_not_enrolled], 
		                [usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 3,[district_id],[ids_id]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers

            Createlst_hh_identification_source(dbCon);

            Insertlst_hh_identification_source(dbCon);

            #endregion
        }

        public static void Update_kyenjojo_butunduzi_town_council(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            #region NewButunduuziTownCouncil
            strSQL = "DELETE FROM lst_sub_county";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstSubCounty(dbCon);
            #endregion NewButunduuziTownCouncil

            #region NewButunduuziTownCouncilParishes
            strSQL = "DELETE FROM lst_ward";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstWard(dbCon);

            strSQL = "UPDATE lst_ward SET wrd_name = UPPER(wrd_name)";
            dbCon.ExecuteNonQuery(strSQL);

            //#region MigrateExistingHHToNewParishes
            //strSQL = @"UPDATE hh_household SET wrd_id = '1915' 
            //        WHERE wrd_id = '1415'
            //        AND usr_date_create >= '2018-04-03'";
            //dbCon.ExecuteNonQuery(strSQL);

            //strSQL = @"UPDATE hh_household SET wrd_id = '1917' 
            //            WHERE wrd_id = '151'
            //            AND usr_date_create >= '2018-04-03' ";
            //dbCon.ExecuteNonQuery(strSQL);
            //#endregion MigrateExistingHHToNewParishes

            #endregion NewButunduuziTownCouncilParishes

            #region KigaraleDeactivate wards
            strSQL = "UPDATE lst_ward SET wrd_active = 0 WHERE wrd_id = '1056'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_active = 0 WHERE wrd_id = '1894'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_active = 0 WHERE wrd_id = '880'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_active = 0 WHERE wrd_id = '1893'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_active = 0 WHERE wrd_id = '1892'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET wrd_active = 0 WHERE wrd_id = '1895'";
            dbCon.ExecuteNonQuery(strSQL);

            #endregion KigaraleDeactivate wards

            #region DeactivaeRakaiKyebesct
            strSQL = "UPDATE lst_sub_county SET sct_active = 0 WHERE sct_id = '169'";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region DeactivateKyenjojosct
            strSQL = "UPDATE lst_sub_county SET sct_name = 'BUTUNDUUZI SUBCOUNTY' WHERE sct_id = '33'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_active = 0 WHERE sct_id = '33'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_active = 0 WHERE sct_id = '222'";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion
        }

        public static void SetImpProcessed(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables
            strSQL = @"UPDATE um_import_data SET impd_processed = 1";
            dbCon.ExecuteNonQuery(strSQL);
        }

        public static void UpdateLstInstitution(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            strSQL = "DELETE FROM lst_institution";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstInstitution(dbCon);
        }

        public static void Update_es_trainingType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            #region Community Training Types
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 8)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(8,'8','SILC',8,1,'EN',1,GETDATE(),1,GETDATE())";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 9)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(9,'9','Cottage Training',9,1,'EN',1,GETDATE(),1,GETDATE())";

            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 10)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(10,'10','Back Yard Gardening',10,1,'EN',1,GETDATE(),1,GETDATE())";

            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region TrainingSessions
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 78)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (78,'78','8','SILC presentation to community Leaders',78,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 79)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (79,'79','8','SILC presentation to community members',79,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 80)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (80,'80','8','Individual Self Screening',80,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 81)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (81,'81','8','Groups, Group formation and Governance.',81,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 82)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (82,'82','8','Member Responsibilities, Management Committee and Elections',82,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 83)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (83,'83','8','SILC constitution, Savings, safety of Group Assets',83,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 84)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (84,'84','8','Loan Fund Policies, Social fund policies',84,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 85)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (85,'85','8','Meetings and Constitution Finalization.',85,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 86)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (86,'86','8','Written R-keeping and SILC meeting Procedure I.',86,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 87)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (87,'87','8','Written Record-keeping and SILC Meeting Procedure II.',87,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 88)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (88,'88','8','Share Out Meeting.',88,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 89)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (89,'89','9','Sandal making',89,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 90)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (90,'90','9','Bakery',90,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 91)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (91,'91','9','Candle making',91,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 92)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (92,'92','9','Liquid Soap Making',92,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 93)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (93,'93','9','Bar Soap making',93,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 94)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (94,'94','9','Sanitary pad making',94,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 95)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (95,'95','9','Bricket making',95,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 96)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (96,'96','9','Book making',96,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 97)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (97,'97','9','Hand bags',97,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 98)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (98,'98','9','Crafts',98,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 99)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (99,'99','9','Confectionery',99,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);




            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 100)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (100,'100','10','Introduction to Back yard gardening',100,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 101)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (101,'101','10','Nursery bedding',101,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 102)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (102,'102','10','Types of backyard gardens',102,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 103)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (103,'103','10','Making Manure',103,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 104)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (104,'104','10','Organic Pest and disease control',104,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);


            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 105)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (105,'105','10','Vegetable preservation/ preparation',105,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion
        }

        public static void DropRecreateLstAgro_enterprise_ranking(DBConnection dbCon) //should go to version 4.3
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_agro_scoring_crops')
                       DROP TABLE lst_agro_scoring_crops";

            dbCon.ExecuteNonQuery(strSQL);

            Createlst_agro_scoring_crops(dbCon);

            strSQL = @"IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'lst_agro_scoring_parameter')
                       DROP TABLE lst_agro_scoring_parameter";
           
            dbCon.ExecuteNonQuery(strSQL);

            Createlst_agro_scoring_parameter(dbCon);
            Updatelst_agro_scoring_crops(dbCon);
            Insertlst_agro_scoring_parameter(dbCon);
        }

        public static void InserRecordType(DBConnection dbCon)
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables
            #region Insert Record Type
            strSQL = @"INSERT INTO lst_record_type (rtp_id, rtp_name, rtp_order, rtp_active, lng_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update)
                SELECT '7', 'Risk Assessment', 7, 1, 'EN', '1', '1', GETDATE(), GETDATE() WHERE NOT '7' IN (SELECT rtp_id FROM lst_record_type WHERE rtp_id = '7') ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"INSERT INTO lst_record_type (rtp_id, rtp_name, rtp_order, rtp_active, lng_id, usr_id_create, usr_id_update, usr_date_create, usr_date_update)
                SELECT '8', 'SOCY Viral Load Status Monitoring Tool', 8, 1, 'EN', '1', '1', GETDATE(), GETDATE() WHERE NOT '8' IN (SELECT rtp_id FROM lst_record_type WHERE rtp_id = '8') ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Insert Record Type
        }

        public static void Version35(DBConnection dbCon) 
        {
            #region Variables
            string strSQL = string.Empty;
            #endregion Variables

            InsertHipRecordType(dbCon);

            EditIdentification_prioritization(dbCon);

            Update_kyenjojo_butunduzi_town_council(dbCon);
            //SetImpProcessed(dbCon);
            UpdateLstInstitution(dbCon);
            Update_es_trainingType(dbCon);

            Createben_education_subsidy_school_readiness(dbCon);

            DropRecreateLstAgro_enterprise_ranking(dbCon);

            #region NewuploadTables
            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_education_subsidy_school_readiness_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('81','ben_education_subsidy_school_readiness_upload','edsr_id','81',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_ovc_viral_load_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('82','ben_ovc_viral_load_upload','vl_id','82',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_ovc_viral_load_member_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('83','ben_ovc_viral_load_member_upload','vlm_id','83',1,1,1,GETDATE(),GETDATE())
                    END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_youth_training_completion_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('84','ben_youth_training_completion_upload','ytc_id','84',1,1,1,GETDATE(),GETDATE())
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_youth_training_completion_skill_acquisition_tracking_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('85','ben_youth_training_completion_skill_acquisition_tracking_upload','ytc_skill_id','85',1,1,1,GETDATE(),GETDATE())
                    END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_youth_assessment_scoring_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('86','ben_youth_assessment_scoring_upload','yas_id',86,1,1,1,GETDATE(),GETDATE())
                    END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion NewuploadTables

            #region ben_education_subsidy_school_readiness_new_columns
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                   "WHERE[name] = N'hhm_id' AND[object_id] = OBJECT_ID(N'ben_youthgroup_savings_register_member')) " +
           "BEGIN " +
               "ALTER TABLE ben_youthgroup_savings_register_member ADD hhm_id Nvarchar(50) NULL " +
           "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                   "WHERE[name] = N'yn_direct_beneficiary' AND[object_id] = OBJECT_ID(N'ben_youthgroup_savings_register_member')) " +
           "BEGIN " +
               "ALTER TABLE ben_youthgroup_savings_register_member ADD yn_direct_beneficiary Nvarchar(50) NULL " +
           "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                  "WHERE[name] = N'hhm_id' AND[object_id] = OBJECT_ID(N'ben_youthgroup_savings_register_member_upload')) " +
          "BEGIN " +
              "ALTER TABLE ben_youthgroup_savings_register_member_upload ADD hhm_id Nvarchar(50) NULL " +
          "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                   "WHERE[name] = N'yn_direct_beneficiary' AND[object_id] = OBJECT_ID(N'ben_youthgroup_savings_register_member_upload')) " +
           "BEGIN " +
               "ALTER TABLE ben_youthgroup_savings_register_member_upload ADD yn_direct_beneficiary Nvarchar(50) NULL " +
           "END";
            dbCon.ExecuteNonQuery(strSQL);

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_insert] ON [dbo].[ben_youthgroup_savings_register_member] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_upload]
					   ([ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action]
						,[district_id],[hhm_id],[yn_direct_beneficiary])
	                SELECT [ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],1
						,[district_id],[hhm_id],[yn_direct_beneficiary]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_update] ON [dbo].[ben_youthgroup_savings_register_member] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_upload]
					   ([ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action]
						,[district_id],[hhm_id],[yn_direct_beneficiary])
	                SELECT [ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],2
						,[district_id],[hhm_id],[yn_direct_beneficiary]
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'ben_youthgroup_savings_register_member_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[ben_youthgroup_savings_register_member_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[ben_youthgroup_savings_register_member_delete] ON [dbo].[ben_youthgroup_savings_register_member] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[ben_youthgroup_savings_register_member_upload]
					   ([ysrm_id],[ysr_id],[hhm_code] ,[hhm_name] ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],[trg_action]
						,[district_id],[hhm_id],[yn_direct_beneficiary])
	                SELECT [ysrm_id],[ysr_id],[hhm_code] ,[hhm_name],[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],3
						,[district_id],[hhm_id],[yn_direct_beneficiary]
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers

            #region Remove Nulls
            strSQL = "UPDATE ben_youthgroup_savings_register_member SET hhm_id = '' WHERE hhm_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE ben_youthgroup_savings_register_member SET yn_direct_beneficiary = '' WHERE yn_direct_beneficiary IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE ben_youthgroup_savings_register_member_upload SET hhm_id = '' WHERE hhm_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE ben_youthgroup_savings_register_member_upload SET yn_direct_beneficiary = '' WHERE yn_direct_beneficiary IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Remove Nulls

            #endregion ben_education_subsidy_school_readiness_new_columns

            #region Record Types
            InserRecordType(dbCon);
            #endregion Record Types

            Createben_ovc_viral_load(dbCon);

            Createlst_linkages_coordinator(dbCon);

            NewCso(dbCon);

            NewLstCoordinators(dbCon);

            Createben_youth_training_completion(dbCon);

            Createben_youth_assessment_scoring(dbCon);

            Createlst_youth_assessment_scoring_parameters(dbCon);

            Insertlst_youth_assessment_scoring_parameters(dbCon);
        }

        public static void NewCso(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            strSQL = "DELETE FROM [dbo].[lst_cso]";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstCSO(dbCon);

            InsertTempCSOs(dbCon);
        }

        public static void NewLstCoordinators(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            strSQL = "DELETE FROM lst_linkages_coordinator";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLst_linkages_coordinator(dbCon);
        }

        public static void Updatelst_household_status(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            strSQL = "DELETE FROM lst_household_status";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstHouseholdStatus(dbCon);

            #region Remove Nulls
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_update] ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household SET hh_status_reason = '-1' WHERE hh_status_reason IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household SET hh_tel = '-1' WHERE hh_tel IS NULL ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"CREATE TRIGGER [dbo].[hh_household_update] ON [dbo].[hh_household] FOR UPDATE
                AS
                BEGIN
	                IF (UPDATE(hh_id) OR UPDATE(hh_code) OR UPDATE(hh_status_reason) OR UPDATE(hh_tel) OR UPDATE(hh_village) OR UPDATE(hhs_id) OR UPDATE(hhsr_id) OR UPDATE(swk_id) OR UPDATE(wrd_id))
	                BEGIN
		                INSERT INTO [dbo].[hh_household_upload]
							([hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], [trg_action],[district_id])
						SELECT [hh_id], [hh_code], [hh_status_reason], [hh_tel], [hh_village], [hhs_id], [hhsr_id], [swk_id], [wrd_id], 
							[usr_id_create], [usr_id_update], [usr_date_create], [usr_date_update], [ofc_id], 2,[district_id]
	                  FROM inserted
	                END
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion
        }

        public static void prt_subcounty_ovc_checklist_new_column(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            #region sct_id
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                           "WHERE[name] = N'sct_id' AND[object_id] = OBJECT_ID(N'prt_subcounty_ovc_checklist')) " +
                   "BEGIN " +
                       "ALTER TABLE prt_subcounty_ovc_checklist ADD sct_id Nvarchar(50) NULL " +
                   "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                          "WHERE[name] = N'sct_id' AND[object_id] = OBJECT_ID(N'prt_subcounty_ovc_checklist_upload')) " +
                  "BEGIN " +
                      "ALTER TABLE prt_subcounty_ovc_checklist_upload ADD sct_id Nvarchar(50) NULL " +
                  "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion sct_id

            #region removeNulls
            strSQL = "UPDATE prt_subcounty_ovc_checklist SET sct_id = '' WHERE sct_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE prt_subcounty_ovc_checklist_upload SET sct_id = '' WHERE sct_id IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion removeNulls

            #region Triggers

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_subcounty_ovc_checklist_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_subcounty_ovc_checklist_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_subcounty_ovc_checklist_insert] ON [dbo].[prt_subcounty_ovc_checklist] FOR INSERT
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_subcounty_ovc_checklist_upload]
				   ([soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],[trg_action],[district_id],sct_id)
	                SELECT [soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],1,[district_id],sct_id
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_subcounty_ovc_checklist_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_subcounty_ovc_checklist_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_subcounty_ovc_checklist_update] ON [dbo].[prt_subcounty_ovc_checklist] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_subcounty_ovc_checklist_upload]
				   ([soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],[trg_action],[district_id],sct_id)
	                SELECT [soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],2,[district_id],sct_id
                  FROM inserted
                END ";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'prt_subcounty_ovc_checklist_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[prt_subcounty_ovc_checklist_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[prt_subcounty_ovc_checklist_delete] ON [dbo].[prt_subcounty_ovc_checklist] FOR DELETE
                AS
                BEGIN
	                INSERT INTO [dbo].[prt_subcounty_ovc_checklist_upload]
				   ([soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],[trg_action],[district_id],sct_id)
	                SELECT [soc_id],[soc_date],[soc_cso_report],[soc_cso_total],[soc_action_points_implemented],[soc_action_points_total_identified],[dst_id]
				   ,[fy_id],[qy_id],[yn_id_meetings_held],[yn_id_membership_constituted],[yn_id_cdo_supervision],[yn_signed_minutes_available]
				   ,[yn_id_sovcc_discussed_minutes_available],[yn_id_ovcmis_district],[usr_id_create] ,[usr_id_update],[usr_date_create],[usr_date_update]
				   ,[ofc_id],3,[district_id],sct_id
                  FROM deleted
                END ";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers
        }

        public static void update_mitooma_subcounty(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            #region New Wards
            strSQL = @"DELETE FROM lst_ward";
            dbCon.ExecuteNonQuery(strSQL);

            InsertLstWard(dbCon);
            Version22(dbCon);
            #endregion New Wards
        }

        public static void Insert_new_sync_upload(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            strSQL = @"IF NOT EXISTS(SELECT sul_name FROM lst_sync_upload WHERE sul_name = 'ben_youth_tracer_upload')
                    BEGIN
                    INSERT INTO lst_sync_upload(sul_id,sul_name,sul_key,sul_order,sul_active,usr_id_create,usr_id_update,usr_date_create,usr_date_update)
                    VALUES('87','ben_youth_tracer_upload','ytr_id',87,1,1,1,GETDATE(),GETDATE())
                    END";
            dbCon.ExecuteNonQuery(strSQL);
        }

        public static void UpdateHousehold_RiskAssessmentTool(DBConnection dbCon)
        {
            string strSQL = string.Empty;
            string strSQLTrigger = string.Empty;

            #region hh_household_risk_assessment_beneficiaries
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                  "WHERE[name] = N'yn_accidental_exposure' AND[object_id] = OBJECT_ID(N'hh_household_risk_assessment_beneficiaries')) " +
          "BEGIN " +
              "ALTER TABLE hh_household_risk_assessment_beneficiaries ADD yn_accidental_exposure Nvarchar(50) NULL " +
          "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                  "WHERE[name] = N'yn_drug_abuse' AND[object_id] = OBJECT_ID(N'hh_household_risk_assessment_beneficiaries')) " +
          "BEGIN " +
              "ALTER TABLE hh_household_risk_assessment_beneficiaries ADD yn_drug_abuse Nvarchar(50) NULL " +
          "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_risk_assessment_beneficiaries

            #region hh_household_risk_assessment_beneficiaries_upload
            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                 "WHERE[name] = N'yn_accidental_exposure' AND[object_id] = OBJECT_ID(N'hh_household_risk_assessment_beneficiaries_upload')) " +
         "BEGIN " +
             "ALTER TABLE hh_household_risk_assessment_beneficiaries_upload ADD yn_accidental_exposure Nvarchar(50) NULL " +
         "END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "IF NOT EXISTS(SELECT * FROM sys.columns " +
                  "WHERE[name] = N'yn_drug_abuse' AND[object_id] = OBJECT_ID(N'hh_household_risk_assessment_beneficiaries_upload')) " +
          "BEGIN " +
              "ALTER TABLE hh_household_risk_assessment_beneficiaries_upload ADD yn_drug_abuse Nvarchar(50) NULL " +
          "END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion hh_household_risk_assessment_beneficiaries_upload

            #region DisableTrigger
            strSQLTrigger = "ALTER TABLE hh_household_risk_assessment_beneficiaries DISABLE TRIGGER hh_household_risk_assessment_beneficiaries_update";
            dbCon.ExecuteNonQuery(strSQLTrigger);
            #endregion DisableTrigger

            #region RemoveNulls
            strSQL = "UPDATE hh_household_risk_assessment_beneficiaries SET yn_accidental_exposure = '' WHERE yn_accidental_exposure IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_risk_assessment_beneficiaries SET yn_drug_abuse = '' WHERE yn_drug_abuse IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_risk_assessment_beneficiaries_upload SET yn_accidental_exposure = '' WHERE yn_accidental_exposure IS NULL";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE hh_household_risk_assessment_beneficiaries_upload SET yn_drug_abuse = '' WHERE yn_drug_abuse IS NULL";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion RemoveNulls

            #region EnableTrigger
            strSQLTrigger = "ALTER TABLE hh_household_risk_assessment_beneficiaries ENABLE TRIGGER hh_household_risk_assessment_beneficiaries_update";
            dbCon.ExecuteNonQuery(strSQLTrigger);
            #endregion  EnableTrigger

            #region Triggers
            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_beneficiaries_insert' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_insert] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_insert] ON [dbo].[hh_household_risk_assessment_beneficiaries] FOR insert
                AS
                BEGIN
	                 INSERT INTO [dbo].[hh_household_risk_assessment_beneficiaries_upload]
                           ([ras_id],[rasm_id] ,[hh_member_id],[hh_member_code],
                            [current_hiv_status_id] ,[is_on_art],[screen_hospital_last_six_months],[screen_either_parents_deceased]
			                ,[screen_either_siblings_deceased],[screen_poor_health_last_three_months] ,[screen_adult_child_with_hiv_or_tb]
			                ,[screen_below_relative_grade] ,[child_eligible_for_test_refferal] ,[care_giver_accepted_to_test_child],[test_result]
			                ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],trg_action ,[district_id],[yn_accidental_exposure],[yn_drug_abuse])     
                    SELECT [ras_id],[rasm_id],[hh_member_id] ,[hh_member_code]  ,[current_hiv_status_id]
                            ,[is_on_art] ,[screen_hospital_last_six_months],[screen_either_parents_deceased],[screen_either_siblings_deceased],[screen_poor_health_last_three_months]
                             ,[screen_adult_child_with_hiv_or_tb],[screen_below_relative_grade] ,[child_eligible_for_test_refferal],[care_giver_accepted_to_test_child],[test_result]
                             ,[usr_id_create] ,[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],1 ,[district_id],[yn_accidental_exposure],[yn_drug_abuse]
                    FROM inserted 
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_beneficiaries_update' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_update] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_update] ON [dbo].[hh_household_risk_assessment_beneficiaries] FOR UPDATE
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_beneficiaries_upload]
                       ([ras_id],[rasm_id] ,[hh_member_id],[hh_member_code],
                        [current_hiv_status_id] ,[is_on_art],[screen_hospital_last_six_months],[screen_either_parents_deceased]
			            ,[screen_either_siblings_deceased],[screen_poor_health_last_three_months] ,[screen_adult_child_with_hiv_or_tb]
			            ,[screen_below_relative_grade] ,[child_eligible_for_test_refferal] ,[care_giver_accepted_to_test_child],[test_result]
			            ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],trg_action ,[district_id],[yn_accidental_exposure],[yn_drug_abuse])     
                    SELECT [ras_id],[rasm_id],[hh_member_id] ,[hh_member_code]  ,[current_hiv_status_id]
                        ,[is_on_art] ,[screen_hospital_last_six_months],[screen_either_parents_deceased],[screen_either_siblings_deceased],[screen_poor_health_last_three_months]
                         ,[screen_adult_child_with_hiv_or_tb],[screen_below_relative_grade] ,[child_eligible_for_test_refferal],[care_giver_accepted_to_test_child],[test_result]
                         ,[usr_id_create] ,[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],2 ,[district_id],[yn_accidental_exposure],[yn_drug_abuse]
                    FROM inserted 
                END";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'hh_household_risk_assessment_beneficiaries_delete' AND [type] = 'TR')
                DROP TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_delete] ";
            dbCon.ExecuteNonQuery(strSQL);
            strSQL = @"CREATE TRIGGER [dbo].[hh_household_risk_assessment_beneficiaries_delete] ON [dbo].[hh_household_risk_assessment_beneficiaries] FOR delete
                AS
                BEGIN
	                INSERT INTO [dbo].[hh_household_risk_assessment_beneficiaries_upload]
                   ([ras_id],[rasm_id] ,[hh_member_id],[hh_member_code],
                    [current_hiv_status_id] ,[is_on_art],[screen_hospital_last_six_months],[screen_either_parents_deceased]
			        ,[screen_either_siblings_deceased],[screen_poor_health_last_three_months] ,[screen_adult_child_with_hiv_or_tb]
			        ,[screen_below_relative_grade] ,[child_eligible_for_test_refferal] ,[care_giver_accepted_to_test_child],[test_result]
			        ,[usr_id_create],[usr_id_update],[usr_date_create],[usr_date_update] ,[ofc_id],trg_action ,[district_id],[yn_accidental_exposure],[yn_drug_abuse])     
                SELECT [ras_id],[rasm_id],[hh_member_id] ,[hh_member_code]  ,[current_hiv_status_id]
                    ,[is_on_art] ,[screen_hospital_last_six_months],[screen_either_parents_deceased],[screen_either_siblings_deceased],[screen_poor_health_last_three_months]
                     ,[screen_adult_child_with_hiv_or_tb],[screen_below_relative_grade] ,[child_eligible_for_test_refferal],[care_giver_accepted_to_test_child],[test_result]
                     ,[usr_id_create] ,[usr_id_update] ,[usr_date_create],[usr_date_update] ,[ofc_id],3 ,[district_id],[yn_accidental_exposure],[yn_drug_abuse]
                      FROM deleted 
                END";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion Triggers

        }

        public static void CreateNewDistricts(DBConnection dbCon)
        {
            string strSQL = string.Empty;
            InsertLstDistrict(dbCon);
            InsertLstSubCounty(dbCon);

            #region updateRukigaSubcounties
            strSQL = "UPDATE lst_sub_county SET dst_id = '24' WHERE sct_id = '112'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '24' WHERE sct_id = '256'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '24' WHERE sct_id = '98'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '24' WHERE sct_id = '19'";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region updateKikuubeSubcounties
            strSQL = "UPDATE lst_sub_county SET dst_id = '22' WHERE sct_id = '10'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '22' WHERE sct_id = '16'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '22' WHERE sct_id = '156'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '22' WHERE sct_id = '164'";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region updateKyoteraSubcounties
            strSQL = "UPDATE lst_sub_county SET dst_id = '23' WHERE sct_id = '180'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '23' WHERE sct_id = '146'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '23' WHERE sct_id = '110'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET dst_id = '23' WHERE sct_id = '89'";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region updateWakisoSubCountyNames
            strSQL = "UPDATE lst_sub_county SET sct_name = 'WAKISO SUB COUNTY' WHERE sct_id = '266'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'BUSSI SUB COUNTY' WHERE sct_id = '335'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'KAJJANSI TOWN COUNCIL' WHERE sct_id = '265'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'KATABI TOWN COUNCIL' WHERE sct_id = '115'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'NDEJJE DIVISION' WHERE sct_id = '342'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'KIRA DIVISION' WHERE sct_id = '143'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'KIRA DIVISION' WHERE sct_id = '143'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'NANSANA DIVISION' WHERE sct_id = '210'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'NABWERU DIVISION' WHERE sct_id = '206'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_sub_county SET sct_name = 'KASANGATI TOWN COUNCIL' WHERE sct_id = '209'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET sct_id = '340' WHERE wrd_id = '1043'";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = "UPDATE lst_ward SET sct_id = '340' WHERE wrd_id = '1847'";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion
        }

        public static void NewTrainingTypes(DBConnection dbCon)
        {
            string strSQL = string.Empty;

            #region TrainingTypes
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 11)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(11,'11','Dairy Farming ',11,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 12)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(12,'12','Dairy Farming ',12,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 13)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(13,'13','Agronomy/Production Trainings Coffeelands',13,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 14)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(14,'14','Organisation/Institution Development Coffeelands',14,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type WHERE ttp_order = 15)
	                 INSERT INTO [dbo].[lst_es_training_type]([ttp_sid],[ttp_id],[ttp_name],[ttp_order],[ttp_active],[lng_id],[usr_id_create],[usr_id_update],[usr_date_create] ,[usr_date_update])
                     VALUES(15,'15','Market Access/ Marketing Training Coffeelands',15,1,'EN',1,GETDATE(),1,GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

            #region Sessions
            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 100)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (100,'100','11','Dairy entrepreneurship & Management',100,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 101)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (101,'101','11','Animal Nutrition',101,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 102)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (102,'102','11','Herd Health Management & Disease Control',102,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 103)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (103,'103','11','Life skills training',103,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 104)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (104,'104','13','FFS methodology',104,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 105)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (105,'105','13','Contact farmers training',105,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 106)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (106,'106','13','Harvest and Post-Harvest Handling practices',106,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 107)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (107,'107','13','Climate Smart Agriculture',107,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 108)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (108,'108','13','Good Agronomic Practices',108,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 109)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (109,'109','14','Producer Organization formation',109,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 110)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (110,'110','14','Leadership and management',110,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 111)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (111,'111','14','Depot Committee formation',111,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 112)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (112,'112','14','Capacity building of leaders',112,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 113)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (113,'113','14','Sensitization and mobilization',113,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 114)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (114,'114','14','Record keeping',114,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 115)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (115,'115','14','Business and financial literacy',115,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 116)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (116,'116','14','Gender equality principles and performance monitoring',116,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 117)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (117,'117','14','Review meetings at Producer organization and Depot committees',117,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 118)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (118,'118','15','Train and coach Depot committees on coffee marketing',118,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 119)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (119,'119','15','Collective marketing',119,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 120)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (120,'120','15','Value addition trainings',120,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 121)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (121,'121','15','Quality assurance trainings',121,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 122)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (122,'122','15','Market analysis',122,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 123)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (123,'123','15','Linkage trainings',123,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);

            strSQL = @"IF NOT EXISTS(SELECT* FROM lst_es_training_type_session WHERE ttps_order = 124)
	 INSERT INTO [dbo].[lst_es_training_type_session]([ttps_sid],[ttps_id],[ttp_id],[ttps_name],[ttps_order] ,[ttps_active],[lng_id],[usr_id_create],[usr_id_update]
           ,[usr_date_create] ,[usr_date_update])
     VALUES (124,'124','15','Strengthening the Value chain network',124,1 ,'EN',1,1,GETDATE(),GETDATE())";
            dbCon.ExecuteNonQuery(strSQL);
            #endregion

        }
    }
}
    #endregion Version Control
   
